

----QUIT----(11 August 2019 20:30:30) CuisUniversity-3839.image priorSource: 9989307!

----STARTUP---- (11 August 2019 20:30:31) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-3839.image!


!classDefinition: #BecomeTestExperiment category: #'BaseImageTests-Kernel'!
Object subclass: #BecomeTestExperiment
	instanceVariableNames: 'a b'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'BaseImageTests-Kernel'!

!classDefinition: #BecomeTestExperiment category: #'BaseImageTests-Kernel'!
Object subclass: #BecomeTestExperiment
	instanceVariableNames: 'a b'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'BaseImageTests-Kernel'!
!ArrayLiteralTest methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:30:50'!
array ^ #(nil true false)! !

ArrayLiteralTest removeSelector: #array!
!ArrayLiteralTest methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:30:50'!
array ^ #(#nil #true #false #'nil' #'true' #'false')! !

ArrayLiteralTest removeSelector: #array!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToAddInstVar!

!classDefinition: #SuperclassWithInstVar category: #'__Refactoring-TestData__'!
Object subclass: #SuperclassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__'!
SuperclassWithInstVar subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToAddInstVar!

Smalltalk removeClassNamed: #SuperclassWithInstVar!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithInstVar category: #'__Refactoring-TestData__'!
ClassToAddInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #SubclassWithInstVar!

Smalltalk removeClassNamed: #ClassToAddInstVar!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToAddInstVar!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:31'!
m1 | a | a := 10.! !

Smalltalk removeClassNamed: #ClassToAddInstVar!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:31'!
m1:a! !

Smalltalk removeClassNamed: #ClassToAddInstVar!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:32'!
m1 [ :a | ] value: 1! !

Smalltalk removeClassNamed: #ClassToAddInstVar!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:32'!
m1 [ | a | ] value! !

Smalltalk removeClassNamed: #ClassToAddInstVar!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassOfClassToRefactor category: #'__Refactoring-TestData__'!
ClassToAddInstVar subclass: #SubclassOfClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassOfClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:33'!
m1 | a | ! !

Smalltalk removeClassNamed: #SubclassOfClassToRefactor!

Smalltalk removeClassNamed: #ClassToAddInstVar!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToAddInstVar!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:34'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:34'!
sender_m1 self m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:34'!
m1: newParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:34' prior: 50722580!
sender_m1 self m1: 1! !

ClassToAddParameter removeSelector: #m1!

Smalltalk removeClassNamed: #ClassToAddParameter!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:35'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:35'!
sender_m1 self m1: 1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:35'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:35' prior: 50722606!
sender_m1 self m1: 1 m2: 2! !

ClassToAddParameter removeSelector: #m1:!

Smalltalk removeClassNamed: #ClassToAddParameter!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:35'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:35'!
sender_m1 self m1: 1. self m1: 1.! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:35'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:35' prior: 50722633!
sender_m1 self m1: 1 m2: 2. self m1: 1 m2: 2.! !

ClassToAddParameter removeSelector: #m1:!

Smalltalk removeClassNamed: #ClassToAddParameter!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:36'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:36'!
sender_m1 self m1: self size.! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:36'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:36' prior: 50722661!
sender_m1 self m1: self size m2: 2.! !

ClassToAddParameter removeSelector: #m1:!

Smalltalk removeClassNamed: #ClassToAddParameter!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:36'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:36'!
sender_m1 self m1: self size + 4.! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:36'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:36' prior: 50722689!
sender_m1 self m1: self size + 4 m2: 2.! !

ClassToAddParameter removeSelector: #m1:!

Smalltalk removeClassNamed: #ClassToAddParameter!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:37'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:37'!
sender_m1 self m1: (self at: 1 put: 2).! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:37'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:37' prior: 50722717!
sender_m1 self m1: (self at: 1 put: 2) m2: 2.! !

ClassToAddParameter removeSelector: #m1:!

Smalltalk removeClassNamed: #ClassToAddParameter!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:38'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:38'!
sender_m1 #m1 size! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:38'!
m1: newParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:38' prior: 50722745!
sender_m1 #m1: size! !

ClassToAddParameter removeSelector: #m1!

Smalltalk removeClassNamed: #ClassToAddParameter!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:38'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:38'!
sender_m1 #m1: size.! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:38'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:38' prior: 50722771!
sender_m1 #m1:m2: size.! !

ClassToAddParameter removeSelector: #m1:!

Smalltalk removeClassNamed: #ClassToAddParameter!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddParameter
	instanceVariableNames: 'newParam'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:40'!
m1! !

Smalltalk removeClassNamed: #ClassToAddParameter!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:41'!
m1:newParam! !

Smalltalk removeClassNamed: #ClassToAddParameter!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:43'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:43'!
sender_m1 self m1
	! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:43'!
m1: newParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:43' prior: 50722821!
sender_m1 self m1: 1
	! !

ClassToAddParameter removeSelector: #m1!

Smalltalk removeClassNamed: #ClassToAddParameter!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:44'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:44'!
sender_m1 self m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:44'!
m1: newParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:44' prior: 50722846!
sender_m1 self m1: (self at: 1)! !

ClassToAddParameter removeSelector: #m1!

Smalltalk removeClassNamed: #ClassToAddParameter!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:45'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:45'!
sender_m1 self m1: 1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:45'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:45' prior: 50722872!
sender_m1 self m1: 1 m2: (self at: 1)! !

ClassToAddParameter removeSelector: #m1:!

Smalltalk removeClassNamed: #ClassToAddParameter!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:45'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:45'!
sender_m1 self m1:[ 1 factorial ]! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:45'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:45' prior: 50722900!
sender_m1 self m1:[ 1 factorial ] m2: 1! !

ClassToAddParameter removeSelector: #m1:!

Smalltalk removeClassNamed: #ClassToAddParameter!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:46'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:46'!
sender self m1: 1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:46'!
m2: newParam m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:46' prior: 50722928!
sender self m2: 2 m1: 1! !

ClassToAddParameter removeSelector: #m1:!

Smalltalk removeClassNamed: #ClassToAddParameter!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:46'!
m1: p1 m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:46'!
sender self m1: 1 m3: 3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:46'!
m1: p1 m2: newParam m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:46' prior: 50722954!
sender self m1: 1 m2: 2 m3: 3! !

ClassToAddParameter removeSelector: #m1:m3:!

Smalltalk removeClassNamed: #ClassToAddParameter!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:47'!
m1: p1 m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:47'!
sender
	self m1: 1 m3: 3.
	self
		m1: 4
		m3: 6! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:47'!
m1: p1 m2: newParam m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:47' prior: 50722981!
sender
	self m1: 1 m2: 2 m3: 3.
	self
		m1: 4
		m2: 2 m3: 6! !

ClassToAddParameter removeSelector: #m1:m3:!

Smalltalk removeClassNamed: #ClassToAddParameter!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:48'!
m1

! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:48'!
sender_m1 self m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:48'!
m1: newParam

! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:48' prior: 50723009!
sender_m1 self m1: 1! !

ClassToAddParameter removeSelector: #m1!

Smalltalk removeClassNamed: #ClassToAddParameter!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToAddParameter!

!classDefinition: #ClassToChangeSelectorOrder category: #'__Refactoring-TestData__'!
Object subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:50'!
m1: p1 m2: p2! !
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:50'!
m2: p2 m1: p1! !

ClassToChangeSelectorOrder removeSelector: #m1:m2:!

Smalltalk removeClassNamed: #ClassToChangeSelectorOrder!

!classDefinition: #ClassToChangeSelectorOrder category: #'__Refactoring-TestData__'!
Object subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:51'!
m1: p1 m2: p2! !
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:51'!
m2: p2 m1: p1! !

ClassToChangeSelectorOrder removeSelector: #m1:m2:!

Smalltalk removeClassNamed: #ClassToChangeSelectorOrder!

!classDefinition: #ClassToChangeSelectorOrder category: #'__Refactoring-TestData__'!
Object subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:51'!
m1: p1 m2: p2 m3: p3! !
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:31:51'!
m2: p2 m3: p3 m1: p1! !

ClassToChangeSelectorOrder removeSelector: #m1:m2:m3:!

Smalltalk removeClassNamed: #ClassToChangeSelectorOrder!

!classDefinition: #ClassToExtractTemp category: #'__Refactoring-TestData__'!
Object subclass: #ClassToExtractTemp
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToExtractTemp!

!classDefinition: #ClassToRefactorSuperclass category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRefactorSuperclass
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractTemp category: #'__Refactoring-TestData__'!
ClassToRefactorSuperclass subclass: #ClassToExtractTemp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToExtractTemp!

Smalltalk removeClassNamed: #ClassToRefactorSuperclass!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: #'__Refactoring-TestData__'!
Object subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToAddSuperclass!

Smalltalk removeClassNamed: #AddedSuperclass!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddSuperclass
	instanceVariableNames: 'instVar1 instVar2'
	classVariableNames: 'ClassVar1 ClassVar2'
	poolDictionaries: 'SharedAAA'
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: #'__Refactoring-TestData__'!
Object subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: 'instVar1 instVar2'
	classVariableNames: 'ClassVar1 ClassVar2'
	poolDictionaries: 'SharedAAA'
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToAddSuperclass!

Smalltalk removeClassNamed: #AddedSuperclass!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: #'__Refactoring-TestData__'!
Object subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToAddSuperclass!

Smalltalk removeClassNamed: #AddedSuperclass!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: #'__Refactoring-TestData__'!
Object subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToAddSuperclass!

Smalltalk removeClassNamed: #AddedSuperclass!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AlreadyExistingClass category: #'__Refactoring-TestData__'!
Object subclass: #AlreadyExistingClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToAddSuperclass!

Smalltalk removeClassNamed: #AlreadyExistingClass!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: #'__Refactoring-TestData__'!
Object subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToAddSuperclass!

Smalltalk removeClassNamed: #AddedSuperclass!

!classDefinition: #ClassWithoutInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassWithoutInstVar!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassWithInstVar!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassWithInstVar
	instanceVariableNames: 'a b'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:05'!
m1 ^a! !

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassWithInstVar!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassWithInstVar
	instanceVariableNames: 'a b'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithReferenceInstVar category: #'__Refactoring-TestData__'!
ClassWithInstVar subclass: #ClassWithReferenceInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithReferenceInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:06'!
m1 ^a! !

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassWithReferenceInstVar!

Smalltalk removeClassNamed: #ClassWithInstVar!

!classDefinition: #ClassWithoutInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassWithoutInstVar!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:07'!
m1 ^a! !

Smalltalk removeClassNamed: #ClassWithInstVar!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassWithInstVar!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:09'!
m1: parameter! !

Smalltalk removeClassNamed: #ClassToRemoveParameter!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:09'!
m1: parameter! !

Smalltalk removeClassNamed: #ClassToRemoveParameter!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:10'!
m1: parameter! !

Smalltalk removeClassNamed: #ClassToRemoveParameter!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:10'!
m1: parameter ^parameter! !

Smalltalk removeClassNamed: #ClassToRemoveParameter!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:11'!
m1:parameter1 
	m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:11'!
m2:parameter2! !

ClassToRemoveParameter removeSelector: #m1:m2:!

Smalltalk removeClassNamed: #ClassToRemoveParameter!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:11'!
m1:parameter1 m2:parameter2
	| t1 |! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:11'!
m1:parameter1 
	| t1 |! !

ClassToRemoveParameter removeSelector: #m1:m2:!

Smalltalk removeClassNamed: #ClassToRemoveParameter!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:12'!
m0: parameter0 
	m1:parameter1 
	m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:12'!
m0: parameter0 
	m2:parameter2! !

ClassToRemoveParameter removeSelector: #m0:m1:m2:!

Smalltalk removeClassNamed: #ClassToRemoveParameter!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:13'!
m1:parameter1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:13'!
m1! !

ClassToRemoveParameter removeSelector: #m1:!

Smalltalk removeClassNamed: #ClassToRemoveParameter!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:13'!
m1:parameter1 m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:13'!
sender
		self 
			m1: 1 
			m2: 2 ! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:13'!
m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:13' prior: 50723512!
sender
		self 
			m2: 2 ! !

ClassToRemoveParameter removeSelector: #m1:m2:!

Smalltalk removeClassNamed: #ClassToRemoveParameter!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:14'!
m1:parameter1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:14'!
sender
		self 
			m1:
			 (1+2).! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:14'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:14' prior: 50723540!
sender
		self 
			m1.! !

ClassToRemoveParameter removeSelector: #m1:!

Smalltalk removeClassNamed: #ClassToRemoveParameter!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:14'!
m1:parameter1 m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:14'!
sender
		self m1: (1+1) m2: 2.
		self m1: 3 m2: 4.! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:14'!
m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:14' prior: 50723567!
sender
		self m2: 2.
		self m2: 4.! !

ClassToRemoveParameter removeSelector: #m1:m2:!

Smalltalk removeClassNamed: #ClassToRemoveParameter!

!classDefinition: #OldClassTest07 category: #'__Refactoring-TestData__'!
Object subclass: #OldClassTest07
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #NewClassTest07!

!classDefinition: #OldClassTest07 category: #'__Refactoring-TestData__'!
Object subclass: #OldClassTest07
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest07 methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:17'!
m1 OldClassTest07 new! !
!NewClassTest07 methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:17' prior: 50723599!
m1 NewClassTest07 new! !

Smalltalk removeClassNamed: #NewClassTest07!

!classDefinition: #OldClassTest08 category: #'__Refactoring-TestData__'!
Object subclass: #OldClassTest08
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest08 methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:18'!
m1 #OldClassTest08 size! !
!NewClassTest8 methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:18' prior: 50723615!
m1 #NewClassTest8 size! !

Smalltalk removeClassNamed: #NewClassTest8!

!classDefinition: #OldClassTest09 category: #'__Refactoring-TestData__'!
Object subclass: #OldClassTest09
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest09 methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:18'!
m1 OldClassTest09 new. Object new! !
!NewClassTest09 methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:18' prior: 50723631!
m1 NewClassTest09 new. Object new! !

Smalltalk removeClassNamed: #NewClassTest09!

!classDefinition: #OldClassTest10 category: #'__Refactoring-TestData__'!
Object subclass: #OldClassTest10
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest10 methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:19'!
m1 #OldClassTest10 size. #Object size! !
!NewClassTest10 methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:19' prior: 50723649!
m1 #NewClassTest10 size. #Object size! !

Smalltalk removeClassNamed: #NewClassTest10!

!classDefinition: #OldClassTest11 category: #'__Refactoring-TestData__'!
Object subclass: #OldClassTest11
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest11 methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:20'!
m1 OldClassTest11 new. #OldClassTest11 size! !
!NewClassTest11 methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:20' prior: 50723667!
m1 NewClassTest11 new. #NewClassTest11 size! !

Smalltalk removeClassNamed: #NewClassTest11!

!classDefinition: #OldClassTest14 category: #'__Refactoring-TestData__'!
Object subclass: #OldClassTest14
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #OldClassTest14!

!classDefinition: #ClassReferencingClassVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:21'!
m1 ^OldClassTest15! !

!classDefinition: #OldClassTest15 category: #'__Refactoring-TestData__'!
Object subclass: #OldClassTest15
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #NewClassTest15!

Smalltalk removeClassNamed: #ClassReferencingClassVar!

!classDefinition: #ClassReferencingClassVarSuperclass category: #'__Refactoring-TestData__'!
Object subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVar category: #'__Refactoring-TestData__'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:22'!
m1 ^OldClassTest16! !

!classDefinition: #OldClassTest16 category: #'__Refactoring-TestData__'!
Object subclass: #OldClassTest16
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #NewClassTest16!

Smalltalk removeClassNamed: #ClassReferencingClassVar!

Smalltalk removeClassNamed: #ClassReferencingClassVarSuperclass!

!classDefinition: #ClassReferencingClassVarSuperclass category: #'__Refactoring-TestData__'!
Object subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVar category: #'__Refactoring-TestData__'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:23'!
m1 ^NewClassTest17! !

!classDefinition: #OldClassTest17 category: #'__Refactoring-TestData__'!
Object subclass: #OldClassTest17
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #NewClassTest17!

Smalltalk removeClassNamed: #ClassReferencingClassVar!

Smalltalk removeClassNamed: #ClassReferencingClassVarSuperclass!

!classDefinition: #OldClassTest18 category: #'__Refactoring-TestData__'!
Object subclass: #OldClassTest18
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest18 methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:24'!
m1 ^OldClassTest18! !
!NewClassTest18 methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:25' prior: 50723781!
m1 ^NewClassTest18! !

Smalltalk removeClassNamed: #NewClassTest18!

!classDefinition: #OldClassTest18 category: #'__Refactoring-TestData__'!
Object subclass: #OldClassTest18
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #OldClassTest18!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__'!
Object subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:28'!
m1 ^OldNameToRename__! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:28' prior: 50723809!
m1 ^NewNameToRename__! !

Smalltalk removeClassNamed: #AClassToRefactor!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__'!
Object subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:28'!
m1 ^#OldNameToRename__! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:28' prior: 50723825!
m1 ^#NewNameToRename__! !

Smalltalk removeClassNamed: #AClassToRefactor!

!classDefinition: #ClassReferencingClassVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:29'!
m1 ^OldNameToRename__! !

Smalltalk removeClassNamed: #ClassReferencingClassVar!

!classDefinition: #ClassReferencingClassVarSuperclass category: #'__Refactoring-TestData__'!
Object subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVar category: #'__Refactoring-TestData__'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:30'!
m1 ^OldNameRenamed__! !

Smalltalk removeClassNamed: #ClassReferencingClassVar!

Smalltalk removeClassNamed: #ClassReferencingClassVarSuperclass!

!classDefinition: #ClassReferencingClassVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:31'!
m1 ^OldNameToRename__! !

Smalltalk removeClassNamed: #ClassReferencingClassVar!

!classDefinition: #ClassWithoutInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassWithoutInstVar!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToRenameInstVar!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToRenameInstVar!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToRenameInstVar!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToRenameInstVar!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToRenameInstVar!

!classDefinition: #SuperclassWithInstVar category: #'__Refactoring-TestData__'!
Object subclass: #SuperclassWithInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
SuperclassWithInstVar subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToRenameInstVar!

Smalltalk removeClassNamed: #SuperclassWithInstVar!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithInstVar category: #'__Refactoring-TestData__'!
ClassToRenameInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #SubclassWithInstVar!

Smalltalk removeClassNamed: #ClassToRenameInstVar!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToRenameInstVar!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:37'!
m1 ^old! !

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:37' prior: 50724007!
m1 ^new! !

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToRenameInstVar!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:37'!
m1 old := 10! !

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:37' prior: 50724039!
m1 new := 10! !

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToRenameInstVar!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithInstVar category: #'__Refactoring-TestData__'!
ClassToRenameInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassWithInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:38'!
m1 old := 10. ^old! !

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassWithInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:38' prior: 50724079!
m1 new := 10. ^new! !

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #SubclassWithInstVar!

Smalltalk removeClassNamed: #ClassToRenameInstVar!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old keep'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:39'!
m1 keep := old. ^keep! !

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old keep new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:39' prior: 50724113!
m1 keep := new. ^keep! !

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'keep new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToRenameInstVar!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToRenameInstVar!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:40'!
m1 | new | new := 10.! !

Smalltalk removeClassNamed: #ClassToRenameInstVar!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:40'!
m1:new! !

Smalltalk removeClassNamed: #ClassToRenameInstVar!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:41'!
m1 [ :new | ] value: 1! !

Smalltalk removeClassNamed: #ClassToRenameInstVar!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:41'!
m1 [ | new | ] value! !

Smalltalk removeClassNamed: #ClassToRenameInstVar!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassOfClassToRefactor category: #'__Refactoring-TestData__'!
ClassToRenameInstVar subclass: #SubclassOfClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassOfClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:42'!
m1 | new | ! !

Smalltalk removeClassNamed: #SubclassOfClassToRefactor!

Smalltalk removeClassNamed: #ClassToRenameInstVar!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:43'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:43'!
newXyz__! !

ClassToRenameSelector removeSelector: #oldXyz__!

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:43'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:43'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:43'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:43' prior: 50724265!
m1__ self newXyz__! !

ClassToRenameSelector removeSelector: #oldXyz__!

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:44'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:44'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:44' prior: 50724291!
m1__ self oldXyz__. self toKeep! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:44'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:44' prior: 50724295!
m1__ self newXyz__. self toKeep! !

ClassToRenameSelector removeSelector: #oldXyz__!

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:46'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:46'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'oldSelectorCategory' stamp: 'HAW 8/11/2019 20:32:46'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:46' prior: 50724322!
m1__ self newXyz__! !

ClassToRenameSelector removeSelector: #oldXyz__!

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:47'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:47'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:47' prior: 50724344!
oldXyz__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:47'!
newXyz__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:47' prior: 50724356!
newXyz__ self newXyz__! !

ClassToRenameSelector removeSelector: #oldXyz__!

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:48'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:48'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:48' prior: 50724376!
oldXyz__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:48'!
newXyz__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:48' prior: 50724384!
oldXyz__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:48' prior: 50724388!
newXyz__ self newXyz__! !

ClassToRenameSelector removeSelector: #oldXyz__!

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:48'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:48'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:48' prior: 50724413!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:48'!
m1 #oldXyz__ size! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:48'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:48' prior: 50724425!
m1 #newXyz__ size! !

ClassToRenameSelector removeSelector: #oldXyz__!

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:49'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:49'!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:49'!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:49'!
m1__ self oldXyz__! !

!classDefinition: #ClassToAvoidRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:49'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:49'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:49'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:49' prior: 50724451!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:49' prior: 50724459!
m1__ self newXyz__! !

ClassToRenameSelector removeSelector: #oldXyz__!

ClassToRenameSelector class removeSelector: #oldXyz__!

Smalltalk removeClassNamed: #ClassToRenameSelector!

Smalltalk removeClassNamed: #ClassToAvoidRenameSelector!

!classDefinition: #SuperclassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:49'!
oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:49'!
m1__ self oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:49'!
oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:49'!
m1__ self oldXyz__! !

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50'!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50'!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50'!
m1__ self oldXyz__! !

!classDefinition: #SubclassToRenameSelector category: #'__Refactoring-TestData__'!
ClassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50'!
oldXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50'!
m1__ self oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50'!
oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50'!
m1__ self oldXyz__! !

!classDefinition: #ClassToAvoidRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50'!
m1__ self oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50'!
newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50'!
newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50'!
newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50'!
newXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50' prior: 50724511!
m1__ self newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50' prior: 50724519!
m1__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50' prior: 50724535!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50' prior: 50724543!
m1__ self newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50' prior: 50724559!
m1__ self newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:50' prior: 50724567!
m1__ self newXyz__! !

SuperclassToRenameSelector removeSelector: #oldXyz__!

SuperclassToRenameSelector class removeSelector: #oldXyz__!

ClassToRenameSelector removeSelector: #oldXyz__!

ClassToRenameSelector class removeSelector: #oldXyz__!

SubclassToRenameSelector removeSelector: #oldXyz__!

SubclassToRenameSelector class removeSelector: #oldXyz__!

Smalltalk removeClassNamed: #SubclassToRenameSelector!

Smalltalk removeClassNamed: #ClassToRenameSelector!

Smalltalk removeClassNamed: #SuperclassToRenameSelector!

Smalltalk removeClassNamed: #ClassToAvoidRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:51'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:51'!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:51'!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:51'!
m1__ self oldXyz__! !

!classDefinition: #AnotherclassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #AnotherclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:51'!
oldXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:51'!
m1__ self oldXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:51'!
oldXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:51'!
m1__ self oldXyz__! !

!classDefinition: #ClassToAvoidRenameSelector category: #'__Refactoring-TestData__-toAvoid'!
Object subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-toAvoid'!
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:51'!
m1__ self oldXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:51'!
newXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:51'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:51'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:51'!
newXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:51' prior: 50724688!
m1__ self newXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:51' prior: 50724696!
m1__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:51' prior: 50724664!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:51' prior: 50724672!
m1__ self newXyz__! !

AnotherclassToRenameSelector removeSelector: #oldXyz__!

AnotherclassToRenameSelector class removeSelector: #oldXyz__!

ClassToRenameSelector removeSelector: #oldXyz__!

ClassToRenameSelector class removeSelector: #oldXyz__!

Smalltalk removeClassNamed: #ClassToAvoidRenameSelector!

Smalltalk removeClassNamed: #ClassToRenameSelector!

Smalltalk removeClassNamed: #AnotherclassToRenameSelector!

!classDefinition: #SuperclassToRenameSelector category: #'__Refactoring-TestData__-Another'!
Object subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-Another'!
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
m1__ self oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
m1__ self oldXyz__! !

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
m1__ self oldXyz__! !

!classDefinition: #SubclassToRenameSelector category: #'__Refactoring-TestData__'!
ClassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
oldXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
m1__ self oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
m1__ self oldXyz__! !

!classDefinition: #AnotheclassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #AnotheclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnotheclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
oldXyz__! !
!AnotheclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
m1__ self oldXyz__! !
!AnotheclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
oldXyz__! !
!AnotheclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
m1__ self oldXyz__! !

!classDefinition: #OtherCatClassToRenameSelector category: #'__Refactoring-TestData__-Another'!
Object subclass: #OtherCatClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-Another'!
!OtherCatClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
oldXyz__! !
!OtherCatClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
m1__ self oldXyz__! !
!OtherCatClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
oldXyz__! !
!OtherCatClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
m1__ self oldXyz__! !

!classDefinition: #ClassToAvoidRenameSelector category: #'__Refactoring-TestData__-toAvoid'!
Object subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-toAvoid'!
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
m1__ self oldXyz__! !
!AnotheclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
newXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
newXyz__! !
!OtherCatClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
newXyz__! !
!OtherCatClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
newXyz__! !
!AnotheclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52'!
newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52' prior: 50724827!
m1__ self newXyz__! !
!OtherCatClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52' prior: 50724876!
m1__ self newXyz__! !
!AnotheclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52' prior: 50724843!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52' prior: 50724803!
m1__ self newXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52' prior: 50724771!
m1__ self newXyz__! !
!OtherCatClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52' prior: 50724868!
m1__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52' prior: 50724795!
m1__ self newXyz__! !
!AnotheclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52' prior: 50724851!
m1__ self newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52' prior: 50724819!
m1__ self newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:52' prior: 50724779!
m1__ self newXyz__! !

AnotheclassToRenameSelector class removeSelector: #oldXyz__!

ClassToRenameSelector removeSelector: #oldXyz__!

SubclassToRenameSelector class removeSelector: #oldXyz__!

SuperclassToRenameSelector removeSelector: #oldXyz__!

ClassToRenameSelector class removeSelector: #oldXyz__!

SubclassToRenameSelector removeSelector: #oldXyz__!

SuperclassToRenameSelector class removeSelector: #oldXyz__!

OtherCatClassToRenameSelector class removeSelector: #oldXyz__!

OtherCatClassToRenameSelector removeSelector: #oldXyz__!

AnotheclassToRenameSelector removeSelector: #oldXyz__!

Smalltalk removeClassNamed: #ClassToAvoidRenameSelector!

Smalltalk removeClassNamed: #AnotheclassToRenameSelector!

Smalltalk removeClassNamed: #SubclassToRenameSelector!

Smalltalk removeClassNamed: #ClassToRenameSelector!

Smalltalk removeClassNamed: #SuperclassToRenameSelector!

Smalltalk removeClassNamed: #OtherCatClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:54'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:54'!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:54'!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:54'!
m1__ self oldXyz__! !

!classDefinition: #AnotherclassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #AnotherclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:54'!
oldXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:54'!
m1__ self oldXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:54'!
oldXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:54'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:54'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:54'!
newXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:54'!
newXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:54'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:54' prior: 50725020!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:54' prior: 50725028!
m1__ self newXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:54' prior: 50725044!
m1__ self newXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:54' prior: 50725052!
m1__ self newXyz__! !

ClassToRenameSelector removeSelector: #oldXyz__!

ClassToRenameSelector class removeSelector: #oldXyz__!

AnotherclassToRenameSelector removeSelector: #oldXyz__!

AnotherclassToRenameSelector class removeSelector: #oldXyz__!

Smalltalk removeClassNamed: #ClassToRenameSelector!

Smalltalk removeClassNamed: #AnotherclassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:56'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:56'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:56' prior: 50725109!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:56'!
m1 ^#(#oldXyz__)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:56'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:56' prior: 50725121!
m1 ^#(#newXyz__)! !

ClassToRenameSelector removeSelector: #oldXyz__!

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:56'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:56'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:56' prior: 50725143!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:56'!
m1 ^#(#oldXyz__ #oldXyz__)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:56'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:56' prior: 50725155!
m1 ^#(#newXyz__ #newXyz__)! !

ClassToRenameSelector removeSelector: #oldXyz__!

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:57'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:57'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:57' prior: 50725178!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:57'!
m1 ^#(#oldXyz__ #oldXyz__), #(#oldXyz__ #oldXyz__)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:57'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:57' prior: 50725190!
m1 ^#(#newXyz__ #newXyz__), #(#newXyz__ #newXyz__)! !

ClassToRenameSelector removeSelector: #oldXyz__!

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:58'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:58'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:58' prior: 50725214!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:58'!
m1 ^#(#oldXyz__ #oldXyz__1)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:58'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:58' prior: 50725226!
m1 ^#(#newXyz__ #oldXyz__1)! !

ClassToRenameSelector removeSelector: #oldXyz__!

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:58'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:58'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:58' prior: 50725249!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:58'!
m1 ^#(#oldXyz__ #oldXyz__:)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:58'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:58' prior: 50725261!
m1 ^#(#newXyz__ #oldXyz__:)! !

ClassToRenameSelector removeSelector: #oldXyz__!

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:59'!
&& aParameter! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:59'!
m1 ^self && 1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:59'!
abc: aParameter! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:59' prior: 50725288!
m1 ^self abc: 1! !

ClassToRenameSelector removeSelector: #&&!

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:59'!
abc: aParameter! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:59'!
m1 ^self abc: 1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:59'!
&& aParameter! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:32:59' prior: 50725314!
m1 ^self && 1! !

ClassToRenameSelector removeSelector: #abc:!

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:00'!
&& aParameter! !

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:00'!
abc: p1 def: p2! !

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #SuperclassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01'!
oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01'!
m1__ self oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01'!
oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01'!
m1__ self oldXyz__! !

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01'!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01'!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01'!
m1__ self oldXyz__! !

!classDefinition: #SubclassToRenameSelector category: #'__Refactoring-TestData__'!
SuperclassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01'!
oldXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01'!
m1__ self oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01'!
oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01'!
m1__ self oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01'!
newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01'!
newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01'!
newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01'!
newXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01' prior: 50725366!
m1__ self newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01' prior: 50725374!
m1__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01' prior: 50725390!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01' prior: 50725398!
m1__ self newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01' prior: 50725414!
m1__ self newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:01' prior: 50725422!
m1__ self newXyz__! !

SuperclassToRenameSelector removeSelector: #oldXyz__!

SuperclassToRenameSelector class removeSelector: #oldXyz__!

ClassToRenameSelector removeSelector: #oldXyz__!

ClassToRenameSelector class removeSelector: #oldXyz__!

SubclassToRenameSelector removeSelector: #oldXyz__!

SubclassToRenameSelector class removeSelector: #oldXyz__!

Smalltalk removeClassNamed: #SubclassToRenameSelector!

Smalltalk removeClassNamed: #ClassToRenameSelector!

Smalltalk removeClassNamed: #SuperclassToRenameSelector!

!classDefinition: #ClassToRenameTemp category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameTemp
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToRenameTemp!

!classDefinition: #ClassToRefactorSuperclass category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRefactorSuperclass
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameTemp category: #'__Refactoring-TestData__'!
ClassToRefactorSuperclass subclass: #ClassToRenameTemp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToRenameTemp!

Smalltalk removeClassNamed: #ClassToRefactorSuperclass!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToRemove!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToRemove!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassToRemove category: #'__Refactoring-TestData__'!
Object subclass: #ClassReferencingClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassToRemove methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:07'!
m1 ^ClassToRemove! !

Smalltalk removeClassNamed: #ClassToRemove!

Smalltalk removeClassNamed: #ClassReferencingClassToRemove!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemove methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:08'!
m1 ^ClassToRemove! !

Smalltalk removeClassNamed: #ClassToRemove!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveSubclass category: #'__Refactoring-TestData__'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToRemoveSubclass!

Smalltalk removeClassNamed: #ClassToRemove!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveSubclass category: #'__Refactoring-TestData__'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassToRemoveSubclass category: #'__Refactoring-TestData__'!
Object subclass: #ClassReferencingClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassToRemoveSubclass methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:10'!
m1 ^ClassToRemoveSubclass! !

Smalltalk removeClassNamed: #ClassToRemoveSubclass!

Smalltalk removeClassNamed: #ClassToRemove!

Smalltalk removeClassNamed: #ClassReferencingClassToRemoveSubclass!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveSubclass category: #'__Refactoring-TestData__'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToRemoveSubclass!

Smalltalk removeClassNamed: #ClassToRemove!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveSubclass category: #'__Refactoring-TestData__'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemove methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:12'!
m1 ^ClassToRemoveSubclass! !
!ClassToRemoveSubclass methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:12'!
m2 ^ClassToRemove! !

Smalltalk removeClassNamed: #ClassToRemoveSubclass!

Smalltalk removeClassNamed: #ClassToRemove!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__'!
Object subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:13'!
m1| a |! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:13' prior: 50725671!
m1 ! !

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__'!
Object subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToChangeVariable!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__'!
Object subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:13'!
m1| a |a := 2.
	^a! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:13' prior: 50725695!
m1 a := 2.
	^a! !

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__'!
Object subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToChangeVariable!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__'!
Object subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:14'!
m1! !

Smalltalk removeClassNamed: #ClassToChangeVariable!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__'!
Object subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:14'!
m1| a |! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:14'!
m2| a |! !

Smalltalk removeClassNamed: #ClassToChangeVariable!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__'!
Object subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassToRefactor category: #'__Refactoring-TestData__'!
ClassToChangeVariable subclass: #SubclassToRefactor
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:15'!
m1| a |! !

Smalltalk removeClassNamed: #SubclassToRefactor!

Smalltalk removeClassNamed: #ClassToChangeVariable!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__'!
Object subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassToRefactor category: #'__Refactoring-TestData__'!
ClassToChangeVariable subclass: #SubclassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:16'!
m1| a |! !
!SubclassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:16'!
m2| a |! !

Smalltalk removeClassNamed: #SubclassToRefactor!

Smalltalk removeClassNamed: #ClassToChangeVariable!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__'!
Object subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:16'!
m1| a |! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:16' prior: 50725795!
m1 ! !

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__'!
Object subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToChangeVariable!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__'!
Object subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:17'!
m1| a b |! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:17' prior: 50725819!
m1|  b |! !

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__'!
Object subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToChangeVariable!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__'!
Object subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:18'!
m1
	[ | a | ].
	[ | a | ].! !

Smalltalk removeClassNamed: #ClassToChangeVariable!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__'!
Object subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:18'!
m1
	[ | a | ].! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:18' prior: 50725856!
m1
	[   ].! !

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__'!
Object subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

Smalltalk removeClassNamed: #ClassToChangeVariable!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:19'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:19'!
m3 | x | self m1. false ifTrue: [ x m1 ]! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:19'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:19' prior: 50725883!
m3 | x | self m2. false ifTrue: [ x m1 ]! !

ClassToRenameSelector removeSelector: #m1!

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__'!
Object subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:20'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:20'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:20'!
m3 | x | x := self. x := ClassOfSender new. x m1! !

Smalltalk removeClassNamed: #ClassToRenameSelector!

Smalltalk removeClassNamed: #ClassOfSender!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__'!
ClassToRenameSelector subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:20'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:20'!
m3 | x | x := ClassOfSender new. x m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:20'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:20' prior: 50725946!
m3 | x | x := ClassOfSender new. x m2! !

ClassToRenameSelector removeSelector: #m1!

Smalltalk removeClassNamed: #ClassOfSender!

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__'!
Object subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:21'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:21'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:21'!
m3 | x | x := self. x := ClassOfSender new. x m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:21'!
m2! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:21'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:21' prior: 50725984!
m3 | x | x := self. x := ClassOfSender new. x m2! !

ClassToRenameSelector removeSelector: #m1!

ClassOfSender removeSelector: #m1!

Smalltalk removeClassNamed: #ClassToRenameSelector!

Smalltalk removeClassNamed: #ClassOfSender!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__'!
Object subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:22'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:22'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:22'!
m3 | x y | x := self. y := ClassOfSender new. x m1. y m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:22'!
m2! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:22'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:22' prior: 50726027!
m3 | x y | x := self. y := ClassOfSender new. x m2. y m2! !

ClassToRenameSelector removeSelector: #m1!

ClassOfSender removeSelector: #m1!

Smalltalk removeClassNamed: #ClassToRenameSelector!

Smalltalk removeClassNamed: #ClassOfSender!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__'!
Object subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:23'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:23'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:23'!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m1. y m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:23'!
m2! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:23'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:23' prior: 50726070!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m2. y m2! !

ClassToRenameSelector removeSelector: #m1!

ClassOfSender removeSelector: #m1!

Smalltalk removeClassNamed: #ClassToRenameSelector!

Smalltalk removeClassNamed: #ClassOfSender!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:24'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:24'!
m3 | x | self m1. false ifTrue: [ x m1 ]! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:24'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:24' prior: 50726103!
m3 | x | self m2. false ifTrue: [ x m2 ]! !

ClassToRenameSelector removeSelector: #m1!

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__'!
Object subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:24'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:24'!
m3 | x | x := self. x := ClassOfSender new. x m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:24'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:24' prior: 50726137!
m3 | x | x := self. x := ClassOfSender new. x m2! !

ClassOfSender removeSelector: #m1!

Smalltalk removeClassNamed: #ClassToRenameSelector!

Smalltalk removeClassNamed: #ClassOfSender!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__'!
Object subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:25'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:25'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:25'!
m3 self m1. ClassOfSender new m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:25'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:25' prior: 50726175!
m3 self m2. ClassOfSender new m1! !

ClassToRenameSelector removeSelector: #m1!

Smalltalk removeClassNamed: #ClassToRenameSelector!

Smalltalk removeClassNamed: #ClassOfSender!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:26'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:26'!
m3 |x| self m1. x m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:26'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:26' prior: 50726202!
m3 |x| self m2. x m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:26' prior: 50726210!
m3 |x| self m2. x m1! !

ClassToRenameSelector removeSelector: #m1!

Smalltalk removeClassNamed: #ClassToRenameSelector!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__'!
Object subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__'!
Object subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:26'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:26'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 8/11/2019 20:33:26'!
m3 | x | x := self. x := ClassOfSender new. x m1; printString! !

Smalltalk removeClassNamed: #ClassToRenameSelector!

Smalltalk removeClassNamed: #ClassOfSender!

!classDefinition: #LiveTypingClassToBeRemoved category: #'__LiveTyping-TestData__'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

Smalltalk removeClassNamed: #LiveTypingClassToBeRemoved!

!classDefinition: #LiveTypingClassToBeRemoved category: #'__LiveTyping-TestData__'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

Smalltalk removeClassNamed: #LiveTypingClassToBeRemoved!

!classDefinition: #LiveTypingClassToBeRemoved category: #'__LiveTyping-TestData__'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

Smalltalk removeClassNamed: #LiveTypingClassToBeRemoved!

!classDefinition: #LiveTypingClassToBeRemoved category: #'__LiveTyping-TestData__'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

Smalltalk removeClassNamed: #LiveTypingClassToBeRemoved!

!classDefinition: #LiveTypingClassToBeRemoved category: #'__LiveTyping-TestData__'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

Smalltalk removeClassNamed: #LiveTypingClassToBeRemoved!

!classDefinition: #LiveTypingClassToBeRemoved category: #'__LiveTyping-TestData__'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

Smalltalk removeClassNamed: #LiveTypingClassToBeRemoved!

----QUIT----(11 August 2019 20:33:45) CuisUniversity-3839.image priorSource: 12503879!

----STARTUP---- (23 September 2019 19:47:50) as /home/gzeitoune/Documents/UBA/ingSoft1/examen/imagen nueva/CuisUniversity-3839.image!


----End fileIn of /home/gzeitoune/Documents/UBA/ingSoft1/examen/IngSof1-2019-2C-1Parcial.st----!

----STARTUP---- (23 September 2019 19:50:55) as /home/gzeitoune/Documents/UBA/ingSoft1/examen/imagen nueva/CuisUniversity-3839.image!


----End fileIn of /home/gzeitoune/Documents/UBA/ingSoft1/examen/IngSof1-2019-2C-1Parcial.st----!

----STARTUP---- (1 October 2019 12:37:13) as /home/gzeitoune/Documents/UBA/ingSoft1/examen/imagen nueva/CuisUniversity-3839.image!


----STARTUP---- (17 October 2019 16:22:44) as /home/chiara/Documents/UBA/ing-soft-1/imagen nueva/CuisUniversity-3839.image!


----End fileIn of /home/chiara/Documents/UBA/ing-soft-1/imagen nueva0/Terni Lapilli.st----!

----STARTUP---- (17 October 2019 18:35:12) as /home/chiara/Documents/UBA/ing-soft-1/imagen nueva/CuisUniversity-3839.image!


----End fileIn of /home/chiara/Documents/UBA/ing-soft-1/23-Portfolio/Portfolio-Ejercicio.st----!
!Withdraw methodsFor: 'value' stamp: 'gc 10/17/2019 18:43:03' prior: 50726474!
value

	^ -1 * value! !
!Withdraw methodsFor: 'value' stamp: 'gc 10/17/2019 18:43:28' prior: 50726528!
value

	^ value! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'gc 10/17/2019 18:45:54' prior: 50726515!
balance

	^transactions sum: [ :aTransaction | aTransaction worth ] ifEmpty: [ 0 ]! !
!Deposit methodsFor: 'value' stamp: 'gc 10/17/2019 18:46:13'!
worth

	^ value! !
!Withdraw methodsFor: 'value' stamp: 'gc 10/17/2019 18:46:33'!
worth

	^ -1 * value! !

!classDefinition: #Portfolio category: #Unknown!
Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Unknown'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 18:48:18'!
test08newPortfolioShouldBeEmpty

	| portfolio account1 deposit1 |
	
	portfolio _ Portfolio new.
	
	
	
	
	
	account1 := ReceptiveAccount new.
	
	deposit1 := Deposit register: 100 on: account1.
		
	self assert: 1 equals: account1 transactions size .
	self assert: (account1 transactions includes: deposit1).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 18:51:58' prior: 50726553!
test08newPortfolioShouldBeEmpty

	| portfolio  |
	
	portfolio _ Portfolio new.
	
	self assert: portfolio isEmpty.! !

----STARTUP---- (17 October 2019 18:54:18) as /home/chiara/Documents/UBA/ing-soft-1/imagen nueva/CuisUniversity-3839.image!


----End fileIn of /home/chiara/Documents/UBA/ing-soft-1/23-Portfolio/Portfolio-Ejercicio.st----!
!Withdraw methodsFor: 'value' stamp: 'gc 10/17/2019 18:55:16'!
worth

	^-1*  value! !
!Deposit methodsFor: 'value' stamp: 'gc 10/17/2019 18:55:29'!
worth

	^ value! !
!AccountTransaction methodsFor: 'value' stamp: 'gc 10/17/2019 18:55:38'!
worth 

	self subclassResponsibility ! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'gc 10/17/2019 18:56:04' prior: 50726515!
balance

	^transactions sum: [ :aTransaction | aTransaction worth ] ifEmpty: [ 0 ]! !

!classDefinition: #Portfolio category: #'Portfolio-Ejercicio'!
Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 18:57:04'!
test08newPortfolioShouldBeEmpty

	| portfolio |
	
	portfolio _ Portfolio new.
	self assert: portfolio isEmpty.! !
!Portfolio methodsFor: 'no messages' stamp: 'gc 10/17/2019 18:58:01'!
isEmpty
	^true! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 18:58:41'!
test09addOneAccountToPortfolio

	| portfolio |
	
	portfolio _ Portfolio new.
	
	portfolio ! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:00:03' prior: 50726560!
test09addOneAccountToPortfolio

	| portfolio account |
	
	portfolio _ Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self deny: portfolio isEmpty .! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:07:53'!
test99addOneAccountToPortfolio

	| portfolio account |
	
	portfolio _ Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self deny: portfolio isEmpty .! !

ReceptiveAccountTest removeSelector: #test09addOneAccountToPortfolio!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:09:36'!
test09EmptyPortfolioShouldHaveNoTransactions

	| portfolio |
	
	portfolio _ Portfolio new.
	self assert: ((portfolio transactions) size) isEqualTo: 0.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:10:02' prior: 50726588!
test09EmptyPortfolioShouldHaveNoTransactions

	| portfolio |
	
	portfolio _ Portfolio new.
	self assert: ((portfolio transactions) size) equals: 0.! !
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 19:10:40'!
transactions
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 19:12:00' prior: 50726603!
transactions
	^OrderedCollection  new.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:13:31'!
test10addOneAccountToPortfolio

	| portfolio account |
	
	portfolio _ Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self deny: portfolio isEmpty .! !

ReceptiveAccountTest removeSelector: #test99addOneAccountToPortfolio!
!Portfolio methodsFor: 'aaaaaaaa' stamp: 'gc 10/17/2019 19:14:13'!
addAccount: aReceptiveAccount 
	self shouldBeImplemented.! !

!classDefinition: #Portfolio category: #'Portfolio-Ejercicio'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'aaaaaaaa' stamp: 'gc 10/17/2019 19:14:38' prior: 50726623!
addAccount: aReceptiveAccount 
	accounts addLast: aReceptiveAccount .! !
!Portfolio class methodsFor: 'no messages' stamp: 'gc 10/17/2019 19:15:40'!
new
	Portfolio initialize new! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 19:15:44' prior: 50726639!
new
	^Portfolio initialize new! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 19:15:58'!
initialize
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 19:16:08' prior: 50726648!
initialize
	accounts _ OrderedCollection new.! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 19:16:34' prior: 50726644!
new
	^Portfolio initialize new! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 19:17:00' prior: 50726657!
new
	^Portfolio initialize new! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 19:17:15' prior: 50726662!
new
	^Portfolio new initialize! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 19:17:38'!
create
	^Portfolio new initialize! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 19:17:44' prior: 50726671!
create
	^Portfolio initialize new! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:18:09' prior: 50726551!
test08newPortfolioShouldBeEmpty

	| portfolio |
	
	portfolio _ Portfolio create.
	self assert: portfolio isEmpty.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:18:17' prior: 50726596!
test09EmptyPortfolioShouldHaveNoTransactions

	| portfolio |
	
	portfolio _ Portfolio create.
	self assert: ((portfolio transactions) size) equals: 0.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:18:23' prior: 50726611!
test10addOneAccountToPortfolio

	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self deny: portfolio isEmpty .! !

Portfolio class removeSelector: #new!
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 19:19:00'!
contains: aReceptiveAccount 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 19:19:15' prior: 50726706!
contains: aReceptiveAccount 
	^accounts includes: aReceptiveAccount .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 19:20:06' prior: 50726557!
isEmpty
	^accounts isEmpty ! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:21:03'!
test11addOneAccountWithOneTransactionToPortfolio
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self deny: portfolio isEmpty .! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:21:09' prior: 50726721!
test11addOneAccountWithOneTransactionToPortfolio
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self deny: portfolio isEmpty .! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:22:36' prior: 50726732!
test11addOneAccountWithOneTransactionToPortfolio
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self deny: portfolio isEmpty .
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:23:23' prior: 50726743!
test11addOneAccountWithOneTransactionToPortfolio
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self deny: portfolio isEmpty .
	self assert: (portfolio transactions) equals: (account transactions).! !
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 19:31:00' prior: 50726607!
transactions
	| transactions |
	transactions _ OrderedCollection  new.
	! !

(1 to: 100) inject: 0 into: [:sum :each | sum + each ]!

(1 to: 100) inject: 10 into: [:sum :each | sum + each ]!
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 19:36:20' prior: 50726770!
transactions
	| transactions |
	transactions _ OrderedCollection  new.
	
	accounts inject: transactions into: [:total :each | total addAll: (each transactions)]! !
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 19:36:27' prior: 50726779!
transactions
	| transactions |
	transactions _ OrderedCollection  new.
	
	accounts inject: transactions into: [:total :account | total addAll: (account transactions)]! !
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 19:38:24' prior: 50726787!
transactions
	| transactions |
	transactions _ OrderedCollection  new.
	
	^accounts inject: transactions into: [:total :account | total addAll: (account transactions)]! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:40:12'!
test11addOneAccountWithOneTransactionToPortfolioAndBothTransactionsAreEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self deny: portfolio isEmpty .
	self assert: (portfolio transactions) equals: (account transactions).! !

ReceptiveAccountTest removeSelector: #test11addOneAccountWithOneTransactionToPortfolio!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:40:52'!
test12addOneAccountWithOneTransactionToPortfolioAndTransactionIsRegistered
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self deny: portfolio isEmpty .
	self assert: (portfolio transactions) equals: (account transactions).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:42:26'!
test12addOneAccountToPortfolioAndShouldHaveNoTransactionsRegistered
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self deny: portfolio isEmpty .
	self assert: (portfolio transactions) equals: (account transactions).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:42:44' prior: 50726836!
test12addOneAccountToPortfolioAndShouldHaveNoTransactionsRegistered
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).

	self assert: (portfolio transactions) equals: (account transactions).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:42:46' prior: 50726851!
test12addOneAccountToPortfolioAndShouldHaveNoTransactionsRegistered
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:43:42' prior: 50726864!
test12addOneAccountToPortfolioAndShouldHaveNoTransactionsRegistered
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).
	self deny: (portfolio hasRegistered: account )! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:43:47' prior: 50726877!
test12addOneAccountToPortfolioAndShouldHaveNoTransactionsRegistered
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self deny: (portfolio hasRegistered: account )! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:43:54' prior: 50726803!
test11addOneAccountWithOneTransactionToPortfolioAndBothTransactionsAreEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:44:02'!
test13addOneAccountWithOneTransactionToPortfolioAndTransactionIsRegistered
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self deny: portfolio isEmpty .
	self assert: (portfolio transactions) equals: (account transactions).! !

ReceptiveAccountTest removeSelector: #test12addOneAccountWithOneTransactionToPortfolioAndTransactionIsRegistered!
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 19:44:18'!
hasRegistered: aReceptiveAccount 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 19:44:43' prior: 50726936!
hasRegistered: aReceptiveAccount 
	^aReceptiveAccount transactions isEmpty .! !
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 19:45:06' prior: 50726941!
hasRegistered: aReceptiveAccount 
	^aReceptiveAccount transactions isEmpty not.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:46:08' prior: 50726918!
test13addOneAccountWithOneTransactionToPortfolioAndTransactionIsRegistered
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio hasRegistered: account )! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:47:50'!
test14MakingTransactionInAccountInPortfolioShouldMakeBothTransactionsEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self deny: (portfolio hasRegistered: account )! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:48:04'!
test11addOneAccountWithOneTransactionToPortfolioShouldMakeBothTransactionsAreEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).! !

ReceptiveAccountTest removeSelector: #test11addOneAccountWithOneTransactionToPortfolioAndBothTransactionsAreEqual!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:48:19' prior: 50726966!
test14MakingTransactionInAccountInPortfolioShouldMakeBothTransactionsEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	
	
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self deny: (portfolio hasRegistered: account )! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:49:17' prior: 50726996!
test14MakingTransactionInAccountInPortfolioShouldMakeBothTransactionsEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self deny: (portfolio hasRegistered: account )! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:49:34' prior: 50727009!
test14MakingTransactionInAccountInPortfolioShouldMakeBothTransactionsEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:49:53' prior: 50727023!
test14MakingTransactionInAccountInPortfolioShouldMakeBothTransactionsEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.

	portfolio addAccount: account.
	Deposit register: 100 on: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:49:55' prior: 50727037!
test14MakingTransactionInAccountInPortfolioShouldMakeBothTransactionsEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.

	portfolio addAccount: account.
	
	Deposit register: 100 on: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:50:29'!
test15addAccountWithTransactionsToPortfolioAndShouldHaveTransactionsRegistered
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self deny: (portfolio hasRegistered: account )! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:50:47'!
test15addAccountWithTransactionsToPortfolioShouldHaveTransactionsRegistered
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self deny: (portfolio hasRegistered: account )! !

ReceptiveAccountTest removeSelector: #test15addAccountWithTransactionsToPortfolioAndShouldHaveTransactionsRegistered!

ReceptiveAccountTest removeSelector: #test15addAccountWithTransactionsToPortfolioShouldHaveTransactionsRegistered!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:51:58' prior: 50727051!
test14MakingTransactionInAccountInPortfolioShouldMakeBothTransactionsEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.

	portfolio addAccount: account.
	
	Deposit register: 100 on: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).
	self assert: (portfolio hasRegistered: account ).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:53:38'!
test15AddMultipleAccountsToPortfolioShouldMakeBothTransactionsEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.

	portfolio addAccount: account.
	
	Deposit register: 100 on: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).
	self assert: (portfolio hasRegistered: account ).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:53:48'!
test11addOneAccountWithOneTransactionToPortfolioShouldMakeBothTransactionsEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).! !

ReceptiveAccountTest removeSelector: #test11addOneAccountWithOneTransactionToPortfolioShouldMakeBothTransactionsAreEqual!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:54:21' prior: 50727113!
test15AddMultipleAccountsToPortfolioShouldMakeBothTransactionsEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.

	portfolio addAccount: account.
	
	Deposit register: 100 on: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).
	self assert: (portfolio hasRegistered: account ).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:54:47'!
test15AddAccountWithMultipleTransactionsToPortfolioShouldMakeBothTransactionsEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.

	portfolio addAccount: account.
	
	Deposit register: 100 on: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).
	self assert: (portfolio hasRegistered: account ).! !

ReceptiveAccountTest removeSelector: #test15AddMultipleAccountsToPortfolioShouldMakeBothTransactionsEqual!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:55:11' prior: 50727161!
test15AddAccountWithMultipleTransactionsToPortfolioShouldMakeBothTransactionsEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.

	portfolio addAccount: account.
	
	Deposit register: 100 on: account.
	
	Deposit register: 100 on: account.
	
	Deposit register: 100 on: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).
	self assert: (portfolio hasRegistered: account ).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:55:29' prior: 50727181!
test15AddAccountWithMultipleTransactionsToPortfolioShouldMakeBothTransactionsEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.

	portfolio addAccount: account.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).
	self assert: (portfolio hasRegistered: account ).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:55:30' prior: 50727200!
test15AddAccountWithMultipleTransactionsToPortfolioShouldMakeBothTransactionsEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.

	portfolio addAccount: account.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).
	self assert: (portfolio hasRegistered: account ).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:55:52' prior: 50727222!
test15AddAccountWithMultipleTransactionsToPortfolioShouldMakeBothTransactionsEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Deposit register: 100 on: account.
	
	portfolio addAccount: account.
	
	Withdraw register: 50 on: account.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).
	self assert: (portfolio hasRegistered: account ).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:56:25' prior: 50727244!
test15AddAccountWithMultipleTransactionsToPortfolioShouldMakeBothTransactionsEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	
	Deposit register: 200 on: account.
	Withdraw register: 50 on: account.
	Deposit register: 20 on: account.
	
	portfolio addAccount: account.
	
	Withdraw register: 150 on: account.
	Deposit register: 80 on: account.
	Withdraw register: 30 on: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).
	self assert: (portfolio hasRegistered: account ).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:57:03'!
test16AddMultipleAccountWithMultipleTransactionsToPortfolioShouldMakeTransactionsEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	
	Deposit register: 200 on: account.
	Withdraw register: 50 on: account.
	Deposit register: 20 on: account.
	
	portfolio addAccount: account.
	
	Withdraw register: 150 on: account.
	Deposit register: 80 on: account.
	Withdraw register: 30 on: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).
	self assert: (portfolio hasRegistered: account ).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 19:57:15'!
test16AddMultipleAccountsWithMultipleTransactionsToPortfolioShouldMakeTransactionsEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	account := ReceptiveAccount new.
	
	Deposit register: 200 on: account.
	Withdraw register: 50 on: account.
	Deposit register: 20 on: account.
	
	portfolio addAccount: account.
	
	Withdraw register: 150 on: account.
	Deposit register: 80 on: account.
	Withdraw register: 30 on: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).
	self assert: (portfolio hasRegistered: account ).! !

ReceptiveAccountTest removeSelector: #test16AddMultipleAccountWithMultipleTransactionsToPortfolioShouldMakeTransactionsEqual!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:00:45' prior: 50727310!
test16AddMultipleAccountsWithMultipleTransactionsToPortfolioShouldMakeTransactionsEqual
	| portfolio account1 account2 account3 |
	
	portfolio _ Portfolio create.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 200 on: account1.
	Withdraw register: 50 on: account1.
	Deposit register: 20 on: account1.
	
	portfolio addAccount: account1.
	
	Withdraw register: 150 on: account2.
	Deposit register: 80 on: account2.
	Withdraw register: 30 on: account2.
	
	portfolio addAccount: account2.
	
	Withdraw register: 150 on: account3.
	Deposit register: 80 on: account3.
	Withdraw register: 30 on: account3.
	
	portfolio addAccount: account3.
	
	self assert: (portfolio transactions) equals: (((account1 transactions) addAll: (account2 transactions)) addAll: (account3 transactions)).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:02:59'!
test17EmptyPortfolioBalanceShouldBeZero
	| portfolio  |
	
	portfolio _ Portfolio create.
	
	self assert: (portfolio balance) equals: 0.
! !
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 20:03:12'!
balance
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 20:03:22' prior: 50727373!
balance
	^0! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:03:56'!
test18PortfolioWithOneAccountShouldMakeBothBalancesEqual
	| portfolio  |
	
	portfolio _ Portfolio create.
	
	self assert: (portfolio balance) equals: 0.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:04:39' prior: 50727380!
test18PortfolioWithOneAccountShouldMakeBothBalancesEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	
	account := ReceptiveAccount new.
	
	Deposit register: 200 on: account.
	Withdraw register: 50 on: account.
	Deposit register: 20 on: account.
	
	portfolio addAccount: account.
	
	self assert: (portfolio balance) equals: (account balance).! !
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 20:05:51' prior: 50727377!
balance
	
	^accounts inject: 0 into: [:totalBalance :account | totalBalance + (account balance)]! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:09:38'!
test19AddEmptyPortfolioToEmptyPortfolioShouldntBeEmpty
	| portfolio1 portfolio2|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.
	
	portfolio1 addPortfolio: portfolio2 .
	
	self deny: (portfolio1 isEmpty ).
	self assert: (portfolio2 isEmpty ).! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 20:09:54'!
addPortfolio: aPortfolio 
	self shouldBeImplemented.! !

!classDefinition: #Portfolio category: #'Portfolio-Ejercicio'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 20:10:12' prior: 50727419!
addPortfolio: aPortfolio 
	portfolios addLast: aPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 20:10:59' prior: 50726652!
initialize
	accounts _ OrderedCollection new.
	portfolios _ OrderedCollection new.! !

!classDefinition: #Portfolio category: #'Portfolio-Ejercicio'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios accountsAndPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 20:12:22' prior: 50726717!
isEmpty
	^accountsAndPortfolios isEmpty ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 20:12:22' prior: 50726711!
contains: aReceptiveAccount 
	^accountsAndPortfolios includes: aReceptiveAccount .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 20:12:22' prior: 50726634!
addAccount: aReceptiveAccount 
	accountsAndPortfolios addLast: aReceptiveAccount .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 20:12:22' prior: 50727436!
initialize
	accountsAndPortfolios _ OrderedCollection new.
	portfolios _ OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 20:12:22' prior: 50726795!
transactions
	| transactions |
	transactions _ OrderedCollection  new.
	
	^accountsAndPortfolios inject: transactions into: [:total :account | total addAll: (account transactions)]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 20:12:22' prior: 50727402!
balance
	
	^accountsAndPortfolios inject: 0 into: [:totalBalance :account | totalBalance + (account balance)]! !

!classDefinition: #Portfolio category: #'Portfolio-Ejercicio'!
Object subclass: #Portfolio
	instanceVariableNames: 'portfolios accountsAndPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 20:12:40' prior: 50727467!
initialize
	accountsAndPortfolios _ OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 20:12:48' prior: 50727431!
addPortfolio: aPortfolio 
	accountsAndPortfolios addLast: aPortfolio.! !

Object subclass: #Portfolio
	instanceVariableNames: 'accountsAndPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: #'Portfolio-Ejercicio'!
Object subclass: #Portfolio
	instanceVariableNames: 'accountsAndPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:13:30'!
test18PortfolioWithManyAccountsShouldMakeBothBalancesEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	
	account := ReceptiveAccount new.
	
	Deposit register: 200 on: account.
	Withdraw register: 50 on: account.
	Deposit register: 20 on: account.
	
	portfolio addAccount: account.
	
	self assert: (portfolio balance) equals: (account balance).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:13:43'!
test19PortfolioWithManyAccountsShouldMakeBothBalancesEqual
	| portfolio account |
	
	portfolio _ Portfolio create.
	
	account := ReceptiveAccount new.
	
	Deposit register: 200 on: account.
	Withdraw register: 50 on: account.
	Deposit register: 20 on: account.
	
	portfolio addAccount: account.
	
	self assert: (portfolio balance) equals: (account balance).! !

ReceptiveAccountTest removeSelector: #test18PortfolioWithManyAccountsShouldMakeBothBalancesEqual!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:13:50'!
test20AddEmptyPortfolioToEmptyPortfolioShouldntBeEmpty
	| portfolio1 portfolio2|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.
	
	portfolio1 addPortfolio: portfolio2 .
	
	self deny: (portfolio1 isEmpty ).
	self assert: (portfolio2 isEmpty ).! !

ReceptiveAccountTest removeSelector: #test19AddEmptyPortfolioToEmptyPortfolioShouldntBeEmpty!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:16:09' prior: 50727533!
test19PortfolioWithManyAccountsShouldMakeBothBalancesEqual
	| portfolio account1 account2 account3 |
	
	portfolio _ Portfolio create.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 200 on: account1.
	Withdraw register: 50 on: account1.
	Deposit register: 20 on: account1.
	
	portfolio addAccount: account1.
	
	Withdraw register: 150 on: account2.
	Deposit register: 80 on: account2.
	Withdraw register: 30 on: account2.
	
	portfolio addAccount: account2.
	
	Withdraw register: 150 on: account3.
	Deposit register: 80 on: account3.
	Withdraw register: 30 on: account3.
	
	portfolio addAccount: account3.
	
	self assert: (portfolio balance) equals: ((account1 balance)+(account2 balance)+(account3 balance)).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:18:11'!
test21PortfolioWithEmptyPortfolioBalanceShouldBeZero
	| portfolio1 portfolio2|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.
	
	portfolio1 addPortfolio: portfolio2 .
	
	self deny: (portfolio1 isEmpty ).
	self assert: (portfolio2 isEmpty ).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:20:02' prior: 50727593!
test21PortfolioWithEmptyPortfolioBalanceShouldBeZero
	| portfolio1 portfolio2|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.
	
	portfolio1 addPortfolio: portfolio2 .
	
	self assert: (portfolio1 balance) equals: 0.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:29:14' prior: 50726892!
test12addOneAccountToPortfolioAndShouldHaveNoTransactionsRegistered
	| portfolio account1 account2 deposit |
	
	portfolio _ Portfolio create.
	account1 _ ReceptiveAccount new.
	account2 _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account2.
		
	portfolio addAccount: account1.
	
	self assert: (portfolio contains: account1 ).
	self deny: (portfolio hasRegistered: deposit )! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:30:09' prior: 50727616!
test12addOneAccountToPortfolioAndShouldHaveNoTransactionsRegistered
	| portfolio account deposit |
	
	portfolio _ Portfolio create.
	account _ ReceptiveAccount new.
	deposit _  Deposit for: 100.
	
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self deny: (portfolio hasRegistered: deposit )! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:31:00' prior: 50726953!
test13addOneAccountWithOneTransactionToPortfolioAndTransactionIsRegistered
	| portfolio account deposit |
	
	portfolio _ Portfolio create.
	account _ ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio hasRegistered: account )! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:31:21' prior: 50727646!
test13addOneAccountWithOneTransactionToPortfolioAndTransactionIsRegistered
	| portfolio account deposit |
	
	portfolio _ Portfolio create.
	account _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account.
	
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio hasRegistered: account )! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:31:26' prior: 50727660!
test13addOneAccountWithOneTransactionToPortfolioAndTransactionIsRegistered
	| portfolio account deposit |
	
	portfolio _ Portfolio create.
	account _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account.
	
	portfolio addAccount: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio hasRegistered: deposit )! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:32:29' prior: 50727097!
test14MakingTransactionInAccountInPortfolioShouldMakeBothTransactionsEqual
	| portfolio account deposit |
	
	portfolio _ Portfolio create.
	account _ ReceptiveAccount new.

	portfolio addAccount: account.
	
	deposit _ Deposit register: 100 on: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).
	self assert: (portfolio hasRegistered: deposit ).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:33:40' prior: 50727266!
test15AddAccountWithMultipleTransactionsToPortfolioShouldMakeBothTransactionsEqual
	| portfolio account withdraw deposit|
	
	portfolio _ Portfolio create.
	account _ ReceptiveAccount new.
	
	Deposit register: 200 on: account.
	withdraw _ Withdraw register: 50 on: account.
	Deposit register: 20 on: account.
	
	portfolio addAccount: account.
	
	Withdraw register: 150 on: account.
	deposit _ Deposit register: 80 on: account.
	Withdraw register: 30 on: account.
	
	self assert: (portfolio contains: account ).
	self assert: (portfolio transactions) equals: (account transactions).
	self assert: (portfolio hasRegistered: withdraw ).
	self assert: (portfolio hasRegistered: deposit ).! !
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 20:36:41' prior: 50726947!
hasRegistered: aTransaction 
	^accountsAndPortfolios inject: false into: [:hasRegistered :accountOrPortfolio | hasRegistered or: (accountOrPortfolio hasRegistered: aTransaction )]! !
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 20:37:20' prior: 50727730!
hasRegistered: aTransaction 
	^accountsAndPortfolios inject: false into: [:hasRegistered :accountOrPortfolio | hasRegistered or: [accountOrPortfolio hasRegistered: aTransaction]]! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:38:00'!
test21PortfolioWithEmptyPortfolioHasNoTransactions
	| portfolio1 portfolio2|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.
	
	portfolio1 addPortfolio: portfolio2 .
	
	self assert: (portfolio1 balance) equals: 0.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:38:24' prior: 50727748!
test21PortfolioWithEmptyPortfolioHasNoTransactions
	| portfolio1 portfolio2|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.
	
	portfolio1 addPortfolio: portfolio2 .
	
	self assert: (portfolio1 transactions isEmpty) .! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:38:42'!
test21PortfolioWithEmptyPortfolioHasNotRegisteredTransactions
	| portfolio1 portfolio2|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.
	
	portfolio1 addPortfolio: portfolio2 .
	
	self assert: (portfolio1 transactions isEmpty) .! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:38:59' prior: 50727769!
test21PortfolioWithEmptyPortfolioHasNotRegisteredTransactions
	| portfolio1 portfolio2 deposit withdrawal|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.
	
	portfolio1 addPortfolio: portfolio2 .
	
	self assert: (portfolio1 transactions isEmpty) .! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:39:06' prior: 50727780!
test21PortfolioWithEmptyPortfolioHasNotRegisteredTransactions
	| portfolio1 portfolio2 deposit withdraw|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.
	
	portfolio1 addPortfolio: portfolio2 .
	
	self assert: (portfolio1 transactions isEmpty) .! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:40:26' prior: 50727792!
test21PortfolioWithEmptyPortfolioHasNotRegisteredTransactions
	| portfolio1 portfolio2 deposit withdraw|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.
	deposit _  Deposit for: 100.
	withdraw _ Withdraw for: 100.
	
	portfolio1 addPortfolio: portfolio2 .
	
	self deny: (portfolio1 hasRegistered: deposit ) .
	self deny: (portfolio1 hasRegistered: withdraw ) .! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:40:40'!
test22PortfolioWithEmptyPortfolioHasNoTransactions
	| portfolio1 portfolio2|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.
	
	portfolio1 addPortfolio: portfolio2 .
	
	self assert: (portfolio1 transactions isEmpty) .! !

ReceptiveAccountTest removeSelector: #test21PortfolioWithEmptyPortfolioHasNoTransactions!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:40:52'!
test23PortfolioWithEmptyPortfolioHasNotRegisteredTransactions
	| portfolio1 portfolio2 deposit withdraw|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.
	deposit _  Deposit for: 100.
	withdraw _ Withdraw for: 100.
	
	portfolio1 addPortfolio: portfolio2 .
	
	self deny: (portfolio1 hasRegistered: deposit ) .
	self deny: (portfolio1 hasRegistered: withdraw ) .! !

ReceptiveAccountTest removeSelector: #test21PortfolioWithEmptyPortfolioHasNotRegisteredTransactions!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:42:04'!
test23PortfolioWithAccountsWithTransactionsBalanceIsCorrect
	| portfolio1 portfolio2 deposit withdraw|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.
	deposit _  Deposit for: 100.
	withdraw _ Withdraw for: 100.
	
	portfolio1 addPortfolio: portfolio2 .
	
	self deny: (portfolio1 hasRegistered: deposit ) .
	self deny: (portfolio1 hasRegistered: withdraw ) .! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:43:19'!
test24PortfolioWithAccountsWithTransactionsBalanceIsCorrect
	| portfolio1 portfolio2 deposit withdraw|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.
	deposit _  Deposit for: 100.
	withdraw _ Withdraw for: 100.
	
	portfolio1 addPortfolio: portfolio2 .
	
	self deny: (portfolio1 hasRegistered: deposit ) .
	self deny: (portfolio1 hasRegistered: withdraw ) .! !

ReceptiveAccountTest removeSelector: #test23PortfolioWithAccountsWithTransactionsBalanceIsCorrect!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:44:17' prior: 50727865!
test24PortfolioWithAccountsWithTransactionsBalanceIsCorrect
	| portfolio1 portfolio2 account1 account2 account3|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.

	portfolio1 addPortfolio: portfolio2 .
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 200 on: account1.
	Withdraw register: 50 on: account1.
	Deposit register: 20 on: account1.
	
	portfolio1 addAccount: account1.
	
	Withdraw register: 150 on: account2.
	Deposit register: 80 on: account2.
	Withdraw register: 30 on: account2.
	
	portfolio2 addAccount: account2.
	
	Withdraw register: 150 on: account3.
	Deposit register: 80 on: account3.
	Withdraw register: 30 on: account3.
	
	portfolio2 addAccount: account3.
	
	self assert: (portfolio1 balance) equals: ((account1 balance)+(account2 balance)+(account3 balance)).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:45:11'!
test25PortfolioWithAccountsWithTransactionsTransactionsAreCorrect
	| portfolio1 portfolio2 account1 account2 account3|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.

	portfolio1 addPortfolio: portfolio2 .
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 200 on: account1.
	Withdraw register: 50 on: account1.
	Deposit register: 20 on: account1.
	
	portfolio1 addAccount: account1.
	
	Withdraw register: 150 on: account2.
	Deposit register: 80 on: account2.
	Withdraw register: 30 on: account2.
	
	portfolio2 addAccount: account2.
	
	Withdraw register: 150 on: account3.
	Deposit register: 80 on: account3.
	Withdraw register: 30 on: account3.
	
	portfolio2 addAccount: account3.
	
	self assert: (portfolio1 balance) equals: ((account1 balance)+(account2 balance)+(account3 balance)).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:46:14' prior: 50727913!
test25PortfolioWithAccountsWithTransactionsTransactionsAreCorrect
	| portfolio1 portfolio2 account1 account2 account3|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.

	portfolio1 addPortfolio: portfolio2 .
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 200 on: account1.
	Withdraw register: 50 on: account1.
	Deposit register: 20 on: account1.
	
	portfolio1 addAccount: account1.
	
	Withdraw register: 150 on: account2.
	Deposit register: 80 on: account2.
	Withdraw register: 30 on: account2.
	
	portfolio2 addAccount: account2.
	
	Withdraw register: 150 on: account3.
	Deposit register: 80 on: account3.
	Withdraw register: 30 on: account3.
	
	portfolio2 addAccount: account3.
	
	self assert: (portfolio1 transactions) equals: (((account1 transactions ) addAll: (account2 transactions )) addAll: (account3 transactions )).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:48:29' prior: 50727944!
test25PortfolioWithAccountsWithTransactionsTransactionsAreCorrect
	| portfolio1 portfolio2 account1 account2 account3|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.

	portfolio1 addPortfolio: portfolio2 .
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 200 on: account1.
	Withdraw register: 50 on: account1.
	Deposit register: 20 on: account1.
	
	portfolio1 addAccount: account1.
	
	Withdraw register: 150 on: account2.
	Deposit register: 80 on: account2.
	Withdraw register: 30 on: account2.
	
	portfolio2 addAccount: account2.
	
	Withdraw register: 150 on: account3.
	Deposit register: 80 on: account3.
	Withdraw register: 30 on: account3.
	
	portfolio2 addAccount: account3.
	
	self assert: (portfolio1 transactions) asBag equals: (((account1 transactions ) addAll: (account2 transactions )) addAll: (account3 transactions )) asBag.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:50:10'!
test25PortfolioWithAccountsWithLittleTransactionsTransactionsAreCorrect
	| portfolio1 portfolio2 account1 account2 |
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.

	portfolio1 addPortfolio: portfolio2 .
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	
	Deposit register: 200 on: account1.
	
	portfolio1 addAccount: account1.
	
	Withdraw register: 150 on: account2.
	
	portfolio2 addAccount: account2.
	
	
	self assert: (portfolio1 transactions) asBag equals: ((account1 transactions ) addAll: (account2 transactions )) asBag.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:50:40' prior: 50728008!
test25PortfolioWithAccountsWithLittleTransactionsTransactionsAreCorrect
	| portfolio1 portfolio2 account1 account2 |
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.

	portfolio1 addPortfolio: portfolio2 .
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	
	Deposit register: 200 on: account1.
	
	portfolio1 addAccount: account1.
	
	Withdraw register: 150 on: account2.
	
	portfolio2 addAccount: account2.
	
	
	self assert: (portfolio1 transactions) equals: ((account1 transactions ) addAll: (account2 transactions )).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:53:36' prior: 50728029!
test25PortfolioWithAccountsWithLittleTransactionsTransactionsAreCorrect
	| portfolio1 portfolio2 account1 account2 x |
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.

	portfolio1 addPortfolio: portfolio2 .
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	
	Deposit register: 200 on: account1.
	
	portfolio1 addAccount: account1.
	
	Withdraw register: 150 on: account2.
	
	portfolio2 addAccount: account2.
	
	x _ (account1 transactions ) addAll: (account2 transactions ).
	
	self assert: (portfolio1 transactions) equals: x.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 20:54:29' prior: 50728050!
test25PortfolioWithAccountsWithLittleTransactionsTransactionsAreCorrect
	| portfolio1 portfolio2 account1 account2 x y|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.

	portfolio1 addPortfolio: portfolio2 .
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	
	Deposit register: 200 on: account1.
	
	portfolio1 addAccount: account1.
	
	Withdraw register: 150 on: account2.
	
	portfolio2 addAccount: account2.
	
	x _ (account1 transactions ) addAll: (account2 transactions ).
	y _ portfolio1 transactions.
	
	self assert: y equals: x.! !
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 20:55:52' prior: 50727474!
transactions
	| transactions x |
	transactions _ OrderedCollection  new.
	
	x _ accountsAndPortfolios inject: transactions into: [:total :account | total addAll: (account transactions)].
	^x! !
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 20:57:57' prior: 50728092!
transactions
	| transactions |
	transactions _ OrderedCollection  new.
	
	transactions _ accountsAndPortfolios inject: transactions into: [:total :account | total addAll: (account transactions)].
	^transactions! !
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 21:00:55' prior: 50728101!
transactions
	| transactions |
	transactions _ OrderedCollection  new.
	
	transactions _ accountsAndPortfolios inject: transactions into: [:total :account | total addAll: (account transactions). total].
	^transactions! !
!Portfolio methodsFor: 'observer' stamp: 'gc 10/17/2019 21:02:31' prior: 50728111!
transactions
	| transactions |
	transactions _ OrderedCollection  new.
	
	^accountsAndPortfolios inject: transactions into: [:total :account | total addAll: (account transactions). total].! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 21:03:12' prior: 50728071!
test25PortfolioWithAccountsWithLittleTransactionsTransactionsAreCorrect
	| portfolio1 portfolio2 account1 account2 x y|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.

	portfolio1 addPortfolio: portfolio2 .
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	
	Deposit register: 200 on: account1.
	
	portfolio1 addAccount: account1.
	
	Withdraw register: 150 on: account2.
	
	portfolio2 addAccount: account2.
	x _ OrderedCollection new
	x addAll: (account1 transactions ).
	x addAll: (account2 transactions ).
	y _ portfolio1 transactions.
	
	self assert: y equals: x.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 21:03:24' prior: 50728130!
test25PortfolioWithAccountsWithLittleTransactionsTransactionsAreCorrect
	| portfolio1 portfolio2 account1 account2 x y|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.

	portfolio1 addPortfolio: portfolio2 .
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	
	Deposit register: 200 on: account1.
	
	portfolio1 addAccount: account1.
	
	Withdraw register: 150 on: account2.
	
	portfolio2 addAccount: account2.
	x _ OrderedCollection new.
	x addAll: (account1 transactions ).
	x addAll: (account2 transactions ).
	y _ portfolio1 transactions.
	
	self assert: y equals: x.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 21:04:50' prior: 50728153!
test25PortfolioWithAccountsWithLittleTransactionsTransactionsAreCorrect
	| portfolio1 portfolio2 account1 account2 expectedAnswer|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.

	portfolio1 addPortfolio: portfolio2 .
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	
	Deposit register: 200 on: account1.
	
	portfolio1 addAccount: account1.
	
	Withdraw register: 150 on: account2.
	
	portfolio2 addAccount: account2.
	expectedAnswer _ OrderedCollection new.
	expectedAnswer addAll: (account1 transactions ).
	expectedAnswer addAll: (account2 transactions ).

	self assert: ((portfolio1 transactions) asBag) equals: (expectedAnswer asBag).! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 21:05:08'!
test26PortfolioWithAccountsWithTransactionsTransactionsAreCorrect
	| portfolio1 portfolio2 account1 account2 account3|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.

	portfolio1 addPortfolio: portfolio2 .
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 200 on: account1.
	Withdraw register: 50 on: account1.
	Deposit register: 20 on: account1.
	
	portfolio1 addAccount: account1.
	
	Withdraw register: 150 on: account2.
	Deposit register: 80 on: account2.
	Withdraw register: 30 on: account2.
	
	portfolio2 addAccount: account2.
	
	Withdraw register: 150 on: account3.
	Deposit register: 80 on: account3.
	Withdraw register: 30 on: account3.
	
	portfolio2 addAccount: account3.
	
	self assert: (portfolio1 transactions) asBag equals: (((account1 transactions ) addAll: (account2 transactions )) addAll: (account3 transactions )) asBag.! !

ReceptiveAccountTest removeSelector: #test25PortfolioWithAccountsWithTransactionsTransactionsAreCorrect!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 21:06:36' prior: 50727336!
test16AddMultipleAccountsWithMultipleTransactionsToPortfolioShouldMakeTransactionsEqual
	| portfolio account1 account2 account3 expectedAnswer |
	
	portfolio _ Portfolio create.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 200 on: account1.
	Withdraw register: 50 on: account1.
	Deposit register: 20 on: account1.
	
	portfolio addAccount: account1.
	
	Withdraw register: 150 on: account2.
	Deposit register: 80 on: account2.
	Withdraw register: 30 on: account2.
	
	portfolio addAccount: account2.
	
	Withdraw register: 150 on: account3.
	Deposit register: 80 on: account3.
	Withdraw register: 30 on: account3.
	
	portfolio addAccount: account3.
	
	expectedAnswer _ Bag new.
	expectedAnswer addAll: account1 transactions.
	expectedAnswer addAll: account2 transactions.
	expectedAnswer addAll: account3 transactions.
	
	self assert: (portfolio transactions) equals: expectedAnswer .
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 21:06:57' prior: 50728176!
test25PortfolioWithAccountsWithLittleTransactionsTransactionsAreCorrect
	| portfolio1 portfolio2 account1 account2 expectedAnswer|
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.

	portfolio1 addPortfolio: portfolio2 .
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	
	Deposit register: 200 on: account1.
	
	portfolio1 addAccount: account1.
	
	Withdraw register: 150 on: account2.
	
	portfolio2 addAccount: account2.
	expectedAnswer _ Bag new.
	expectedAnswer addAll: (account1 transactions ).
	expectedAnswer addAll: (account2 transactions ).

	self assert: ((portfolio1 transactions) asBag) equals: expectedAnswer.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 21:07:14' prior: 50728236!
test16AddMultipleAccountsWithMultipleTransactionsToPortfolioShouldMakeTransactionsEqual
	| portfolio account1 account2 account3 expectedAnswer |
	
	portfolio _ Portfolio create.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 200 on: account1.
	Withdraw register: 50 on: account1.
	Deposit register: 20 on: account1.
	
	portfolio addAccount: account1.
	
	Withdraw register: 150 on: account2.
	Deposit register: 80 on: account2.
	Withdraw register: 30 on: account2.
	
	portfolio addAccount: account2.
	
	Withdraw register: 150 on: account3.
	Deposit register: 80 on: account3.
	Withdraw register: 30 on: account3.
	
	portfolio addAccount: account3.
	
	expectedAnswer _ Bag new.
	expectedAnswer addAll: account1 transactions.
	expectedAnswer addAll: account2 transactions.
	expectedAnswer addAll: account3 transactions.
	
	self assert: ((portfolio transactions) asBag) equals: expectedAnswer .
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 21:07:54' prior: 50728200!
test26PortfolioWithAccountsWithTransactionsTransactionsAreCorrect
	| portfolio1 portfolio2 account1 account2 account3 expectedAnswer |
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.

	portfolio1 addPortfolio: portfolio2 .
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 200 on: account1.
	Withdraw register: 50 on: account1.
	Deposit register: 20 on: account1.
	
	portfolio1 addAccount: account1.
	
	Withdraw register: 150 on: account2.
	Deposit register: 80 on: account2.
	Withdraw register: 30 on: account2.
	
	portfolio2 addAccount: account2.
	
	Withdraw register: 150 on: account3.
	Deposit register: 80 on: account3.
	Withdraw register: 30 on: account3.
	
	portfolio2 addAccount: account3.
	
	self assert: (portfolio1 transactions) asBag equals: (((account1 transactions ) addAll: (account2 transactions )) addAll: (account3 transactions )) asBag.! !

----SNAPSHOT----(17 October 2019 21:08:03) CuisUniversity-3839.image priorSource: 12628964!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'gc 10/17/2019 21:09:18' prior: 50728328!
test26PortfolioWithAccountsWithTransactionsTransactionsAreCorrect
	| portfolio1 portfolio2 account1 account2 account3 expectedAnswer |
	
	portfolio1 _ Portfolio create.
	portfolio2 _ Portfolio create.

	portfolio1 addPortfolio: portfolio2 .
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 200 on: account1.
	Withdraw register: 50 on: account1.
	Deposit register: 20 on: account1.
	
	portfolio1 addAccount: account1.
	
	Withdraw register: 150 on: account2.
	Deposit register: 80 on: account2.
	Withdraw register: 30 on: account2.
	
	portfolio2 addAccount: account2.
	
	Withdraw register: 150 on: account3.
	Deposit register: 80 on: account3.
	Withdraw register: 30 on: account3.
	
	portfolio2 addAccount: account3.
	
	expectedAnswer _ Bag new.
	expectedAnswer addAll: (account1 transactions).
	expectedAnswer addAll: (account2 transactions).
	expectedAnswer addAll: (account3 transactions).
	
	self assert: (portfolio1 transactions) asBag equals: expectedAnswer .! !

Object subclass: #Bank
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Bank category: #'Portfolio-Ejercicio'!
Object subclass: #Bank
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Smalltalk removeClassNamed: #Bank!

Object subclass: #Bank
	instanceVariableNames: 'accountsAndPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Bank category: #'Portfolio-Ejercicio'!
Object subclass: #Bank
	instanceVariableNames: 'accountsAndPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Bank class
	instanceVariableNames: ''!

!classDefinition: 'Bank class' category: #'Portfolio-Ejercicio'!
Bank class
	instanceVariableNames: ''!
!Bank methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 21:28:10'!
addAccount: aReceptiveAccount 
	accountsAndPortfolios addLast: aReceptiveAccount .! !
!Bank methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 21:28:10'!
addPortfolio: aPortfolio 
	accountsAndPortfolios addLast: aPortfolio.! !
!Bank methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 21:28:10'!
initialize
	accountsAndPortfolios _ OrderedCollection new.! !
!Bank methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 21:28:10'!
isEmpty
	^accountsAndPortfolios isEmpty ! !
!Bank methodsFor: 'observer' stamp: 'gc 10/17/2019 21:28:10'!
balance
	
	^accountsAndPortfolios inject: 0 into: [:totalBalance :account | totalBalance + (account balance)]! !
!Bank methodsFor: 'observer' stamp: 'gc 10/17/2019 21:28:10'!
contains: aReceptiveAccount 
	^accountsAndPortfolios includes: aReceptiveAccount .! !
!Bank methodsFor: 'observer' stamp: 'gc 10/17/2019 21:28:10'!
hasRegistered: aTransaction 
	^accountsAndPortfolios inject: false into: [:hasRegistered :accountOrPortfolio | hasRegistered or: [accountOrPortfolio hasRegistered: aTransaction]]! !
!Bank methodsFor: 'observer' stamp: 'gc 10/17/2019 21:28:10'!
transactions
	| transactions |
	transactions _ OrderedCollection  new.
	
	^accountsAndPortfolios inject: transactions into: [:total :account | total addAll: (account transactions). total].! !
!Bank class methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 21:28:10'!
create
	^Portfolio initialize new! !

Bank subclass: #Portfolio
	instanceVariableNames: 'accountsAndPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #Bank
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Bank category: #'Portfolio-Ejercicio'!
Object subclass: #Bank
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Bank subclass: #Portfolio
	instanceVariableNames: 'accountsAndPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: #'Portfolio-Ejercicio'!
Bank subclass: #Portfolio
	instanceVariableNames: 'accountsAndPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Bank subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: #'Portfolio-Ejercicio'!
Bank subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Bank methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 21:29:57' prior: 50728426!
addAccount: aReceptiveAccount 
	^self subclassResponsibility ! !
!Bank methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 21:30:04' prior: 50728431!
addPortfolio: aPortfolio 
	^self subclassResponsibility ! !
!Bank methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 21:30:11' prior: 50728436!
initialize
	^self subclassResponsibility ! !
!Bank methodsFor: 'as yet unclassified' stamp: 'gc 10/17/2019 21:30:16' prior: 50728441!
isEmpty
	^self subclassResponsibility ! !
!Bank methodsFor: 'observer' stamp: 'gc 10/17/2019 21:30:22' prior: 50728445!
balance
	^self subclassResponsibility ! !
!Bank methodsFor: 'observer' stamp: 'gc 10/17/2019 21:30:27' prior: 50728451!
contains: aReceptiveAccount 
	^self subclassResponsibility ! !
!Bank methodsFor: 'observer' stamp: 'gc 10/17/2019 21:30:32' prior: 50728456!
hasRegistered: aTransaction 
	^self subclassResponsibility ! !
!Bank methodsFor: 'observer' stamp: 'gc 10/17/2019 21:30:38' prior: 50728464!
transactions
	^self subclassResponsibility ! !

Bank subclass: #Portfolio
	instanceVariableNames: 'accountsAndPortfolios parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: #'Portfolio-Ejercicio'!
Bank subclass: #Portfolio
	instanceVariableNames: 'accountsAndPortfolios parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

----SNAPSHOT----(17 October 2019 21:34:27) CuisUniversity-3839.image priorSource: 12694714!