

----STARTUP---- (15 August 2019 18:23:26) as /home/chiara/Documents/UBA/ing-soft-1/linux64/CuisUniversity-3839.image!


----SNAPSHOT----(15 August 2019 18:23:43) clase1.image priorSource: 12633533!

Smalltalk removeClassNamed: #bill!

Smalltalk removeClassNamed: #saludador!

----STARTUP---- (26 August 2019 17:29:21) as /home/gzeitoune/Documents/UBA/ingSoft1/ing-soft-1/linux64/clase1.image!

!bill class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 17:40:27' prior: 50726407!
caminar:unaCantidadDeKilometros

	energia - 3 - unaCantidadDeKilometros >= 0
		ifTrue:  [energia _ energia - 3 - unaCantidadDeKilometros ] ifFalse: [^Error]
! !

bill energia !

bill caminar: 20!

----SNAPSHOT----(26 August 2019 17:41:08) clase1.image priorSource: 12633741!

----SNAPSHOT----(26 August 2019 17:41:29) clase1.image priorSource: 12634243!
!bill class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 17:44:47' prior: 50726462!
caminar:unaCantidadDeKilometros

	energia - 3 - unaCantidadDeKilometros >= 0
		ifTrue:  [energia _ energia - 3 - unaCantidadDeKilometros ] ifFalse: [^Error]
! !
!bill class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 17:45:57' prior: 50726476!
caminar:unaCantidadDeKilometros

	energia - 3 - unaCantidadDeKilometros >= 0
		ifTrue:  [energia _ energia - 3 - unaCantidadDeKilometros ] ifFalse: [self Error]
! !

bill caminar: 20!

----SNAPSHOT----(26 August 2019 17:46:17) clase1.image priorSource: 12634322!
!bill class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:01:12' prior: 50726484!
caminar:unaCantidadDeKilometros

	energia - 3 - unaCantidadDeKilometros >= 0
		ifTrue:  [energia _ energia - 3 - unaCantidadDeKilometros ] ifFalse: [self removeFromSystem]
! !

bill caminar: 20!

Smalltalk removeClassNamed: #bill!

----STARTUP---- (26 August 2019 18:02:24) as /home/gzeitoune/Documents/UBA/ingSoft1/ing-soft-1/linux64/clase1.image!


bill caminar: 20!

----STARTUP---- (26 August 2019 18:05:32) as /home/gzeitoune/Documents/UBA/ingSoft1/ing-soft-1/linux64/clase1.image!

!bill class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:08:30'!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	energia := 20.! !

bill class removeSelector: #initializeCollaboratorsFromFile!
!bill class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:13:31' prior: 50726484!
caminar:unaCantidadDeKilometros

	energia - 3 - unaCantidadDeKilometros >= 0
		ifTrue:  [energia _ energia - 3 - unaCantidadDeKilometros ] ifFalse: [self Error]
! !

ObjectBuilder create: #I
	collaboratorNames: 'valor'
	in: 'Numeros De Peano'
	!

!classDefinition: #I category: #'Numeros De Peano'!
DenotativeObject subclass: #I
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: 'I class' category: #'Numeros De Peano'!
I class
	instanceVariableNames: 'valor'!
!I class methodsFor: 'no messages' stamp: 'g 8/26/2019 18:16:08'!
valor
	^1! !

ObjectBuilder create: #II	
	collaboratorNames: 'valor'
	in: 'Numeros De Peano'
	!

!classDefinition: #II category: #'Numeros De Peano'!
DenotativeObject subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: 'II class' category: #'Numeros De Peano'!
II class
	instanceVariableNames: 'valor'!
!II class methodsFor: 'no messages' stamp: 'g 8/26/2019 18:18:21'!
valor
	^2! !

I
	collaboratorNames: ''
	in: 'Numeros De Peano'!

!classDefinition: #I category: #'Numeros De Peano'!
DenotativeObject subclass: #I
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: 'I class' category: #'Numeros De Peano'!
I class
	instanceVariableNames: ''!

II
	collaboratorNames: ''
	in: 'Numeros De Peano'!

!classDefinition: #II category: #'Numeros De Peano'!
DenotativeObject subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: 'II class' category: #'Numeros De Peano'!
II class
	instanceVariableNames: ''!
!I class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:19:35'!
previous
	^self Error! !
!I class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:19:53'!
next
	^2! !
!I class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:20:37' prior: 50726570!
next
	^self valor + 1! !
!I class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:23:08' prior: 50726574!
next
	self cloneNamed: (self name , 'I')
	! !

I next!

Smalltalk removeClassNamed: #II!

I next!

DenotativeObject subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #II category: #'Numeros De Peano'!
DenotativeObject subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

II class
	instanceVariableNames: ''!

!classDefinition: 'II class' category: #'Numeros De Peano'!
II class
	instanceVariableNames: ''!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:24:00'!
next
	self cloneNamed: (self name , 'I')
	! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:24:00'!
previous
	^self Error! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:24:00'!
valor
	^1! !
!I class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:30:07' prior: 50726578!
next
	^self cloneNamed: self name , 'I'
	! !

Smalltalk removeClassNamed: #II!

I next !

DenotativeObject subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #II category: #'Numeros De Peano'!
DenotativeObject subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

II class
	instanceVariableNames: ''!

!classDefinition: 'II class' category: #'Numeros De Peano'!
II class
	instanceVariableNames: ''!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:30:40'!
next
	^self cloneNamed: self name , 'I'
	! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:30:40'!
previous
	^self Error! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:30:40'!
valor
	^1! !
!I class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:31:06' prior: 50726610!
next
	^II
	! !

I class removeSelector: #previous!

!classDefinition: 'II class' category: #'Numeros De Peano'!
II class
	instanceVariableNames: 'next'!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:33:07' prior: 50726630!
next
	next ifNil:[
		self cloneNamed: self name , 'I'
	].
	^next! !

I next !

I next !

I next !

I next !

II next !

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:34:05'!
next
	next ifNil:[
		self cloneNamed: self name , 'I'
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:34:05'!
previous
	^self Error! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:34:05'!
valor
	^1! !

II next !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:34:54' prior: 50726650!
next
	next := next ifNil:[
		self cloneNamed: self name , 'I'
	].
	^next! !

Smalltalk removeClassNamed: #III!

II next !

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:35:10'!
next
	next := next ifNil:[
		self cloneNamed: self name , 'I'
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:35:10'!
previous
	^self Error! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:35:10'!
valor
	^1! !

II next !

II next !

II next !

II next !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:35:29' prior: 50726638!
valor
	^2! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:38:40'!
removeAllNext

	next ifNotNil:

	[

		next removeAllNext.

		next removeFromSystem.

		next := nil.

	]! !

II removeAllNext !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:40:06' prior: 50726723!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

II removeAllNext!

II removeAllNext!

Smalltalk removeClassNamed: #III!

II next!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:40:58'!
next
	next := next ifNil:[
		self cloneNamed: self name , 'I'
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:40:58'!
previous
	^self Error! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:40:58'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:40:58'!
valor
	^2! !

II removeAllNext !

Smalltalk removeClassNamed: #III!
!I class methodsFor: 'nil' stamp: 'g 8/26/2019 18:59:57'!
+ unNumeroDePeano
 	^unNumeroDePeano  next! !
!II class methodsFor: 'nil' stamp: 'g 8/26/2019 19:00:34'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !

II class removeSelector: #valor!

I class removeSelector: #valor!

----SNAPSHOT----(26 August 2019 19:01:21) clase1.image priorSource: 12634935!

!classDefinition: 'II class' category: #'Numeros De Peano'!
II class
	instanceVariableNames: 'next previous'!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:01:37' prior: 50726634!
previous
	^previous! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:03:49' prior: 50726684!
next
	next := next ifNil:[
		self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!II class methodsFor: 'nil' stamp: 'g 8/26/2019 19:05:38'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:05:46'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:05:46'!
next
	next := next ifNil:[
		self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:05:46'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:05:46'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:05:46'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:06:42'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:06:42'!
next
	next := next ifNil:[
		self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:06:42'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:06:42'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:06:42'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

II + II!

II + I!

II previous !

II previous: I!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:12:04'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:12:04'!
next
	next := next ifNil:[
		self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:12:04'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:12:04'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:12:04'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

II + I!

II previous !

I next!

III previous: II!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:13:51'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:13:51'!
next
	next := next ifNil:[
		self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:13:51'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:13:51'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:13:51'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:14:59'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:14:59'!
next
	next := next ifNil:[
		self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:14:59'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:14:59'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:14:59'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

II + II!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:35' prior: 50726793!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

II + IIII!

DenotativeObject subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIII class' category: #'Numeros De Peano'!
IIIII class
	instanceVariableNames: 'next previous'!
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
previous
	^previous! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIII class' category: #'Numeros De Peano'!
IIIIII class
	instanceVariableNames: 'next previous'!
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
previous
	^previous! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

II + IIII!

II + IIII!

 IIIIII !

IIIIII + IIIIII!

DenotativeObject subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIII class' category: #'Numeros De Peano'!
IIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous
	^previous! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIII class' category: #'Numeros De Peano'!
IIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous
	^previous! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous
	^previous! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous
	^previous! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous
	^previous! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous
	^previous! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:10'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:10'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIIIII + IIIIII + IIIIIIIIIIII!

DenotativeObject subclass: #IIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous
	^previous! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous
	^previous! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous
	^previous! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous
	^previous! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous
	^previous! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

II removeAllNext !

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIII!

Smalltalk removeClassNamed: #IIIIIII!

Smalltalk removeClassNamed: #IIIIII!

Smalltalk removeClassNamed: #IIIII!

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

----SNAPSHOT----(26 August 2019 19:50:33) clase1.image priorSource: 12644222!
!II class methodsFor: 'nil' stamp: 'g 8/26/2019 20:37:15'!
- unNumeroDePeano
	! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:38:27' prior: 50728031!
- unNumeroDePeano
	^ self previous - unNumeroDePeano previous! !

II - I!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
- unNumeroDePeano
	^ self previous - unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
- unNumeroDePeano
	^ self previous - unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIII - II!
!I class methodsFor: 'nil' stamp: 'g 8/26/2019 20:39:53'!
- unNumeroDePeano
	^ unNumeroDePeano! !

IIII - II!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:40:31' prior: 50728035!
- unNumeroDePeano
	^ self previous - unNumeroDePeano next! !

IIII - II!

IIII - II!

IIII - II!

Smalltalk removeClassNamed: #III!

Smalltalk removeClassNamed: #IIII!

II + II!

II + II!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
- unNumeroDePeano
	^ self previous - unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
- unNumeroDePeano
	^ self previous - unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIII - II!

DenotativeObject subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIII class' category: #'Numeros De Peano'!
IIIII class
	instanceVariableNames: 'next previous'!
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:34'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:34'!
- unNumeroDePeano
	^ self previous - unNumeroDePeano next! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:34'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:34'!
previous
	^previous! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:34'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:34'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:17' prior: 50728139!
- unNumeroDePeano
	^ self previous - unNumeroDePeano previous! !

II removeAllNext !

Smalltalk removeClassNamed: #IIIII!

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
- unNumeroDePeano
	^ self previous - unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
- unNumeroDePeano
	^ self previous - unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIII - II!

IIII - II!

IIII - II!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:46:26' prior: 50728289!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I].
	^ self previous - unNumeroDePeano previous! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I].
	^ self previous - unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I].
	^ self previous - unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIII - II!

IIII - I!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:29' prior: 50728394!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self previous - unNumeroDePeano previous! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self previous - unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self previous - unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIII - II!

IIII - II!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:49:04' prior: 50728500!
- unNumeroDePeano
	^ self previous - unNumeroDePeano previous! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:49:40' prior: 50728606!
- unNumeroDePeano
	
	^ self previous - unNumeroDePeano previous! !

I class removeSelector: #-!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:25' prior: 50728611!
- unNumeroDePeano
	unNumeroDePeano = 1 ifTrue: [^self previous]
	^ self previous - unNumeroDePeano previous! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:35' prior: 50728617!
- unNumeroDePeano
	unNumeroDePeano = 1 ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
- unNumeroDePeano
	unNumeroDePeano = 1 ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
- unNumeroDePeano
	unNumeroDePeano = 1 ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIII - II!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:02' prior: 50728624!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIII - II!

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!
!I class methodsFor: 'nil' stamp: 'g 8/26/2019 20:53:14'!
* unNumeroDePeano
	^unNumeroDePeano! !
!II class methodsFor: 'nil' stamp: 'g 8/26/2019 20:56:36'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

III * II!

DenotativeObject subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIII class' category: #'Numeros De Peano'!
IIIII class
	instanceVariableNames: 'next previous'!
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
previous
	^previous! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIII class' category: #'Numeros De Peano'!
IIIIII class
	instanceVariableNames: 'next previous'!
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
previous
	^previous! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

III * III !

DenotativeObject subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIII class' category: #'Numeros De Peano'!
IIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
previous
	^previous! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIII class' category: #'Numeros De Peano'!
IIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
previous
	^previous! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
previous
	^previous! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIIII * IIII!

DenotativeObject subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous
	^previous! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous
	^previous! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous
	^previous! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous
	^previous! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous
	^previous! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous
	^previous! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous
	^previous! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
previous
	^previous! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIIII * I !

II removeAllNext !

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIII!

Smalltalk removeClassNamed: #IIIIIII!

Smalltalk removeClassNamed: #IIIIII!

Smalltalk removeClassNamed: #IIIII!

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

----SNAPSHOT----(26 August 2019 21:01:34) clase1.image priorSource: 12684098!

----STARTUP---- (26 August 2019 21:03:59) as /home/gzeitoune/Documents/UBA/ingSoft1/ing-soft-1/linux64/clase1.image!


ObjectBuilder create: #Booleano
	collaboratorNames: ''
	in: 'Verdadero y False'
	!

!classDefinition: #Booleano category: #'Verdadero y False'!
DenotativeObject subclass: #Booleano
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Verdadero y False'!

!classDefinition: 'Booleano class' category: #'Verdadero y False'!
Booleano class
	instanceVariableNames: ''!

ObjectBuilder create: #anObject
	collaboratorNames: ''
	in: 'Verdadero y Falso'
	!

!classDefinition: #anObject category: #'Verdadero y Falso'!
DenotativeObject subclass: #anObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Verdadero y Falso'!

!classDefinition: 'anObject class' category: #'Verdadero y Falso'!
anObject class
	instanceVariableNames: ''!

Smalltalk removeClassNamed: #Verdadero!
!Verdadero class methodsFor: 'nil' stamp: 'g 8/26/2019 21:06:17'!
& unBooleano
 ^ unBooleano! !

!classDefinition: #Falso category: #'Verdadero y Falso'!
DenotativeObject subclass: #Falso
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Verdadero y Falso'!
!Verdadero class methodsFor: 'nil' stamp: 'g 8/26/2019 21:07:03'!
no
^Falso! !
!Verdadero class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:07:27'!
y: unBooleano
 ^ unBooleano! !

Verdadero class removeSelector: #&!
!Verdadero class methodsFor: 'nil' stamp: 'g 8/26/2019 21:07:54'!
o: unBooleano
	^self! !
!Falso class methodsFor: 'nil' stamp: 'g 8/26/2019 21:08:07'!
no
	^Verdadero ! !
!Falso class methodsFor: 'nil' stamp: 'g 8/26/2019 21:08:22'!
y: unBooleano
 ^self! !
!Falso class methodsFor: 'nil' stamp: 'g 8/26/2019 21:08:40'!
o: unBooleano
	^unBooleano ! !
!Verdadero class methodsFor: 'nil' stamp: 'g 8/26/2019 21:09:39'!
siVerdadero: aClosure
	^aClosure value! !

ObjectBuilder create: #BooleanosTests
	collaboratorNames: ''
	in: 'Verdadero y Falso'
	!

!classDefinition: #BooleanosTests category: #'Verdadero y Falso'!
DenotativeObject subclass: #BooleanosTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Verdadero y Falso'!

!classDefinition: 'BooleanosTests class' category: #'Verdadero y Falso'!
BooleanosTests class
	instanceVariableNames: ''!
!BooleanosTests class methodsFor: 'nil' stamp: 'g 8/26/2019 21:10:34'!
test01NoVerdaderoEsFalso
	self assert: Verdadero no = Falso! !
!BooleanosTests class methodsFor: 'nil' stamp: 'g 8/26/2019 21:12:03'!
test02NoFalsoEsVerdadero
	self assert: Falso no = Verdadero ! !
!BooleanosTests class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:13:06'!
test03FalsoYUnBooleanoEsFalso
	self assert: (Falso y: Falso) = Falso! !
!BooleanosTests class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:13:18' prior: 50729979!
test03FalsoYUnBooleanoEsFalso
	self assert: (Falso y: Falso) = Falso.
	self assert: (Falso y: Verdadero ) = Falso! !
!BooleanosTests class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:13:46'!
test04VerdaderoYFalsoEsFalso
	self assert: (Verdadero y: Falso) = Falso.! !
!BooleanosTests class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:14:14'!
test05VerdaderoYVerdaderoEsVerdadero
	self assert: (Verdadero y: Verdadero) = Verdadero.! !
!BooleanosTests class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:15:51'!
test06FalsoSiFalsoEvaluaElClosure
	self assert: (Falso siFalso: [2 + 3] = 5)! !
!BooleanosTests class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:16:15' prior: 50730004!
test06FalsoSiFalsoEvaluaElClosure
	self assert: (Falso siFalso: [2 + 3]) = 5! !
!BooleanosTests class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:16:49' prior: 50730010!
test06FalsoSiFalsoEvaluaElClosure
	self assert: (Falso siFalso: [^'hola'] = 'hola')! !
!BooleanosTests class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:16:55' prior: 50730016!
test06FalsoSiFalsoEvaluaElClosure
	self assert: (Falso siFalso: [^'hola']) = 'hola'! !
!Falso class methodsFor: 'nil' stamp: 'g 8/26/2019 21:17:22'!
siFalso: unClosure
	^unClosure value! !
!Falso class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:18:27'!
siVerdadero: unClosure
	! !
!Verdadero class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:19:01'!
siFalso: aClosure
! !
!BooleanosTests class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:21:09' prior: 50730022!
test06FalsoSiFalsoEvaluaElClosure
	|closureNoEvaluado|
	closureNoEvaluado  _ true.
	Falso siFalso: [closureNoEvaluado  _ false].
	self assert: closureNoEvaluado not.
	
	self assert: (Falso siFalso: [^'hola']) = 'hola'
	! !

----SNAPSHOT----(26 August 2019 21:21:45) clase1.image priorSource: 12743605!

----SNAPSHOT----(26 August 2019 21:22:01) clase1.image priorSource: 12748734!

----QUIT----(26 August 2019 21:22:12) clase1.image priorSource: 12748813!

----STARTUP---- (31 August 2019 15:12:36) as /home/chiara/Documents/UBA/ing-soft-1/linux64/clase1.image!

!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:15:12'!
restaReversa: unNumeroDePeano
	^unNumeroDePeano previous
 	! !
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:15:21' prior: 50730059!
restaReversa: unNumeroDePeano
	^unNumeroDePeano previous
! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:18:14'!
restaReversa: unNumeroDePeano
	unNumeroDePeano restaReversa: self! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:24:18' prior: 50730069!
restaReversa: unNumeroDePeano
	
	"self restaReversa:  unNumeroDePeano previous "! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:24:44' prior: 50728730!
- unNumeroDePeano
	unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:25:31' prior: 50730074!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:25:45' prior: 50730088!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:25:57' prior: 50730080!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !

II - I!

II - II!

II - II!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

III - I!

III - II!

III - III!

IIII - II!

IIII - III!

IIII - I!

I - II!

II - II!

II - II !

III - III !

I restaReversa: I!

I restaReversa: I!

I restaReversa: II!

I restaReversa: III!

II restaReversa: I!

II restaReversa: II!
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:23' prior: 50730100!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self previous.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:37'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:37'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:37'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self previous.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self previous.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

IIII - II!

IIII - IIII!

IIII - IIII!

IIII - IIII!
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:33:03' prior: 50730238!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !

IIII - IIII!

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:33:54' prior: 50730374!
- unNumeroDePeano
	^unNumeroDePeano previous restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
- unNumeroDePeano
	^unNumeroDePeano previous restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
- unNumeroDePeano
	^unNumeroDePeano previous restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

II -I!

III - II!
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:52' prior: 50730385!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II-II!

II restaReversa: II !

I restaReversa: II  !

I  + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:36:23'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:36:23'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:36:23'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:36:23'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:36:23'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:36:23'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:36:23'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:36:23'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

III restaReversa: II!

III-II !

II - III!

I - III!

I + III!

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:37:38'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:37:38'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:37:38'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:37:38'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:37:38'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:37:38'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:37:38'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:37:38'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

II-IIII!

III-IIII!

IIII-II!

IIII-I!

IIII-III!
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:40:05' prior: 50730094!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:45:21'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !

II / I!
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:47:48'!
/ unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I] ifFalse: []
	^unNumeroDePeano! !
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:35' prior: 50730671!
/ unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I] ifFalse: [self Error]! !

II / I!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:48'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:48'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:48'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:48'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:48'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:48'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:48'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

II / II!

III / II!

IIII / II!
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:50:05' prior: 50728842!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:51:02' prior: 50730818!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:51:43' prior: 50730825!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:51:55' prior: 50730832!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

III * II!

DenotativeObject subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIII class' category: #'Numeros De Peano'!
IIIII class
	instanceVariableNames: 'next previous'!
!IIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
previous
	^previous! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

DenotativeObject subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIII class' category: #'Numeros De Peano'!
IIIIII class
	instanceVariableNames: 'next previous'!
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
previous
	^previous! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

II * III !

I * III   !

II * I!

II removeAllNext !

Smalltalk removeClassNamed: #IIIIII!

Smalltalk removeClassNamed: #IIIII!

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

----SNAPSHOT----(31 August 2019 15:53:25) clase1.image priorSource: 12748892!

----QUIT----(31 August 2019 15:53:30) clase1.image priorSource: 12783002!

----STARTUP---- (31 August 2019 15:55:28) as /home/chiara/Documents/UBA/ing-soft-1/linux64/clase1.image!


----End fileIn of /home/chiara/Documents/UBA/ing-soft-1/linux64/PeanoTest.st----!

----End fileIn of /home/chiara/Documents/UBA/ing-soft-1/linux64/PeanoTest.st----!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !
!I class methodsFor: 'nil' stamp: 'f 8/31/2019 16:00:59'!
descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
	^'No se puede dividir por un numero mayor'! !
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 16:01:12' prior: 50730677!
/ unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I] ifFalse: [self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ]! !

III / IIII!
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 16:02:27' prior: 50731469!
/ unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I] ifFalse: [self Error ]! !

III / IIII!

III / IIII!
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 16:03:35' prior: 50731477!
/ unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I] ifFalse: [self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ]! !
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 16:03:38' prior: 50731484!
/ unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I] ifFalse: [self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ].! !

----SNAPSHOT----(31 August 2019 16:03:43) clase1.image priorSource: 12783081!

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

----SNAPSHOT----(31 August 2019 16:04:11) clase1.image priorSource: 12795145!

----QUIT----(31 August 2019 16:04:26) clase1.image priorSource: 12795315!

----STARTUP---- (31 August 2019 17:32:19) as /home/chiara/Documents/UBA/ing-soft-1/linux64/clase1.image!


----End fileIn of /home/chiara/Documents/UBA/ing-soft-1/linux64/Ejercicio 00-ToTheMoon/ToTheMoon.st----!

----STARTUP---- (31 August 2019 17:35:05) as /home/chiara/Documents/UBA/ing-soft-1/linux64/clase1.image!

!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:45:38' prior: 50730656!
restaReversa: unNumeroDePeano
	
"	^ unNumeroDePeano previous restaReversa: self."
	^ self previous restaReversa: unNumeroDePeano previous! !
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:45:55' prior: 50730064!
restaReversa: unNumeroDePeano
	^unNumeroDePeano
! !

II-I!
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:01' prior: 50731521!
restaReversa: unNumeroDePeano
	^unNumeroDePeano previous
! !
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:04' prior: 50731526!
restaReversa: unNumeroDePeano
	^unNumeroDePeano previous.
! !

II+II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
restaReversa: unNumeroDePeano
	
"	^ unNumeroDePeano previous restaReversa: self."
	^ self previous restaReversa: unNumeroDePeano previous! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
restaReversa: unNumeroDePeano
	
"	^ unNumeroDePeano previous restaReversa: self."
	^ self previous restaReversa: unNumeroDePeano previous! !

III-II!

III-III!

III-IIII!

III-I!

III-II  !

III-II   I !

IIII-II !

IIII/II  !

IIII/III!

II * II!
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:49:43' prior: 50731513!
restaReversa: unNumeroDePeano
	^ self previous restaReversa: unNumeroDePeano previous! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:49:52' prior: 50730517!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
restaReversa: unNumeroDePeano
	^ self previous restaReversa: unNumeroDePeano previous! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
restaReversa: unNumeroDePeano
	^ self previous restaReversa: unNumeroDePeano previous! !

II * II!

II * II = IIII!

Smalltalk removeClassNamed: #PeanoTest!

----End fileIn of /home/chiara/Documents/UBA/ing-soft-1/linux64/PeanoTest.st----!
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:55:42'!
descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
	^'No se puede dividir por un numero mayor'! !
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:58:57'!
descripcionDeErrorDeNumerosNegativosNoSoportados
	^'No se puede tener numeros negativos'! !
!I class methodsFor: 'nil' stamp: 'f 8/31/2019 17:59:43'!
- unNumeroDePeano
 ^self error: self descripcionDeErrorDeNumerosNegativosNoSoportados ! !
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:59:46' prior: 50731927!
- unNumeroDePeano
	^self error: self descripcionDeErrorDeNumerosNegativosNoSoportados ! !

----SNAPSHOT----(31 August 2019 18:00:24) clase1.image priorSource: 12795394!

----SNAPSHOT----(31 August 2019 18:00:27) clase1.image priorSource: 12809209!

----QUIT----(31 August 2019 18:00:32) clase1.image priorSource: 12809288!

----STARTUP---- (1 September 2019 19:14:22) as /home/gzeitoune/Documents/UBA/ingSoft1/ing-soft-1/linux64/clase1.image!

!PeanoTest class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:16:34' prior: 50731902!
test12DivisionNoSoportaDividirPorUnNumeroMayor

	Assert should: [ III /  IIII ] signal: Error withDescription: II descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor.
	
	"Assert should: [ I /  II] signal: Error withDescription: I descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor"
! !
!PeanoTest class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:16:52' prior: 50731950!
test12DivisionNoSoportaDividirPorUnNumeroMayor

	"Assert should: [ III /  IIII ] signal: Error withDescription: II descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor."
	
	Assert should: [ I /  II] signal: Error withDescription: I descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
! !
!PeanoTest class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:17:04' prior: 50731963!
test12DivisionNoSoportaDividirPorUnNumeroMayor

	Assert should: [ III /  IIII ] signal: Error withDescription: II descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor.
	
	Assert should: [ I /  II] signal: Error withDescription: I descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
! !
!I class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:28:13'!
> unNumeroDePeano
	^false! !
!II class methodsFor: 'nil' stamp: 'g 9/1/2019 19:29:29'!
> unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^true].
	^self previous > unNumeroDePeano previous! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!
!II class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:22' prior: 50730664!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	unNumeroDePeano > self ifTrue: [self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ]
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	unNumeroDePeano > self ifTrue: [self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ]
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
> unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^true].
	^self previous > unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
	^'No se puede dividir por un numero mayor'! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
restaReversa: unNumeroDePeano
	^ self previous restaReversa: unNumeroDePeano previous! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	unNumeroDePeano > self ifTrue: [self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ]
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
> unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^true].
	^self previous > unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
	^'No se puede dividir por un numero mayor'! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
restaReversa: unNumeroDePeano
	^ self previous restaReversa: unNumeroDePeano previous! !

I > II!

II > I!

IIII > II!

IIII > IIII!

IIII > II!

IIII > III!

III > I!

III > II!

III / IIII!
!II class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:31:25' prior: 50732000!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	unNumeroDePeano > self ifTrue: [^self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ]
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!I class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:31:49' prior: 50731492!
/ unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I] ifFalse: [^self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ].! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	unNumeroDePeano > self ifTrue: [^self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ]
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
> unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^true].
	^self previous > unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
	^'No se puede dividir por un numero mayor'! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
restaReversa: unNumeroDePeano
	^ self previous restaReversa: unNumeroDePeano previous! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	unNumeroDePeano > self ifTrue: [^self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ]
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
> unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^true].
	^self previous > unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
	^'No se puede dividir por un numero mayor'! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
restaReversa: unNumeroDePeano
	^ self previous restaReversa: unNumeroDePeano previous! !

III / IIII!
!II class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:32' prior: 50732171!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	unNumeroDePeano > self ifTrue: [^self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	unNumeroDePeano > self ifTrue: [^self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
> unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^true].
	^self previous > unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
	^'No se puede dividir por un numero mayor'! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
restaReversa: unNumeroDePeano
	^ self previous restaReversa: unNumeroDePeano previous! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	unNumeroDePeano > self ifTrue: [^self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
> unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^true].
	^self previous > unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
	^'No se puede dividir por un numero mayor'! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
restaReversa: unNumeroDePeano
	^ self previous restaReversa: unNumeroDePeano previous! !

III / IIII!

Smalltalk removeClassNamed: #PeanoTest!

----End fileIn of /home/gzeitoune/Documents/UBA/ingSoft1/ing-soft-1/linux64/PeanoTest.st----!

----SNAPSHOT----(1 September 2019 19:34:22) clase1.image priorSource: 12809367!

----SNAPSHOT----(1 September 2019 19:34:44) clase1.image priorSource: 12831101!

----QUIT----(1 September 2019 19:34:48) clase1.image priorSource: 12831182!

----STARTUP---- (2 September 2019 16:22:42) as /home/gzeitoune/Documents/UBA/ingSoft1/ing-soft-1/linux64/clase1.image!


	self subclassResponsibility!

	self subclassResponsibility!

	self subclassResponsibility!

----QUIT----(2 September 2019 16:33:07) clase1.image priorSource: 12831263!

----STARTUP---- (2 September 2019 18:43:01) as /home/gzeitoune/Documents/UBA/ingSoft1/ing-soft-1/linux64/18-CodigoRepetido/codigoRepetido.image!


Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

Smalltalk removeClassNamed: #II!

Smalltalk removeClassNamed: #I!

Smalltalk removeClassNamed: #PeanoTest!

Smalltalk removeClassNamed: #Verdadero!

Smalltalk removeClassNamed: #Falso!

Smalltalk removeClassNamed: #BooleanosTests!

Smalltalk removeClassNamed: #saludador!

Smalltalk removeClassNamed: #bill!

----End fileIn of /home/gzeitoune/Documents/UBA/ingSoft1/2019-2c/18-CodigoRepetido/CodigoRepetido-Ejercicio.st----!
!CustomerBook methodsFor: 'customer management' stamp: 'gc 9/2/2019 18:46:41' prior: 50732855!
addCustomerNamed: aName

	aName isEmpty ifTrue: [ self signalCustomerNameCannotBeEmpty ].
	(self includesCustomerNamed: aName) ifTrue: [ self signalCustomerAlreadyExists ].
	
	active add: aName ! !
!CustomerBook methodsFor: 'customer management' stamp: 'gc 9/2/2019 18:46:55' prior: 50732932!
addCustomerNamed: aName

	aName isEmpty ifTrue: [ self signalCustomerNameCannotBeEmpty ].
	(self includesCustomerNamed: aName) ifTrue: [ self signalCustomerAlreadyExists ].
	
	active add: aName ! !
!CustomerBook methodsFor: 'customer management' stamp: 'gc 9/2/2019 18:48:46' prior: 50732869!
numberOfCustomers
	
	^self numberOfActiveCustomers + self numberOfSuspendedCustomers ! !
!CustomerBook methodsFor: 'customer management' stamp: 'gc 9/2/2019 18:59:34'!
remove: aName fromGroup: aGroup

	! !
!CustomerBook methodsFor: 'customer management' stamp: 'gc 9/2/2019 19:00:25' prior: 50732958!
remove: aName fromGroup: aGroup

	(aGroup includes: aName) ifTrue: [aGroup remove: aName. ^aName ].! !
!CustomerBook methodsFor: 'customer management' stamp: 'gc 9/2/2019 19:00:33' prior: 50732963!
remove: aName fromGroup: aGroup

	(aGroup includes: aName) ifTrue: [aGroup remove: aName. ^aName].! !
!CustomerBook methodsFor: 'customer management' stamp: 'gc 9/2/2019 19:00:46' prior: 50732970!
remove: aName fromGroup: aGroup

	(aGroup includes: aName) ifTrue: [aGroup remove: aName. ^aName].
	
	^'Not in this group'! !
!CustomerBook methodsFor: 'customer management' stamp: 'gc 9/2/2019 19:02:24' prior: 50732878!
removeCustomerNamed: aName 
	| removedName |
	removedName := self remove: aName fromGroup: active. 
	
	removedName = aName ifTrue:[^aName ].
	
	removedName := self remove: aName fromGroup: suspended. 
	
	removedName = aName ifTrue:[^aName ].
	
	^ NotFound signal.
! !
!CustomerBook methodsFor: 'customer management' stamp: 'gc 9/2/2019 19:02:37' prior: 50732984!
removeCustomerNamed: aName 
	| removedName |
	removedName := self remove: aName fromGroup: active. 
	
	removedName = aName ifTrue:[ ^aName ].
	
	removedName := self remove: aName fromGroup: suspended. 
	
	removedName = aName ifTrue:[ ^aName ].
	
	^ NotFound signal.
! !
!CustomerBook methodsFor: 'customer management' stamp: 'gc 9/2/2019 19:02:51' prior: 50732996!
removeCustomerNamed: aName 
	| removedName |

	removedName := self remove: aName fromGroup: active. 
	removedName = aName ifTrue:[ ^aName ].
	
	removedName := self remove: aName fromGroup: suspended. 
	removedName = aName ifTrue:[ ^aName ].
	
	^ NotFound signal.
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 19:05:31'!
measureTime: aClosure

	| millisecondsBeforeRunning millisecondsAfterRunning |

	millisecondsBeforeRunning := Time millisecondClockValue * millisecond.
	aClosure value.
	millisecondsAfterRunning := Time millisecondClockValue * millisecond.
	
	self assert: (millisecondsAfterRunning-millisecondsBeforeRunning) < (50 * millisecond)
	
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 19:05:47' prior: 50733019!
measureTime: aClosure

	| millisecondsBeforeRunning millisecondsAfterRunning |

	millisecondsBeforeRunning := Time millisecondClockValue * millisecond.
	aClosure value.
	millisecondsAfterRunning := Time millisecondClockValue * millisecond.
	
	^ millisecondsAfterRunning - millisecondsBeforeRunning
	
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 19:06:51' prior: 50732689!
test01AddingCustomerShouldNotTakeMoreThan50Milliseconds

	| customerBook miliseconds |
	
	customerBook := CustomerBook new.
	
	miliseconds := self measureTime: [customerBook addCustomerNamed: 'John Lennon'.].
	
	
	self assert: miliseconds < (50 * millisecond)
	
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 19:07:24' prior: 50732706!
test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds

	| customerBook millisecondsBeforeRunning millisecondsAfterRunning paulMcCartney |
	
	customerBook := CustomerBook new.
	paulMcCartney := 'Paul McCartney'.
	
	customerBook addCustomerNamed: paulMcCartney.
	  
	millisecondsBeforeRunning := Time millisecondClockValue * millisecond.
	customerBook removeCustomerNamed: paulMcCartney.
	millisecondsAfterRunning := Time millisecondClockValue * millisecond.
	
	self assert: (millisecondsAfterRunning-millisecondsBeforeRunning) < (100 * millisecond)
	
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 19:15:34' prior: 50733058!
test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds

	| customerBook milliseconds paulMcCartney |
	
	customerBook := CustomerBook new.
	paulMcCartney := 'Paul McCartney'.
	
	customerBook addCustomerNamed: paulMcCartney.
	
	milliseconds := self measureTime: [customerBook removeCustomerNamed: paulMcCartney.].
	
	self assert: milliseconds < (100 * millisecond)
	
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 19:15:44' prior: 50733046!
test01AddingCustomerShouldNotTakeMoreThan50Milliseconds

	| customerBook milliseconds |
	
	customerBook := CustomerBook new.
	
	milliseconds := self measureTime: [customerBook addCustomerNamed: 'John Lennon'.].
	
	
	self assert: milliseconds < (50 * millisecond)
	
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 19:21:15'!
newBookWithCustomer: aName
	
	| customerBook |
			
	customerBook := CustomerBook new.
	customerBook addCustomerNamed: aName.
	
	^customerBook ! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 19:22:18' prior: 50733079!
test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds

	| customerBook milliseconds paulMcCartney |

	paulMcCartney := 'Paul McCartney'.
	
	customerBook := self newBookWithCustomer: paulMcCartney .

	milliseconds := self measureTime: [customerBook removeCustomerNamed: paulMcCartney.].
	
	self assert: milliseconds < (100 * millisecond)
	
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 19:23:39' prior: 50732738!
test04CanNotRemoveAnInvalidCustomer
	
	| customerBook johnLennon |
			
	johnLennon := 'John Lennon'.
	customerBook := self newBookWithCustomer: johnLennon.
	
	[ customerBook removeCustomerNamed: 'Paul McCartney'.
	self fail ]
		on: NotFound 
		do: [ :anError | 
			self assert: customerBook numberOfCustomers = 1.
			self assert: (customerBook includesCustomerNamed: johnLennon) ]
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 19:25:09' prior: 50732753!
test05SuspendingACustomerShouldNotRemoveItFromCustomerBook

	| customerBook paulMcCartney|
	
	paulMcCartney := 'Paul McCartney'.
	
	customerBook := self newBookWithCustomer: paulMcCartney.
	customerBook suspendCustomerNamed: paulMcCartney.
	
	self assert: 0 equals: customerBook numberOfActiveCustomers.
	self assert: 1 equals: customerBook numberOfSuspendedCustomers.
	self assert: 1 equals: customerBook numberOfCustomers.
	self assert: (customerBook includesCustomerNamed: paulMcCartney).
	

	
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 19:25:31' prior: 50732772!
test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook

	| customerBook paulMcCartney|

	paulMcCartney := 'Paul McCartney'.
	
	customerBook := self newBookWithCustomer: paulMcCartney.
	customerBook suspendCustomerNamed: paulMcCartney.
	customerBook removeCustomerNamed: paulMcCartney.
	
	self assert: 0 equals: customerBook numberOfActiveCustomers.
	self assert: 0 equals: customerBook numberOfSuspendedCustomers.
	self assert: 0 equals: customerBook numberOfCustomers.
	self deny: (customerBook includesCustomerNamed: paulMcCartney).


	
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 19:25:56' prior: 50732793!
test07CanNotSuspendAnInvalidCustomer
	
	| customerBook johnLennon |
			
	johnLennon := 'John Lennon'.
	customerBook := self newBookWithCustomer: johnLennon.
	
	[ customerBook suspendCustomerNamed: 'Paul McCartney'.
	self fail ]
		on: CantSuspend 
		do: [ :anError | 
			self assert: customerBook numberOfCustomers = 1.
			self assert: (customerBook includesCustomerNamed: johnLennon) ]
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 19:26:28' prior: 50732809!
test08CanNotSuspendAnAlreadySuspendedCustomer
	
	| customerBook johnLennon |

	johnLennon := 'John Lennon'.
	customerBook := self newBookWithCustomer: johnLennon.
	customerBook suspendCustomerNamed: johnLennon.
	
	[ customerBook suspendCustomerNamed: johnLennon.
	self fail ]
		on: CantSuspend 
		do: [ :anError | 
			self assert: customerBook numberOfCustomers = 1.
			self assert: (customerBook includesCustomerNamed: johnLennon) ]
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 19:30:47' prior: 50732726!
test03CanNotAddACustomerWithEmptyName 

	| customerBook |
			
	

	[customerBook := CustomerBook new. 
		customerBook addCustomerNamed: ''.
	self fail ]
		on: Error 
		do: [ :anError | 
			self assert: anError messageText = CustomerBook customerCanNotBeEmptyErrorMessage.
			self assert: customerBook isEmpty ]! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 19:31:35' prior: 50733213!
test03CanNotAddACustomerWithEmptyName 

	| customerBook |
			
	

	[  customerBook := self newBookWithCustomer: ''.
	self fail ]
		on: Error 
		do: [ :anError | 
			self assert: anError messageText = CustomerBook customerCanNotBeEmptyErrorMessage.
			self assert: customerBook isEmpty ]! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 19:31:42' prior: 50733226!
test03CanNotAddACustomerWithEmptyName 

	| customerBook |

	[  customerBook := self newBookWithCustomer: ''.
	self fail ]
		on: Error 
		do: [ :anError | 
			self assert: anError messageText = CustomerBook customerCanNotBeEmptyErrorMessage.
			self assert: customerBook isEmpty ]! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 19:32:58' prior: 50733238!
test03CanNotAddACustomerWithEmptyName 

	| customerBook emptyName|
	
	emptyName := ''.
	[  customerBook := self newBookWithCustomer: emptyName
	self fail ]
		on: Error 
		do: [ :anError | 
			self assert: anError messageText = CustomerBook customerCanNotBeEmptyErrorMessage.
			self assert: customerBook isEmpty ]! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 19:33:44' prior: 50733250!
test03CanNotAddACustomerWithEmptyName 

	| customerBook|
	
	customerBook  := CustomerBook new.

	[  customerBook addCustomerNamed: ''.
	self fail ]
		on: Error 
		do: [ :anError | 
			self assert: anError messageText = CustomerBook customerCanNotBeEmptyErrorMessage.
			self assert: customerBook isEmpty ]! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 19:33:51' prior: 50733263!
test03CanNotAddACustomerWithEmptyName 

	| customerBook |
	
	customerBook  := CustomerBook new.

	[  customerBook addCustomerNamed: ''.
	self fail ]
		on: Error 
		do: [ :anError | 
			self assert: anError messageText = CustomerBook customerCanNotBeEmptyErrorMessage.
			self assert: customerBook isEmpty ]! !

----SNAPSHOT----(2 September 2019 19:33:58) codigoRepetido.image priorSource: 12831554!

----SNAPSHOT----(2 September 2019 19:37:42) codigoRepetido.image priorSource: 12852405!

----QUIT----(2 September 2019 19:37:50) codigoRepetido.image priorSource: 12852494!

----STARTUP---- (2 September 2019 19:57:01) as /home/gzeitoune/Documents/UBA/ingSoft1/ing-soft-1/linux64/18-CodigoRepetido/codigoRepetido.image!

!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 20:39:08' prior: 50733113!
test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds

	| customerBook milliseconds paulMcCartney |
	
	customerBook := CustomerBook new.
	paulMcCartney := 'Paul McCartney'.
	
	customerBook addCustomerNamed: paulMcCartney .

	milliseconds := self measureTime: [customerBook removeCustomerNamed: paulMcCartney.].
	
	self assert: milliseconds < (100 * millisecond)
	
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 20:39:50' prior: 50733127!
test04CanNotRemoveAnInvalidCustomer
	
	| customerBook johnLennon |
			
	customerBook  := CustomerBook new.
	johnLennon := 'John Lennon'.
	
	customerBook addCustomerNamed: johnLennon .
	
	[ customerBook removeCustomerNamed: 'Paul McCartney'.
	self fail ]
		on: NotFound 
		do: [ :anError | 
			self assert: customerBook numberOfCustomers = 1.
			self assert: (customerBook includesCustomerNamed: johnLennon) ]
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 20:39:51' prior: 50733317!
test04CanNotRemoveAnInvalidCustomer
	
	| customerBook johnLennon |
			
	customerBook  := CustomerBook new.
	johnLennon := 'John Lennon'.

	customerBook addCustomerNamed: johnLennon .
	
	[ customerBook removeCustomerNamed: 'Paul McCartney'.
	self fail ]
		on: NotFound 
		do: [ :anError | 
			self assert: customerBook numberOfCustomers = 1.
			self assert: (customerBook includesCustomerNamed: johnLennon) ]
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 20:40:31' prior: 50733142!
test05SuspendingACustomerShouldNotRemoveItFromCustomerBook

	| customerBook paulMcCartney|
	
	customerBook  := CustomerBook new.
	paulMcCartney := 'Paul McCartney'.
	
	customerBook addCustomerNamed: paulMcCartney .
	customerBook suspendCustomerNamed: paulMcCartney.
	
	self assert: 0 equals: customerBook numberOfActiveCustomers.
	self assert: 1 equals: customerBook numberOfSuspendedCustomers.
	self assert: 1 equals: customerBook numberOfCustomers.
	self assert: (customerBook includesCustomerNamed: paulMcCartney).
	

	
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 20:41:19' prior: 50733161!
test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook

	| customerBook paulMcCartney|

	customerBook  := CustomerBook new.
	paulMcCartney := 'Paul McCartney'.
	
	customerBook addCustomerNamed: paulMcCartney .
	customerBook suspendCustomerNamed: paulMcCartney.
	customerBook removeCustomerNamed: paulMcCartney.
	
	self assert: 0 equals: customerBook numberOfActiveCustomers.
	self assert: 0 equals: customerBook numberOfSuspendedCustomers.
	self assert: 0 equals: customerBook numberOfCustomers.
	self deny: (customerBook includesCustomerNamed: paulMcCartney).


	
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 20:41:47' prior: 50733181!
test07CanNotSuspendAnInvalidCustomer
	
	| customerBook johnLennon |

	customerBook  := CustomerBook new.		
	johnLennon := 'John Lennon'.

	customerBook addCustomerNamed: johnLennon .
	
	[ customerBook suspendCustomerNamed: 'Paul McCartney'.
	self fail ]
		on: CantSuspend 
		do: [ :anError | 
			self assert: customerBook numberOfCustomers = 1.
			self assert: (customerBook includesCustomerNamed: johnLennon) ]
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 20:42:10' prior: 50733196!
test08CanNotSuspendAnAlreadySuspendedCustomer
	
	| customerBook johnLennon |

	customerBook  := CustomerBook new.
	johnLennon := 'John Lennon'.
	customerBook addCustomerNamed: johnLennon .
	customerBook suspendCustomerNamed: johnLennon.
	
	[ customerBook suspendCustomerNamed: johnLennon.
	self fail ]
		on: CantSuspend 
		do: [ :anError | 
			self assert: customerBook numberOfCustomers = 1.
			self assert: (customerBook includesCustomerNamed: johnLennon) ]
! !

CustomerBookTest removeSelector: #newBookWithCustomer:!
!CustomerBookTest methodsFor: 'helpers' stamp: 'gc 9/2/2019 20:43:24'!
timeOf: aClosure isLesserThan: milliseconds

	| millisecondsBeforeRunning millisecondsAfterRunning |

	millisecondsBeforeRunning := Time millisecondClockValue * millisecond.
	aClosure value.
	millisecondsAfterRunning := Time millisecondClockValue * millisecond.
	
	^ millisecondsAfterRunning - millisecondsBeforeRunning
	
! !
!CustomerBookTest methodsFor: 'helpers' stamp: 'gc 9/2/2019 20:43:31' prior: 50733425!
timeOf: aClosure isLesserThan: milliseconds

	| millisecondsBeforeRunning millisecondsAfterRunning |

	millisecondsBeforeRunning := Time millisecondClockValue * millisecond.
	aClosure value.
	millisecondsAfterRunning := Time millisecondClockValue * millisecond.
	
	^ millisecondsAfterRunning - millisecondsBeforeRunning < milliseconds 
	
! !
!CustomerBookTest methodsFor: 'helpers' stamp: 'gc 9/2/2019 20:44:11' prior: 50733438!
timeOf: aClosure isLesserThan: aTime

	| millisecondsBeforeRunning millisecondsAfterRunning |

	millisecondsBeforeRunning := Time millisecondClockValue * millisecond.
	aClosure value.
	millisecondsAfterRunning := Time millisecondClockValue * millisecond.
	
	^ millisecondsAfterRunning - millisecondsBeforeRunning < aTime 
	
! !
!CustomerBookTest methodsFor: 'helpers' stamp: 'gc 9/2/2019 20:45:16' prior: 50733452!
timeOf: aClosure isLesserThan: aTime

	| milliseconds |

	milliseconds := self measureTime: aClosure.
	
	^ milliseconds < aTime 
	
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 20:46:35' prior: 50733094!
test01AddingCustomerShouldNotTakeMoreThan50Milliseconds

	| customerBook milliseconds |
	
	customerBook := CustomerBook new.
	
	milliseconds := self measureTime: [customerBook addCustomerNamed: 'John Lennon'.].
	
	
	self assert: (self timeOf: [customerBook addCustomerNamed: 'John Lennon'] isLesserThan: 50 * millisecond).
	
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 20:47:00' prior: 50733472!
test01AddingCustomerShouldNotTakeMoreThan50Milliseconds

	| customerBook milliseconds |
	
	customerBook := CustomerBook new.
	
	milliseconds := self measureTime: [customerBook addCustomerNamed: 'John Lennon'.].
	
	
	self assert: (self timeOf: [customerBook addCustomerNamed: 'John Lennon'] isLesserThan: (50 * millisecond)).
	
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 20:47:15' prior: 50733485!
test01AddingCustomerShouldNotTakeMoreThan50Milliseconds

	| customerBook |
	
	customerBook := CustomerBook new.
	
	self assert: (self timeOf: [customerBook addCustomerNamed: 'John Lennon'] isLesserThan: (50 * millisecond)).
	
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 20:47:19' prior: 50733499!
test01AddingCustomerShouldNotTakeMoreThan50Milliseconds

	| customerBook |
	
	customerBook := CustomerBook new.
	
	self assert: (self timeOf: [customerBook addCustomerNamed: 'John Lennon'] isLesserThan: 50 * millisecond).
	
! !

----SNAPSHOT----(2 September 2019 20:47:28) codigoRepetido.image priorSource: 12852583!
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 20:49:26' prior: 50733302!
test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds

	| customerBook paulMcCartney |
	
	customerBook := CustomerBook new.
	paulMcCartney := 'Paul McCartney'.
	
	customerBook addCustomerNamed: paulMcCartney .

	
	self assert: (self timeOf: [customerBook removeCustomerNamed: paulMcCartney.] isLesserThan: 100 * millisecond).
	
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 20:49:30' prior: 50733522!
test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds

	| customerBook paulMcCartney |
	
	customerBook := CustomerBook new.
	paulMcCartney := 'Paul McCartney'.
	
	customerBook addCustomerNamed: paulMcCartney .

	self assert: (self timeOf: [customerBook removeCustomerNamed: paulMcCartney.] isLesserThan: 100 * millisecond).
	
! !
!CustomerBook methodsFor: 'customer management' stamp: 'gc 9/2/2019 20:52:32' prior: 50733008!
removeCustomerNamed: aName 
	| removedName |
	
	active detect: [:name | name = aName] ifFound: [^active remove: aName ] ifNone: [].
	
	suspended detect: [:name | name = aName] ifFound: [^suspended remove: aName ] ifNone: [^NotFound signal]

	"removedName := self remove: aName fromGroup: active. 
	removedName = aName ifTrue:[ ^aName ].
	
	removedName := self remove: aName fromGroup: suspended. 
	removedName = aName ifTrue:[ ^aName ].
	
	^ NotFound signal."
! !
!CustomerBook methodsFor: 'customer management' stamp: 'gc 9/2/2019 20:53:15' prior: 50733550!
removeCustomerNamed: aName 
	| removedName |

	removedName := self remove: aName fromGroup: active. 
	removedName = aName ifTrue:[ ^aName ].
	
	removedName := self remove: aName fromGroup: suspended. 
	removedName = aName ifTrue:[ ^aName ].
	
	^ NotFound signal.
! !
!CustomerBook methodsFor: 'customer management' stamp: 'gc 9/2/2019 20:54:31' prior: 50733568!
removeCustomerNamed: aName 
	| removedName |

	^ self remove: aName fromGroup: active ifNone: [^self remove: aName fromGroup: suspended ifNone: [^NotFound signal.]]. 
"	removedName = aName ifTrue:[ ^aName ].
	
	removedName := self remove: aName fromGroup: suspended. 
	removedName = aName ifTrue:[ ^aName ].
	
	^ NotFound signal.
"! !
!CustomerBook methodsFor: 'customer management' stamp: 'gc 9/2/2019 20:55:26'!
remove: aName fromGroup: aGroup ifNone: aClosure

	(aGroup includes: aName) ifTrue: [aGroup remove: aName. ^aName] ifFalse: [^aClosure].
! !

CustomerBook removeSelector: #remove:fromGroup:!
!CustomerBook methodsFor: 'customer management' stamp: 'gc 9/2/2019 20:56:54' prior: 50733580!
removeCustomerNamed: aName 
	| |

	^ self remove: aName fromGroup: active ifNone: [
		^self remove: aName fromGroup: suspended ifNone: [^NotFound signal.]
	]. 
"	removedName = aName ifTrue:[ ^aName ].
	
	removedName := self remove: aName fromGroup: suspended. 
	removedName = aName ifTrue:[ ^aName ].
	
	^ NotFound signal.
"! !
!CustomerBook methodsFor: 'customer management' stamp: 'gc 9/2/2019 20:57:11' prior: 50733602!
removeCustomerNamed: aName 
	| |

	^ self remove: aName fromGroup: active ifNone: [
		^self remove: aName fromGroup: suspended 
			ifNone: [^NotFound signal.]
	]. 
"	removedName = aName ifTrue:[ ^aName ].
	
	removedName := self remove: aName fromGroup: suspended. 
	removedName = aName ifTrue:[ ^aName ].
	
	^ NotFound signal.
"! !
!CustomerBook methodsFor: 'customer management' stamp: 'gc 9/2/2019 20:57:28' prior: 50733616!
removeCustomerNamed: aName 
	| |

	^ self remove: aName fromGroup: active ifNone: [
		^self remove: aName fromGroup: suspended ifNone: [
			^NotFound signal.
		]
	]. 
"	removedName = aName ifTrue:[ ^aName ].
	
	removedName := self remove: aName fromGroup: suspended. 
	removedName = aName ifTrue:[ ^aName ].
	
	^ NotFound signal.
"! !
!CustomerBook methodsFor: 'customer management' stamp: 'gc 9/2/2019 20:58:11' prior: 50733593!
remove: aName fromGroup: aGroup ifNone: aClosure

	(aGroup includes: aName) ifTrue: [aGroup remove: aName. ^aName] ifFalse: [^aClosure value].
! !
!CustomerBookTest methodsFor: 'helpers' stamp: 'gc 9/2/2019 21:02:37' prior: 50733033!
measureTime: aClosure

	aClosure value.
	self fail.
! !
!CustomerBook methodsFor: 'customer management' stamp: 'gc 9/2/2019 21:03:58' prior: 50733630!
removeCustomerNamed: aName 

	^ self remove: aName fromGroup: active ifNone: [
		^self remove: aName fromGroup: suspended ifNone: [
			^NotFound signal.
		]
	].! !
!CustomerBookTest methodsFor: 'helpers' stamp: 'gc 9/2/2019 21:05:22' prior: 50733652!
measureTime: aClosure
	| millisecondsBeforeRunning millisecondsAfterRunning |

	millisecondsBeforeRunning := Time millisecondClockValue * millisecond.
	aClosure value.
	millisecondsAfterRunning := Time millisecondClockValue * millisecond.
! !
!CustomerBookTest methodsFor: 'helpers' stamp: 'gc 9/2/2019 21:05:52' prior: 50733665!
measureTime: aClosure
	| millisecondsBeforeRunning millisecondsAfterRunning |

	millisecondsBeforeRunning := Time millisecondClockValue * millisecond.
	aClosure value.
	millisecondsAfterRunning := Time millisecondClockValue * millisecond.

	^ millisecondsAfterRunning - millisecondsBeforeRunning 
! !
!CustomerBookTest methodsFor: 'helpers' stamp: 'gc 9/2/2019 21:06:15'!
aaa: aClosure
	
	aClosure  value.
	self fail.! !
!CustomerBookTest methodsFor: 'helpers' stamp: 'gc 9/2/2019 21:09:50'!
shouldCatchError: aClosure
	
	aClosure  value.
	self fail.! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 21:10:31' prior: 50733276!
test03CanNotAddACustomerWithEmptyName 

	| customerBook |
	
	customerBook  := CustomerBook new.

	[  self shouldCatchError: [customerBook addCustomerNamed: ''.].]
		on: Error 
		do: [ :anError | 
			self assert: anError messageText = CustomerBook customerCanNotBeEmptyErrorMessage.
			self assert: customerBook isEmpty ]! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 21:10:32' prior: 50733697!
test03CanNotAddACustomerWithEmptyName 

	| customerBook |
	
	customerBook  := CustomerBook new.

	[  self shouldCatchError: [customerBook addCustomerNamed: ''.]]
		on: Error 
		do: [ :anError | 
			self assert: anError messageText = CustomerBook customerCanNotBeEmptyErrorMessage.
			self assert: customerBook isEmpty ]! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 21:10:45' prior: 50733710!
test03CanNotAddACustomerWithEmptyName 

	| customerBook |
	
	customerBook  := CustomerBook new.

	[ self shouldCatchError: [customerBook addCustomerNamed: ''.] ]
		on: Error 
		do: [ :anError | 
			self assert: anError messageText = CustomerBook customerCanNotBeEmptyErrorMessage.
			self assert: customerBook isEmpty ]! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 21:11:02' prior: 50733333!
test04CanNotRemoveAnInvalidCustomer
	
	| customerBook johnLennon |
			
	customerBook  := CustomerBook new.
	johnLennon := 'John Lennon'.

	customerBook addCustomerNamed: johnLennon .
	
	[ self shouldCatchError: [customerBook removeCustomerNamed: 'Paul McCartney'.] ]
		on: NotFound 
		do: [ :anError | 
			self assert: customerBook numberOfCustomers = 1.
			self assert: (customerBook includesCustomerNamed: johnLennon) ]
! !

----SNAPSHOT----(2 September 2019 21:11:10) codigoRepetido.image priorSource: 12859779!
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 21:11:42' prior: 50733390!
test07CanNotSuspendAnInvalidCustomer
	
	| customerBook johnLennon |

	customerBook  := CustomerBook new.		
	johnLennon := 'John Lennon'.

	customerBook addCustomerNamed: johnLennon .
	
	[ self shouldCatchError: [customerBook suspendCustomerNamed: 'Paul McCartney'.] ]
		on: CantSuspend 
		do: [ :anError | 
			self assert: customerBook numberOfCustomers = 1.
			self assert: (customerBook includesCustomerNamed: johnLennon) ]
! !
!CustomerBookTest methodsFor: 'testing' stamp: 'gc 9/2/2019 21:12:08' prior: 50733406!
test08CanNotSuspendAnAlreadySuspendedCustomer
	
	| customerBook johnLennon |

	customerBook  := CustomerBook new.
	johnLennon := 'John Lennon'.
	customerBook addCustomerNamed: johnLennon .
	customerBook suspendCustomerNamed: johnLennon.
	
	[ self shouldCatchError: [customerBook suspendCustomerNamed: johnLennon.] ]
		on: CantSuspend 
		do: [ :anError | 
			self assert: customerBook numberOfCustomers = 1.
			self assert: (customerBook includesCustomerNamed: johnLennon) ]
! !

----SNAPSHOT----(2 September 2019 21:12:13) codigoRepetido.image priorSource: 12867241!

----SNAPSHOT----(2 September 2019 21:12:22) codigoRepetido.image priorSource: 12868445!

----QUIT----(2 September 2019 21:12:48) codigoRepetido.image priorSource: 12868534!