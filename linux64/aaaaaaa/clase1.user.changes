

----STARTUP---- (15 August 2019 18:23:26) as /home/chiara/Documents/UBA/ing-soft-1/linux64/CuisUniversity-3839.image!


----SNAPSHOT----(15 August 2019 18:23:43) clase1.image priorSource: 12633533!

Smalltalk removeClassNamed: #bill!

Smalltalk removeClassNamed: #saludador!

----STARTUP---- (26 August 2019 17:29:21) as /home/gzeitoune/Documents/UBA/ingSoft1/ing-soft-1/linux64/clase1.image!

!bill class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 17:40:27' prior: 50726407!
caminar:unaCantidadDeKilometros

	energia - 3 - unaCantidadDeKilometros >= 0
		ifTrue:  [energia _ energia - 3 - unaCantidadDeKilometros ] ifFalse: [^Error]
! !

bill energia !

bill caminar: 20!

----SNAPSHOT----(26 August 2019 17:41:08) clase1.image priorSource: 12633741!

----SNAPSHOT----(26 August 2019 17:41:29) clase1.image priorSource: 12634243!
!bill class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 17:44:47' prior: 50726462!
caminar:unaCantidadDeKilometros

	energia - 3 - unaCantidadDeKilometros >= 0
		ifTrue:  [energia _ energia - 3 - unaCantidadDeKilometros ] ifFalse: [^Error]
! !
!bill class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 17:45:57' prior: 50726476!
caminar:unaCantidadDeKilometros

	energia - 3 - unaCantidadDeKilometros >= 0
		ifTrue:  [energia _ energia - 3 - unaCantidadDeKilometros ] ifFalse: [self Error]
! !

bill caminar: 20!

----SNAPSHOT----(26 August 2019 17:46:17) clase1.image priorSource: 12634322!
!bill class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:01:12' prior: 50726484!
caminar:unaCantidadDeKilometros

	energia - 3 - unaCantidadDeKilometros >= 0
		ifTrue:  [energia _ energia - 3 - unaCantidadDeKilometros ] ifFalse: [self removeFromSystem]
! !

bill caminar: 20!

Smalltalk removeClassNamed: #bill!

----STARTUP---- (26 August 2019 18:02:24) as /home/gzeitoune/Documents/UBA/ingSoft1/ing-soft-1/linux64/clase1.image!


bill caminar: 20!

----STARTUP---- (26 August 2019 18:05:32) as /home/gzeitoune/Documents/UBA/ingSoft1/ing-soft-1/linux64/clase1.image!

!bill class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:08:30'!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	energia := 20.! !

bill class removeSelector: #initializeCollaboratorsFromFile!
!bill class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:13:31' prior: 50726484!
caminar:unaCantidadDeKilometros

	energia - 3 - unaCantidadDeKilometros >= 0
		ifTrue:  [energia _ energia - 3 - unaCantidadDeKilometros ] ifFalse: [self Error]
! !

ObjectBuilder create: #I
	collaboratorNames: 'valor'
	in: 'Numeros De Peano'
	!

!classDefinition: #I category: #'Numeros De Peano'!
DenotativeObject subclass: #I
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: 'I class' category: #'Numeros De Peano'!
I class
	instanceVariableNames: 'valor'!
!I class methodsFor: 'no messages' stamp: 'g 8/26/2019 18:16:08'!
valor
	^1! !

ObjectBuilder create: #II	
	collaboratorNames: 'valor'
	in: 'Numeros De Peano'
	!

!classDefinition: #II category: #'Numeros De Peano'!
DenotativeObject subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: 'II class' category: #'Numeros De Peano'!
II class
	instanceVariableNames: 'valor'!
!II class methodsFor: 'no messages' stamp: 'g 8/26/2019 18:18:21'!
valor
	^2! !

I
	collaboratorNames: ''
	in: 'Numeros De Peano'!

!classDefinition: #I category: #'Numeros De Peano'!
DenotativeObject subclass: #I
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: 'I class' category: #'Numeros De Peano'!
I class
	instanceVariableNames: ''!

II
	collaboratorNames: ''
	in: 'Numeros De Peano'!

!classDefinition: #II category: #'Numeros De Peano'!
DenotativeObject subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: 'II class' category: #'Numeros De Peano'!
II class
	instanceVariableNames: ''!
!I class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:19:35'!
previous
	^self Error! !
!I class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:19:53'!
next
	^2! !
!I class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:20:37' prior: 50726570!
next
	^self valor + 1! !
!I class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:23:08' prior: 50726574!
next
	self cloneNamed: (self name , 'I')
	! !

I next!

Smalltalk removeClassNamed: #II!

I next!

DenotativeObject subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #II category: #'Numeros De Peano'!
DenotativeObject subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

II class
	instanceVariableNames: ''!

!classDefinition: 'II class' category: #'Numeros De Peano'!
II class
	instanceVariableNames: ''!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:24:00'!
next
	self cloneNamed: (self name , 'I')
	! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:24:00'!
previous
	^self Error! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:24:00'!
valor
	^1! !
!I class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:30:07' prior: 50726578!
next
	^self cloneNamed: self name , 'I'
	! !

Smalltalk removeClassNamed: #II!

I next !

DenotativeObject subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #II category: #'Numeros De Peano'!
DenotativeObject subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

II class
	instanceVariableNames: ''!

!classDefinition: 'II class' category: #'Numeros De Peano'!
II class
	instanceVariableNames: ''!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:30:40'!
next
	^self cloneNamed: self name , 'I'
	! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:30:40'!
previous
	^self Error! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:30:40'!
valor
	^1! !
!I class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:31:06' prior: 50726610!
next
	^II
	! !

I class removeSelector: #previous!

!classDefinition: 'II class' category: #'Numeros De Peano'!
II class
	instanceVariableNames: 'next'!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:33:07' prior: 50726630!
next
	next ifNil:[
		self cloneNamed: self name , 'I'
	].
	^next! !

I next !

I next !

I next !

I next !

II next !

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:34:05'!
next
	next ifNil:[
		self cloneNamed: self name , 'I'
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:34:05'!
previous
	^self Error! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:34:05'!
valor
	^1! !

II next !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:34:54' prior: 50726650!
next
	next := next ifNil:[
		self cloneNamed: self name , 'I'
	].
	^next! !

Smalltalk removeClassNamed: #III!

II next !

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:35:10'!
next
	next := next ifNil:[
		self cloneNamed: self name , 'I'
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:35:10'!
previous
	^self Error! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:35:10'!
valor
	^1! !

II next !

II next !

II next !

II next !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:35:29' prior: 50726638!
valor
	^2! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:38:40'!
removeAllNext

	next ifNotNil:

	[

		next removeAllNext.

		next removeFromSystem.

		next := nil.

	]! !

II removeAllNext !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:40:06' prior: 50726723!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

II removeAllNext!

II removeAllNext!

Smalltalk removeClassNamed: #III!

II next!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:40:58'!
next
	next := next ifNil:[
		self cloneNamed: self name , 'I'
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:40:58'!
previous
	^self Error! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:40:58'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 18:40:58'!
valor
	^2! !

II removeAllNext !

Smalltalk removeClassNamed: #III!
!I class methodsFor: 'nil' stamp: 'g 8/26/2019 18:59:57'!
+ unNumeroDePeano
 	^unNumeroDePeano  next! !
!II class methodsFor: 'nil' stamp: 'g 8/26/2019 19:00:34'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !

II class removeSelector: #valor!

I class removeSelector: #valor!

----SNAPSHOT----(26 August 2019 19:01:21) clase1.image priorSource: 12634935!

!classDefinition: 'II class' category: #'Numeros De Peano'!
II class
	instanceVariableNames: 'next previous'!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:01:37' prior: 50726634!
previous
	^previous! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:03:49' prior: 50726684!
next
	next := next ifNil:[
		self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!II class methodsFor: 'nil' stamp: 'g 8/26/2019 19:05:38'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:05:46'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:05:46'!
next
	next := next ifNil:[
		self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:05:46'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:05:46'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:05:46'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:06:42'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:06:42'!
next
	next := next ifNil:[
		self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:06:42'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:06:42'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:06:42'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

II + II!

II + I!

II previous !

II previous: I!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:12:04'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:12:04'!
next
	next := next ifNil:[
		self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:12:04'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:12:04'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:12:04'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

II + I!

II previous !

I next!

III previous: II!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:13:51'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:13:51'!
next
	next := next ifNil:[
		self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:13:51'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:13:51'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:13:51'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:14:59'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:14:59'!
next
	next := next ifNil:[
		self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:14:59'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:14:59'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:14:59'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

II + II!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:35' prior: 50726793!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:43'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

II + IIII!

DenotativeObject subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIII class' category: #'Numeros De Peano'!
IIIII class
	instanceVariableNames: 'next previous'!
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
previous
	^previous! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIII class' category: #'Numeros De Peano'!
IIIIII class
	instanceVariableNames: 'next previous'!
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
previous
	^previous! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:16:51'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

II + IIII!

II + IIII!

 IIIIII !

IIIIII + IIIIII!

DenotativeObject subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIII class' category: #'Numeros De Peano'!
IIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous
	^previous! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIII class' category: #'Numeros De Peano'!
IIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous
	^previous! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous
	^previous! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous
	^previous! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous
	^previous! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:09'!
previous
	^previous! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:10'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:10'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIIIII + IIIIII + IIIIIIIIIIII!

DenotativeObject subclass: #IIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous
	^previous! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous
	^previous! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous
	^previous! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous
	^previous! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous
	^previous! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:21'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 19:17:22'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

II removeAllNext !

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIII!

Smalltalk removeClassNamed: #IIIIIII!

Smalltalk removeClassNamed: #IIIIII!

Smalltalk removeClassNamed: #IIIII!

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

----SNAPSHOT----(26 August 2019 19:50:33) clase1.image priorSource: 12644222!
!II class methodsFor: 'nil' stamp: 'g 8/26/2019 20:37:15'!
- unNumeroDePeano
	! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:38:27' prior: 50728031!
- unNumeroDePeano
	^ self previous - unNumeroDePeano previous! !

II - I!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
- unNumeroDePeano
	^ self previous - unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
- unNumeroDePeano
	^ self previous - unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:39:03'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIII - II!
!I class methodsFor: 'nil' stamp: 'g 8/26/2019 20:39:53'!
- unNumeroDePeano
	^ unNumeroDePeano! !

IIII - II!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:40:31' prior: 50728035!
- unNumeroDePeano
	^ self previous - unNumeroDePeano next! !

IIII - II!

IIII - II!

IIII - II!

Smalltalk removeClassNamed: #III!

Smalltalk removeClassNamed: #IIII!

II + II!

II + II!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
- unNumeroDePeano
	^ self previous - unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
- unNumeroDePeano
	^ self previous - unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:28'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIII - II!

DenotativeObject subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIII class' category: #'Numeros De Peano'!
IIIII class
	instanceVariableNames: 'next previous'!
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:34'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:34'!
- unNumeroDePeano
	^ self previous - unNumeroDePeano next! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:34'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:34'!
previous
	^previous! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:34'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:42:34'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:17' prior: 50728139!
- unNumeroDePeano
	^ self previous - unNumeroDePeano previous! !

II removeAllNext !

Smalltalk removeClassNamed: #IIIII!

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
- unNumeroDePeano
	^ self previous - unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
- unNumeroDePeano
	^ self previous - unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:43:37'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIII - II!

IIII - II!

IIII - II!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:46:26' prior: 50728289!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I].
	^ self previous - unNumeroDePeano previous! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I].
	^ self previous - unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I].
	^ self previous - unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:06'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIII - II!

IIII - I!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:29' prior: 50728394!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self previous - unNumeroDePeano previous! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self previous - unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self previous - unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:47:44'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIII - II!

IIII - II!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:49:04' prior: 50728500!
- unNumeroDePeano
	^ self previous - unNumeroDePeano previous! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:49:40' prior: 50728606!
- unNumeroDePeano
	
	^ self previous - unNumeroDePeano previous! !

I class removeSelector: #-!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:25' prior: 50728611!
- unNumeroDePeano
	unNumeroDePeano = 1 ifTrue: [^self previous]
	^ self previous - unNumeroDePeano previous! !
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:35' prior: 50728617!
- unNumeroDePeano
	unNumeroDePeano = 1 ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
- unNumeroDePeano
	unNumeroDePeano = 1 ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
- unNumeroDePeano
	unNumeroDePeano = 1 ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:50:47'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIII - II!
!II class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:02' prior: 50728624!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:52:12'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIII - II!

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!
!I class methodsFor: 'nil' stamp: 'g 8/26/2019 20:53:14'!
* unNumeroDePeano
	^unNumeroDePeano! !
!II class methodsFor: 'nil' stamp: 'g 8/26/2019 20:56:36'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:43'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

III * II!

DenotativeObject subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIII class' category: #'Numeros De Peano'!
IIIII class
	instanceVariableNames: 'next previous'!
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
previous
	^previous! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIII class' category: #'Numeros De Peano'!
IIIIII class
	instanceVariableNames: 'next previous'!
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
previous
	^previous! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:56:50'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

III * III !

DenotativeObject subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIII class' category: #'Numeros De Peano'!
IIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
previous
	^previous! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIII class' category: #'Numeros De Peano'!
IIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
previous
	^previous! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
previous
	^previous! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:03'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIIII * IIII!

DenotativeObject subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous
	^previous! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous
	^previous! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous
	^previous! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous
	^previous! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous
	^previous! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous
	^previous! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous
	^previous! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:17'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
previous
	^previous! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIIIIIIIIIIIIIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIII class' category: #'Numeros De Peano'!
IIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: 'next previous'!
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
- unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
previous
	^previous! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIIIIIIIIIIIIIIIII class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 20:57:18'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

IIIII * I !

II removeAllNext !

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIIII!

Smalltalk removeClassNamed: #IIIIIIII!

Smalltalk removeClassNamed: #IIIIIII!

Smalltalk removeClassNamed: #IIIIII!

Smalltalk removeClassNamed: #IIIII!

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

----SNAPSHOT----(26 August 2019 21:01:34) clase1.image priorSource: 12684098!

----STARTUP---- (26 August 2019 21:03:59) as /home/gzeitoune/Documents/UBA/ingSoft1/ing-soft-1/linux64/clase1.image!


ObjectBuilder create: #Booleano
	collaboratorNames: ''
	in: 'Verdadero y False'
	!

!classDefinition: #Booleano category: #'Verdadero y False'!
DenotativeObject subclass: #Booleano
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Verdadero y False'!

!classDefinition: 'Booleano class' category: #'Verdadero y False'!
Booleano class
	instanceVariableNames: ''!

ObjectBuilder create: #anObject
	collaboratorNames: ''
	in: 'Verdadero y Falso'
	!

!classDefinition: #anObject category: #'Verdadero y Falso'!
DenotativeObject subclass: #anObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Verdadero y Falso'!

!classDefinition: 'anObject class' category: #'Verdadero y Falso'!
anObject class
	instanceVariableNames: ''!

Smalltalk removeClassNamed: #Verdadero!
!Verdadero class methodsFor: 'nil' stamp: 'g 8/26/2019 21:06:17'!
& unBooleano
 ^ unBooleano! !

!classDefinition: #Falso category: #'Verdadero y Falso'!
DenotativeObject subclass: #Falso
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Verdadero y Falso'!
!Verdadero class methodsFor: 'nil' stamp: 'g 8/26/2019 21:07:03'!
no
^Falso! !
!Verdadero class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:07:27'!
y: unBooleano
 ^ unBooleano! !

Verdadero class removeSelector: #&!
!Verdadero class methodsFor: 'nil' stamp: 'g 8/26/2019 21:07:54'!
o: unBooleano
	^self! !
!Falso class methodsFor: 'nil' stamp: 'g 8/26/2019 21:08:07'!
no
	^Verdadero ! !
!Falso class methodsFor: 'nil' stamp: 'g 8/26/2019 21:08:22'!
y: unBooleano
 ^self! !
!Falso class methodsFor: 'nil' stamp: 'g 8/26/2019 21:08:40'!
o: unBooleano
	^unBooleano ! !
!Verdadero class methodsFor: 'nil' stamp: 'g 8/26/2019 21:09:39'!
siVerdadero: aClosure
	^aClosure value! !

ObjectBuilder create: #BooleanosTests
	collaboratorNames: ''
	in: 'Verdadero y Falso'
	!

!classDefinition: #BooleanosTests category: #'Verdadero y Falso'!
DenotativeObject subclass: #BooleanosTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Verdadero y Falso'!

!classDefinition: 'BooleanosTests class' category: #'Verdadero y Falso'!
BooleanosTests class
	instanceVariableNames: ''!
!BooleanosTests class methodsFor: 'nil' stamp: 'g 8/26/2019 21:10:34'!
test01NoVerdaderoEsFalso
	self assert: Verdadero no = Falso! !
!BooleanosTests class methodsFor: 'nil' stamp: 'g 8/26/2019 21:12:03'!
test02NoFalsoEsVerdadero
	self assert: Falso no = Verdadero ! !
!BooleanosTests class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:13:06'!
test03FalsoYUnBooleanoEsFalso
	self assert: (Falso y: Falso) = Falso! !
!BooleanosTests class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:13:18' prior: 50729979!
test03FalsoYUnBooleanoEsFalso
	self assert: (Falso y: Falso) = Falso.
	self assert: (Falso y: Verdadero ) = Falso! !
!BooleanosTests class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:13:46'!
test04VerdaderoYFalsoEsFalso
	self assert: (Verdadero y: Falso) = Falso.! !
!BooleanosTests class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:14:14'!
test05VerdaderoYVerdaderoEsVerdadero
	self assert: (Verdadero y: Verdadero) = Verdadero.! !
!BooleanosTests class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:15:51'!
test06FalsoSiFalsoEvaluaElClosure
	self assert: (Falso siFalso: [2 + 3] = 5)! !
!BooleanosTests class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:16:15' prior: 50730004!
test06FalsoSiFalsoEvaluaElClosure
	self assert: (Falso siFalso: [2 + 3]) = 5! !
!BooleanosTests class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:16:49' prior: 50730010!
test06FalsoSiFalsoEvaluaElClosure
	self assert: (Falso siFalso: [^'hola'] = 'hola')! !
!BooleanosTests class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:16:55' prior: 50730016!
test06FalsoSiFalsoEvaluaElClosure
	self assert: (Falso siFalso: [^'hola']) = 'hola'! !
!Falso class methodsFor: 'nil' stamp: 'g 8/26/2019 21:17:22'!
siFalso: unClosure
	^unClosure value! !
!Falso class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:18:27'!
siVerdadero: unClosure
	! !
!Verdadero class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:19:01'!
siFalso: aClosure
! !
!BooleanosTests class methodsFor: 'as yet unclassified' stamp: 'g 8/26/2019 21:21:09' prior: 50730022!
test06FalsoSiFalsoEvaluaElClosure
	|closureNoEvaluado|
	closureNoEvaluado  _ true.
	Falso siFalso: [closureNoEvaluado  _ false].
	self assert: closureNoEvaluado not.
	
	self assert: (Falso siFalso: [^'hola']) = 'hola'
	! !

----SNAPSHOT----(26 August 2019 21:21:45) clase1.image priorSource: 12743605!

----SNAPSHOT----(26 August 2019 21:22:01) clase1.image priorSource: 12748734!

----QUIT----(26 August 2019 21:22:12) clase1.image priorSource: 12748813!

----STARTUP---- (31 August 2019 15:12:36) as /home/chiara/Documents/UBA/ing-soft-1/linux64/clase1.image!

!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:15:12'!
restaReversa: unNumeroDePeano
	^unNumeroDePeano previous
 	! !
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:15:21' prior: 50730059!
restaReversa: unNumeroDePeano
	^unNumeroDePeano previous
! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:18:14'!
restaReversa: unNumeroDePeano
	unNumeroDePeano restaReversa: self! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:24:18' prior: 50730069!
restaReversa: unNumeroDePeano
	
	"self restaReversa:  unNumeroDePeano previous "! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:24:44' prior: 50728730!
- unNumeroDePeano
	unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:25:31' prior: 50730074!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:25:45' prior: 50730088!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:25:57' prior: 50730080!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !

II - I!

II - II!

II - II!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:26:22'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

III - I!

III - II!

III - III!

IIII - II!

IIII - III!

IIII - I!

I - II!

II - II!

II - II !

III - III !

I restaReversa: I!

I restaReversa: I!

I restaReversa: II!

I restaReversa: III!

II restaReversa: I!

II restaReversa: II!
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:23' prior: 50730100!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self previous.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:37'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:37'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:37'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self previous.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self previous.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:32:38'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

IIII - II!

IIII - IIII!

IIII - IIII!

IIII - IIII!
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:33:03' prior: 50730238!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !

IIII - IIII!

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:33:54' prior: 50730374!
- unNumeroDePeano
	^unNumeroDePeano previous restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
- unNumeroDePeano
	^unNumeroDePeano previous restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
- unNumeroDePeano
	^unNumeroDePeano previous restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:24'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

II -I!

III - II!
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:34:52' prior: 50730385!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II-II!

II restaReversa: II !

I restaReversa: II  !

I  + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:36:23'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:36:23'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:36:23'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:36:23'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:36:23'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:36:23'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:36:23'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:36:23'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

III restaReversa: II!

III-II !

II - III!

I - III!

I + III!

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:37:38'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:37:38'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:37:38'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:37:38'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:37:38'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:37:38'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:37:38'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:37:38'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

II-IIII!

III-IIII!

IIII-II!

IIII-I!

IIII-III!
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:40:05' prior: 50730094!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:45:21'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !

II / I!
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:47:48'!
/ unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I] ifFalse: []
	^unNumeroDePeano! !
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:35' prior: 50730671!
/ unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I] ifFalse: [self Error]! !

II / I!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:47'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:48'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:48'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:48'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:48'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:48'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:48'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:48:48'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

II / II!

III / II!

IIII / II!
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:50:05' prior: 50728842!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:51:02' prior: 50730818!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ self + (self * unNumeroDePeano previous)! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:51:43' prior: 50730825!
* unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^self].
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:51:55' prior: 50730832!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:16'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

III * II!

DenotativeObject subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIII class' category: #'Numeros De Peano'!
IIIII class
	instanceVariableNames: 'next previous'!
!IIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
previous
	^previous! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

DenotativeObject subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIIIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIIIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIIIII class' category: #'Numeros De Peano'!
IIIIII class
	instanceVariableNames: 'next previous'!
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
previous
	^previous! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIIIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:52:22'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

II * III !

I * III   !

II * I!

II removeAllNext !

Smalltalk removeClassNamed: #IIIIII!

Smalltalk removeClassNamed: #IIIII!

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

----SNAPSHOT----(31 August 2019 15:53:25) clase1.image priorSource: 12748892!

----QUIT----(31 August 2019 15:53:30) clase1.image priorSource: 12783002!

----STARTUP---- (31 August 2019 15:55:28) as /home/chiara/Documents/UBA/ing-soft-1/linux64/clase1.image!


----End fileIn of /home/chiara/Documents/UBA/ing-soft-1/linux64/PeanoTest.st----!

----End fileIn of /home/chiara/Documents/UBA/ing-soft-1/linux64/PeanoTest.st----!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 15:57:16'!
restaReversa: unNumeroDePeano
	
	^ unNumeroDePeano previous restaReversa: self.! !
!I class methodsFor: 'nil' stamp: 'f 8/31/2019 16:00:59'!
descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
	^'No se puede dividir por un numero mayor'! !
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 16:01:12' prior: 50730677!
/ unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I] ifFalse: [self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ]! !

III / IIII!
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 16:02:27' prior: 50731469!
/ unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I] ifFalse: [self Error ]! !

III / IIII!

III / IIII!
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 16:03:35' prior: 50731477!
/ unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I] ifFalse: [self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ]! !
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 16:03:38' prior: 50731484!
/ unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I] ifFalse: [self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ].! !

----SNAPSHOT----(31 August 2019 16:03:43) clase1.image priorSource: 12783081!

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

----SNAPSHOT----(31 August 2019 16:04:11) clase1.image priorSource: 12795145!

----QUIT----(31 August 2019 16:04:26) clase1.image priorSource: 12795315!

----STARTUP---- (31 August 2019 17:32:19) as /home/chiara/Documents/UBA/ing-soft-1/linux64/clase1.image!


----End fileIn of /home/chiara/Documents/UBA/ing-soft-1/linux64/Ejercicio 00-ToTheMoon/ToTheMoon.st----!

----STARTUP---- (31 August 2019 17:35:05) as /home/chiara/Documents/UBA/ing-soft-1/linux64/clase1.image!

!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:45:38' prior: 50730656!
restaReversa: unNumeroDePeano
	
"	^ unNumeroDePeano previous restaReversa: self."
	^ self previous restaReversa: unNumeroDePeano previous! !
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:45:55' prior: 50730064!
restaReversa: unNumeroDePeano
	^unNumeroDePeano
! !

II-I!
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:01' prior: 50731521!
restaReversa: unNumeroDePeano
	^unNumeroDePeano previous
! !
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:04' prior: 50731526!
restaReversa: unNumeroDePeano
	^unNumeroDePeano previous.
! !

II+II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
restaReversa: unNumeroDePeano
	
"	^ unNumeroDePeano previous restaReversa: self."
	^ self previous restaReversa: unNumeroDePeano previous! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.
	
	"unNumeroDePeano = I ifTrue: [^self previous].
	^ self previous - unNumeroDePeano previous"! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:47:23'!
restaReversa: unNumeroDePeano
	
"	^ unNumeroDePeano previous restaReversa: self."
	^ self previous restaReversa: unNumeroDePeano previous! !

III-II!

III-III!

III-IIII!

III-I!

III-II  !

III-II   I !

IIII-II !

IIII/II  !

IIII/III!

II * II!
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:49:43' prior: 50731513!
restaReversa: unNumeroDePeano
	^ self previous restaReversa: unNumeroDePeano previous! !
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:49:52' prior: 50730517!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
restaReversa: unNumeroDePeano
	^ self previous restaReversa: unNumeroDePeano previous! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:50:15'!
restaReversa: unNumeroDePeano
	^ self previous restaReversa: unNumeroDePeano previous! !

II * II!

II * II = IIII!

Smalltalk removeClassNamed: #PeanoTest!

----End fileIn of /home/chiara/Documents/UBA/ing-soft-1/linux64/PeanoTest.st----!
!II class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:55:42'!
descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
	^'No se puede dividir por un numero mayor'! !
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:58:57'!
descripcionDeErrorDeNumerosNegativosNoSoportados
	^'No se puede tener numeros negativos'! !
!I class methodsFor: 'nil' stamp: 'f 8/31/2019 17:59:43'!
- unNumeroDePeano
 ^self error: self descripcionDeErrorDeNumerosNegativosNoSoportados ! !
!I class methodsFor: 'as yet unclassified' stamp: 'f 8/31/2019 17:59:46' prior: 50731927!
- unNumeroDePeano
	^self error: self descripcionDeErrorDeNumerosNegativosNoSoportados ! !

----SNAPSHOT----(31 August 2019 18:00:24) clase1.image priorSource: 12795394!

----SNAPSHOT----(31 August 2019 18:00:27) clase1.image priorSource: 12809209!

----QUIT----(31 August 2019 18:00:32) clase1.image priorSource: 12809288!

----STARTUP---- (1 September 2019 19:14:22) as /home/gzeitoune/Documents/UBA/ingSoft1/ing-soft-1/linux64/clase1.image!

!PeanoTest class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:16:34' prior: 50731902!
test12DivisionNoSoportaDividirPorUnNumeroMayor

	Assert should: [ III /  IIII ] signal: Error withDescription: II descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor.
	
	"Assert should: [ I /  II] signal: Error withDescription: I descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor"
! !
!PeanoTest class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:16:52' prior: 50731950!
test12DivisionNoSoportaDividirPorUnNumeroMayor

	"Assert should: [ III /  IIII ] signal: Error withDescription: II descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor."
	
	Assert should: [ I /  II] signal: Error withDescription: I descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
! !
!PeanoTest class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:17:04' prior: 50731963!
test12DivisionNoSoportaDividirPorUnNumeroMayor

	Assert should: [ III /  IIII ] signal: Error withDescription: II descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor.
	
	Assert should: [ I /  II] signal: Error withDescription: I descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
! !
!I class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:28:13'!
> unNumeroDePeano
	^false! !
!II class methodsFor: 'nil' stamp: 'g 9/1/2019 19:29:29'!
> unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^true].
	^self previous > unNumeroDePeano previous! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!
!II class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:22' prior: 50730664!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	unNumeroDePeano > self ifTrue: [self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ]
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	unNumeroDePeano > self ifTrue: [self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ]
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
> unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^true].
	^self previous > unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
	^'No se puede dividir por un numero mayor'! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
restaReversa: unNumeroDePeano
	^ self previous restaReversa: unNumeroDePeano previous! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	unNumeroDePeano > self ifTrue: [self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ]
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
> unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^true].
	^self previous > unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
	^'No se puede dividir por un numero mayor'! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:30:27'!
restaReversa: unNumeroDePeano
	^ self previous restaReversa: unNumeroDePeano previous! !

I > II!

II > I!

IIII > II!

IIII > IIII!

IIII > II!

IIII > III!

III > I!

III > II!

III / IIII!
!II class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:31:25' prior: 50732000!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	unNumeroDePeano > self ifTrue: [^self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ]
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!I class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:31:49' prior: 50731492!
/ unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^I] ifFalse: [^self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ].! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	unNumeroDePeano > self ifTrue: [^self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ]
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
> unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^true].
	^self previous > unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
	^'No se puede dividir por un numero mayor'! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
restaReversa: unNumeroDePeano
	^ self previous restaReversa: unNumeroDePeano previous! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	unNumeroDePeano > self ifTrue: [^self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ]
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
> unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^true].
	^self previous > unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
	^'No se puede dividir por un numero mayor'! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:04'!
restaReversa: unNumeroDePeano
	^ self previous restaReversa: unNumeroDePeano previous! !

III / IIII!
!II class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:32' prior: 50732171!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	unNumeroDePeano > self ifTrue: [^self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !

II removeAllNext !

Smalltalk removeClassNamed: #IIII!

Smalltalk removeClassNamed: #III!

II + II!

DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

III class
	instanceVariableNames: 'next previous'!

!classDefinition: 'III class' category: #'Numeros De Peano'!
III class
	instanceVariableNames: 'next previous'!
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	unNumeroDePeano > self ifTrue: [^self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
> unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^true].
	^self previous > unNumeroDePeano previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
	^'No se puede dividir por un numero mayor'! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
previous
	^previous! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!III class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:40'!
restaReversa: unNumeroDePeano
	^ self previous restaReversa: unNumeroDePeano previous! !

DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

IIII class
	instanceVariableNames: 'next previous'!

!classDefinition: 'IIII class' category: #'Numeros De Peano'!
IIII class
	instanceVariableNames: 'next previous'!
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
* unNumeroDePeano
	^ unNumeroDePeano + (self previous * unNumeroDePeano)! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
+ unNumeroDePeano
	^self previous + unNumeroDePeano next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
- unNumeroDePeano
	^unNumeroDePeano restaReversa: self.! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
/ unNumeroDePeano
	unNumeroDePeano = self ifTrue: [^I].
	unNumeroDePeano > self ifTrue: [^self error: self descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor ].
	^ I + (self - unNumeroDePeano / unNumeroDePeano ).! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
> unNumeroDePeano
	unNumeroDePeano = I ifTrue: [^true].
	^self previous > unNumeroDePeano previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
descripcionDeErrorDeNoSePuedeDividirPorUnNumeroMayor
	^'No se puede dividir por un numero mayor'! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
next
	next ifNil:[
		next _ self cloneNamed: self name , 'I'.
		next previous: self.
	].
	^next! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
previous
	^previous! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
previous: unNumeroDePeano
	previous _ unNumeroDePeano! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
removeAllNext

	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !
!IIII class methodsFor: 'as yet unclassified' stamp: 'g 9/1/2019 19:32:41'!
restaReversa: unNumeroDePeano
	^ self previous restaReversa: unNumeroDePeano previous! !

III / IIII!

Smalltalk removeClassNamed: #PeanoTest!

----End fileIn of /home/gzeitoune/Documents/UBA/ingSoft1/ing-soft-1/linux64/PeanoTest.st----!

----SNAPSHOT----(1 September 2019 19:34:22) clase1.image priorSource: 12809367!

----SNAPSHOT----(1 September 2019 19:34:44) clase1.image priorSource: 12831101!

----QUIT----(1 September 2019 19:34:48) clase1.image priorSource: 12831182!

----STARTUP---- (2 September 2019 16:22:42) as /home/gzeitoune/Documents/UBA/ingSoft1/ing-soft-1/linux64/clase1.image!


	self subclassResponsibility!

	self subclassResponsibility!

	self subclassResponsibility!

----QUIT----(2 September 2019 16:33:07) clase1.image priorSource: 12831263!

----STARTUP---- (12 September 2019 20:25:21) as /home/chiara/Documents/UBA/ing-soft-1/linux64/clase1.image!


----End fileIn of /home/chiara/Documents/UBA/ing-soft-1/19-Numeros/Pre-Numero-Ejercicio.st----!

----End fileIn of /home/chiara/Documents/UBA/ing-soft-1/19-Numeros/Pre-Numero-Ejercicio Solu.st----!

----End fileIn of /home/chiara/Documents/UBA/ing-soft-1/19-Numeros/Numero-Ejercicio.st----!
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 20:36:56' prior: 50733749!
+ anAdder 
	anAdder type = Entero 
	^self class with: value + anAdder integerValue
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 20:38:57' prior: 50733980!
+ anAdder 
	anAdder type = #Entero ifTrue: [
	^self class with: value + anAdder integerValue
	].
	^Fraccion with: value + anAdder integerValue
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 20:40:33' prior: 50733986!
+ anAdder 
	anAdder type = #Entero ifTrue: [
	^self class with: value + anAdder integerValue
	].
	^Fraccion initializeWith: (value * anAdder denominator +  anAdder  numerator ) over: anAdder denominator 
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 20:42:09' prior: 50733994!
+ anAdder 
	anAdder isKindOf: self class ifTrue: [
	^self class with: value + anAdder integerValue
	].
	^Fraccion initializeWith: (value * anAdder denominator +  anAdder  numerator ) over: anAdder denominator 
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 20:42:37' prior: 50734004!
+ anAdder 
	(anAdder isKindOf: self class) ifTrue: [
	^self class with: value + anAdder integerValue
	].
	^Fraccion initializeWith: (value * anAdder denominator +  anAdder  numerator ) over: anAdder denominator 
! !

----STARTUP---- (12 September 2019 20:44:50) as /home/chiara/Documents/UBA/ing-soft-1/linux64/clase1.image!


----End fileIn of /home/chiara/Documents/UBA/ing-soft-1/19-Numeros/Numero-Ejercicio.st----!

----SNAPSHOT----(12 September 2019 20:45:58) clase1.image priorSource: 12831554!
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 20:46:41' prior: 50733021!
+ anAdder 
	(anAdder isKindOf: self class) ifTrue: [
	^self class with: value + anAdder integerValue
	].
	^Fraccion initializeWith: (value * anAdder denominator +  anAdder  numerator ) over: anAdder denominator 
! !

----SNAPSHOT----(12 September 2019 20:47:54) clase1.image priorSource: 12850862!
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 20:52:38' prior: 50733243!
+ anAdder 
	(anAdder isKindOf: self class) ifTrue: [
	^self class with: value + anAdder integerValue
	].
	^Fraccion initializeWith: (self value * anAdder denominator +  anAdder  numerator ) over: anAdder denominator 
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 20:52:55' prior: 50733256!
+ anAdder 
	(anAdder isKindOf: self class) ifTrue: [
	^self class with: value + anAdder integerValue
	].
	^Fraccion initializeWith: (self class with: value * anAdder denominator +  anAdder  numerator ) over: anAdder denominator 
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 20:53:35' prior: 50733266!
+ anAdder 
	(anAdder isKindOf: self class) ifTrue: [
	^self class with: value + anAdder integerValue
	].
	^Fraccion initializeWith: (self class with: value * (self class with: anAdder denominator) +  anAdder  numerator ) over: anAdder denominator 
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 20:55:28' prior: 50733277!
+ anAdder 
	|numerador denominador|
	(anAdder isKindOf: self class) ifTrue: [
	^self class with: value + anAdder integerValue
	].
	numerador _ 1.
	denominador _ anAdder denominator
	^Fraccion initializeWith: (self class with: value * (self class with: anAdder denominator) +  anAdder  numerator ) over: anAdder denominator 
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 20:56:12' prior: 50733288!
+ anAdder 
	|numerador denominador|
	(anAdder isKindOf: self class) ifTrue: [
	^self class with: value + anAdder integerValue
	].
	numerador _  (self class with: value * (self class with: anAdder denominator) +  anAdder  numerator ) .
	denominador _ anAdder denominator.
	^Fraccion initializeWith: numerador over: denominador 
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 20:57:13' prior: 50733302!
+ anAdder 
	|numerador denominador|
	(anAdder isKindOf: self class) ifTrue: [
	^self class with: value + anAdder integerValue
	].

	numerador _  (self value * anAdder denominator +  anAdder  numerator ) .
	denominador _ anAdder denominator.
	^Fraccion initializeWith: numerador over: denominador 
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 20:57:58' prior: 50733316!
+ anAdder 
	|numerador denominador|
	(anAdder isKindOf: self class) ifTrue: [
	^self class with: value + anAdder integerValue
	].

	numerador _  self value * anAdder denominator +  anAdder  numerator .
	denominador _ anAdder denominator.
	^Fraccion initializeWith: numerador over: denominador 
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 21:07:01' prior: 50733329!
+ anAdder 
	|numerador denominador|
	(anAdder isKindOf: self class) ifTrue: [
	^self class with: value + anAdder integerValue
	].

	numerador _  self value * anAdder denominator +  anAdder  numerator .
	denominador _ anAdder denominator.
	^ Fraccion 
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 21:08:02' prior: 50733342!
+ anAdder 
	|numerador denominador|
	(anAdder isKindOf: self class) ifTrue: [
	^self class with: value + anAdder integerValue
	].

	numerador _  self value * anAdder denominator +  anAdder  numerator .
	denominador _ anAdder denominator.
	
	^ Fraccion 
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 21:09:14' prior: 50733353!
+ anAdder 
	|numerador denominador|
	(anAdder isKindOf: self class) ifTrue: [
	^self class with: value + anAdder integerValue
	].

	numerador _  self value * anAdder denominator +  anAdder  numerator .
	denominador _ anAdder denominator.
	
	^ self class with: numerador  / self class with: denominador .
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 21:10:02' prior: 50733364!
+ anAdder 
	|numerador denominador|
	(anAdder isKindOf: self class) ifTrue: [
	^self class with: value + anAdder integerValue
	].

	numerador _  self value * anAdder denominator +  anAdder  numerator .
	denominador _ anAdder denominator.
	
	^ (self class with: numerador) / (self class with: denominador).
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 21:11:18' prior: 50733377!
+ anAdder 
	|numerador denominador|
	(anAdder isKindOf: self class) ifTrue: [
	^self class with: value + anAdder integerValue
	].

	numerador _  self value * anAdder denominator +  anAdder  numerator .
	denominador _ anAdder denominator.
	
	^ numerador / denominador.
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 21:13:30' prior: 50733134!
+ anAdder 
	
	| newNumerator newDenominator |
	
	(anAdder isKindOf: self class) ifTrue: [
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	] ifFalse: [
		newNumerator _  anAdder value * self denominator +  self  numerator .
		newDenominator _ self denominator.
	].
	
	^newNumerator / newDenominator 
	
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 21:15:21' prior: 50733016!
* aMultiplier 
	
	(self class isKindOf: aMultiplier) ifTrue: [
		^self class with: value * aMultiplier integerValue
	].
	
	
	
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 21:16:56' prior: 50733418!
* aMultiplier 
	|newNumerator newDenominator|
	(self class isKindOf: aMultiplier) ifTrue: [
		^self class with: value * aMultiplier integerValue
	].
	
	newNumerator _  self value * aMultiplier numerator .
	newDenominator _ aMultiplier denominator.
	
	^ newNumerator / newDenominator .
	
	
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 21:17:40' prior: 50733425!
* aMultiplier 
	|newNumerator newDenominator|
	(aMultiplier isKindOf: self class) ifTrue: [
		^self class with: value * aMultiplier integerValue
	].
	
	newNumerator _  self value * aMultiplier numerator .
	newDenominator _ aMultiplier denominator.
	
	^ newNumerator / newDenominator .
	
	
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 21:18:50' prior: 50733128!
* aMultiplier 
	|newNumerator newDenominator|
	
	(aMultiplier isKindOf: self class) ifTrue: [
		^(numerator * aMultiplier numerator) / (denominator * aMultiplier denominator)		
	].
	
	newNumerator _  self value * aMultiplier numerator .
	newDenominator _ aMultiplier denominator.
	
	^ newNumerator / newDenominator .
	
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 21:19:24' prior: 50733451!
* aMultiplier 
	|newNumerator newDenominator|
	
	(aMultiplier isKindOf: self class) ifTrue: [
		^(numerator * aMultiplier numerator) / (denominator * aMultiplier denominator)		
	].
	
	newNumerator _  self numerator * aMultiplier value .
	newDenominator _ self denominator.
	
	^ newNumerator / newDenominator .
	
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 21:21:32' prior: 50733031!
/ aDivisor 
		
	|newNumerator newDenominator|
	
	(aDivisor isKindOf: self class) ifTrue: [
		^Fraccion with: self over: aDivisor
	].
	
	newNumerator _  self value * aDivisor denominator .
	newDenominator _ aDivisor numerator .
	
	^ newNumerator / newDenominator .
	
	
	
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 21:22:38' prior: 50733155!
/ aDivisor 
	|newNumerator newDenominator|
	
	(aDivisor isKindOf: self class) ifTrue: [
		
	^(numerator * aDivisor denominator) / (denominator * aDivisor numerator)
	].
	
	newNumerator _  self value * aDivisor denominator .
	newDenominator _ aDivisor numerator .
	
	^ newNumerator / newDenominator .
	
	
	
	
		
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 21:39:21' prior: 50733490!
/ aDivisor 
	|newNumerator newDenominator|
	
	(aDivisor isKindOf: self class) ifTrue: [
		^(numerator * aDivisor denominator) / (denominator * aDivisor numerator)
	].
	
	newNumerator _  self numerator .
	newDenominator _ aDivisor denominator * aDivisor value .
	
	^ newNumerator / newDenominator .
	
	
	
	
		
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/12/2019 21:39:51' prior: 50733503!
/ aDivisor 
	|newNumerator newDenominator|
	
	(aDivisor isKindOf: self class) ifTrue: [
		^(numerator * aDivisor denominator) / (denominator * aDivisor numerator)
	].
	
	newNumerator _  self numerator .
	newDenominator _ self denominator * aDivisor value .
	
	^ newNumerator / newDenominator .
	
	
	
	
		
	! !

----SNAPSHOT----(12 September 2019 21:40:01) clase1.image priorSource: 12851255!

----SNAPSHOT----(12 September 2019 21:40:07) clase1.image priorSource: 12860085!

----QUIT----(12 September 2019 21:40:09) clase1.image priorSource: 12860167!

<<<<<<< HEAD
----STARTUP---- (16 September 2019 19:09:57) as /home/chiara/Documents/UBA/ing-soft-1/linux64/clase1.image!


----End fileIn of /home/chiara/Documents/UBA/ing-soft-1/20-Stack/Stack-Exercise.st----!

Object subclass: #OOStack
	instanceVariableNames: 'pila'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

!classDefinition: #OOStack category: #'Stack-Exercise'!
Object subclass: #OOStack
	instanceVariableNames: 'pila'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

Object subclass: #OOStack
	instanceVariableNames: ''
	classVariableNames: 'pila'
	poolDictionaries: ''
	category: 'Stack-Exercise'!

Object subclass: #OOStack
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

!classDefinition: #OOStack category: #'Stack-Exercise'!
Object subclass: #OOStack
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

Object subclass: #NameOfSubclass
	instanceVariableNames: 'pila'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

!classDefinition: #NameOfSubclass category: #'Stack-Exercise'!
Object subclass: #NameOfSubclass
	instanceVariableNames: 'pila'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

Smalltalk removeClassNamed: #NameOfSubclass!

Object subclass: #OOStack
	instanceVariableNames: 'pila'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

!classDefinition: #OOStack category: #'Stack-Exercise'!
Object subclass: #OOStack
	instanceVariableNames: 'pila'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!
!OOStack methodsFor: 'nil' stamp: 'gc 9/16/2019 19:17:54'!
isEmpty
	^pila size = 0! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 19:19:53' prior: 50733740!
isEmpty
	^pila = {}! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 19:21:35' prior: 50733744!
isEmpty
	^pila = #()! !
!OOStack methodsFor: 'nil' stamp: 'gc 9/16/2019 19:25:27'!
initialize
	pila _  OrderedCollection new.! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 19:25:41' prior: 50733748!
isEmpty
	^pila = OrderedCollection new! !

Object subclass: #OOStack
	instanceVariableNames: 'stack'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

!classDefinition: #OOStack category: #'Stack-Exercise'!
Object subclass: #OOStack
	instanceVariableNames: 'stack'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 19:26:49' prior: 50733751!
initialize
	stack _  OrderedCollection new.! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 19:26:56' prior: 50733756!
isEmpty
	^stack = OrderedCollection new! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 19:27:11'!
push: anObject
	^stack = OrderedCollection new! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 19:27:35' prior: 50733780!
push: anObject
	^stack add: anObject! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 19:28:56'!
pop
	^stack removeLast ! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 19:33:26'!
top
	^stack last ! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 19:34:11' prior: 50733789!
pop
	^stack removeLast ! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 19:34:22'!
size
	^stack size! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 19:36:02' prior: 50733797!
pop
	self isEmpty ifTrue: [^self error: Error ].
	^stack removeLast ! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 19:36:45' prior: 50733805!
pop
	self isEmpty ifTrue: [^self error: self stackEmptyErrorDescription ].
	^stack removeLast ! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 19:44:39' prior: 50733811!
pop
	self isEmpty ifTrue: [^self error: self class stackEmptyErrorDescription ].
	^stack removeLast ! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 19:46:01' prior: 50733793!
top
	self isEmpty ifTrue: [^self error: self class stackEmptyErrorDescription ].
	^stack last ! !

Object subclass: #Stack
	instanceVariableNames: 'stack'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

!classDefinition: #Stack category: #'Stack-Exercise'!
Object subclass: #Stack
	instanceVariableNames: 'stack'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

Stack subclass: #Empty
	instanceVariableNames: 'stack'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

Stack subclass: #Empty
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

!classDefinition: #Empty category: #'Stack-Exercise'!
Stack subclass: #Empty
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

Stack subclass: #NotEmpty
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

!classDefinition: #NotEmpty category: #'Stack-Exercise'!
Stack subclass: #NotEmpty
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

Smalltalk removeClassNamed: #Empty!

Smalltalk removeClassNamed: #NotEmpty!

Smalltalk removeClassNamed: #Stack!

Object subclass: #Stack
	instanceVariableNames: 'stack'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

!classDefinition: #Stack category: #'Stack-Exercise'!
Object subclass: #Stack
	instanceVariableNames: 'stack'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

Stack class
	instanceVariableNames: ''!

!classDefinition: 'Stack class' category: #'Stack-Exercise'!
Stack class
	instanceVariableNames: ''!
!Stack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:07:54'!
initialize
	stack _  OrderedCollection new.! !
!Stack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:07:54'!
isEmpty
	^stack = OrderedCollection new! !
!Stack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:07:54'!
pop
	self isEmpty ifTrue: [^self error: self class stackEmptyErrorDescription ].
	^stack removeLast ! !
!Stack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:07:54'!
push: anObject
	^stack add: anObject! !
!Stack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:07:54'!
size
	^stack size! !
!Stack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:07:54'!
top
	self isEmpty ifTrue: [^self error: self class stackEmptyErrorDescription ].
	^stack last ! !
!Stack class methodsFor: 'error descriptions' stamp: 'gc 9/16/2019 20:07:54'!
stackEmptyErrorDescription
	
	^ 'Stack is empty'! !

Stack subclass: #Empty
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

!classDefinition: #Empty category: #'Stack-Exercise'!
Stack subclass: #Empty
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

Stack subclass: #NotEmpty
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!

!classDefinition: #NotEmpty category: #'Stack-Exercise'!
Stack subclass: #NotEmpty
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Exercise'!
!Empty methodsFor: 'nil' stamp: 'gc 9/16/2019 20:08:51'!
initialize
	stack _  OrderedCollection new.! !
!Empty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:09:17' prior: 50733931!
initialize
	^ OrderedCollection new.! !
!Stack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:09:33' prior: 50733881!
initialize
	stack _  Empty new.! !
!Stack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:09:51' prior: 50733885!
isEmpty
	^self subclassResponsibility ! !
!Empty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:10:05'!
isEmpty
	^true! !
!NotEmpty methodsFor: 'nil' stamp: 'gc 9/16/2019 20:10:17'!
isEmpty
	^false! !
!Stack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:10:39' prior: 50733889!
pop
	^self subclassResponsibility ! !
!Empty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:10:56'!
pop
	^self error: self class stackEmptyErrorDescription! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:11:09'!
pop
	^stack removeLast ! !
!Empty methodsFor: 'nil' stamp: 'gc 9/16/2019 20:28:53'!
push: anObject
	 NotEmpty new: (Array with: self with: anObject )! !
!NotEmpty methodsFor: 'nil' stamp: 'gc 9/16/2019 20:29:25'!
initializeWith: anObject
	stack _ anObject ! !
!Empty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:29:37' prior: 50733968!
push: anObject
	^ NotEmpty new: (Array with: self with: anObject )! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:30:45'!
push: anObject
	stack push: (Array with: self with: anObject)! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:30:59' prior: 50733983!
push: anObject
	stack add: (Array with: self with: anObject)! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:32:11' prior: 50733965!
pop
	| theTop |
	theTop  _ stack top.
	stack _ theTop atFront .! !
!Stack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:32:46' prior: 50733895!
push: anObject
	^self subclassResponsibility ! !
!Empty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:33:18'!
top
	^self error: self class stackEmptyErrorDescription! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:35:04'!
top
	| theTop |
	theTop  _ stack top.
	stack _ theTop at: 2 .! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:35:10' prior: 50734007!
top
	| theTop |
	theTop  _ stack top.
	^theTop at: 2 .! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:35:37' prior: 50734012!
top
	| |
	^ stack top.! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:35:45' prior: 50734017!
top
	^ stack top.! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:35:59' prior: 50734021!
top
	^ stack last.! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:36:12' prior: 50733771!
initialize
	stack _  Stack new.! !
!Empty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:36:37' prior: 50733936!
initialize
	^stack _ OrderedCollection new.! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:37:12' prior: 50733993!
pop
	| theTop |
	theTop  _ stack last.
	stack _ theTop atFront .! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:37:31' prior: 50734025!
top
	| theTop |
	theTop  _ stack last.
	stack _ theTop at: 2 .! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:37:54' prior: 50733817!
pop
	^stack pop ! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:38:01' prior: 50733785!
push: anObject
	^stack push: anObject! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:38:19' prior: 50733824!
top
	^stack top ! !
!Stack methodsFor: 'nil' stamp: 'gc 9/16/2019 20:38:41' prior: 50733899!
size
	^stack size! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:39:11' prior: 50733776!
isEmpty
	^stack isEmpty ! !
!Stack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:39:35' prior: 50733945!
isEmpty
	self subclassResponsibility ! !
!Stack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:39:57' prior: 50734068!
isEmpty
	^self subclassResponsibility ! !
!Stack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:43:17' prior: 50733941!
initialize
	^stack _  Empty new.! !
!Empty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:44:29' prior: 50734033!
initialize
	stack _ OrderedCollection new.! !
!NotEmpty class methodsFor: 'nil' stamp: 'gc 9/16/2019 20:47:53'!
new: anObject
	^self initializeWith: anObject ! !
!NotEmpty class methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:49:36'!
with: anObject
	^self initializeWith: anObject ! !

NotEmpty class removeSelector: #new:!
!NotEmpty class methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:50:34'!
new: anObject
	^self initializeWith: anObject ! !
!NotEmpty class methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 20:51:08' prior: 50734091!
with: anObject
	^self new with:anObject ! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:01:11'!
initialize
	stack _ OrderedCollection new.! !

NotEmpty removeSelector: #initializeWith:!

NotEmpty class removeSelector: #new:!

NotEmpty class removeSelector: #with:!
!Empty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:02:22' prior: 50733978!
push: anObject
	| list |
	list _ NotEmpty new.
	list add: (Array with: self with: anObject )
	! !
!Empty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:02:29' prior: 50734115!
push: anObject
	| list |
	list _ NotEmpty new.
	list add: (Array with: self with: anObject ).
	^list
	! !
!Empty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:03:12' prior: 50734121!
push: anObject
	| list |
	list _ NotEmpty new.
	list push: anObject.
	^list
	! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:04:14' prior: 50733988!
push: anObject
	^stack add: (Array with: self with: anObject)! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:06:51' prior: 50734052!
push: anObject
	^stack _ stack push: anObject! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:07:31' prior: 50734048!
pop
	^stack _ stack pop ! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:07:43' prior: 50734038!
pop
	| theTop |
	theTop  _ stack last.
	^stack _ theTop atFront .! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:08:43' prior: 50734148!
pop
	| theTop |
	theTop  _ stack last.
	^stack _ theTop at: 1 .! !
!Empty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:09:52' prior: 50734128!
push: anObject
	| list |
	list _ NotEmpty new.
	list addFirst: anObject with: self.
	^list
	! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:10:12'!
addFirst: anObject with: previous
	! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:10:27' prior: 50734165!
addFirst: anObject with: previous
	^stack add: (Array with: previous with: anObject)	! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:11:05' prior: 50734144!
pop
	stack _ stack pop.
	^stack top.! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:11:32' prior: 50734176!
pop
	^stack _ stack pop.! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:11:56' prior: 50734043!
top
	| theTop |
	theTop  _ stack last.
	^theTop at: 2 .! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:12:18' prior: 50734057!
top
	^stack top ! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:12:33' prior: 50734181!
pop
	stack _ stack pop.
	stack top! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:12:37' prior: 50734194!
pop
	stack _ stack pop.
	^stack top! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:13:24' prior: 50734199!
pop
	stack _ stack pop.! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:13:41' prior: 50734154!
pop
	| theTop |
	theTop  _ stack last.
	stack _ theTop at: 1 .
	^theTop at:2! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:13:43' prior: 50734208!
pop
	| theTop |
	theTop  _ stack last.
	stack _ theTop at: 1 .
	^theTop at: 2! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:14:39' prior: 50734204!
pop
	^stack _ stack pop.! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:15:39' prior: 50734214!
pop
	| theTop |
	theTop  _ stack last.
	^stack _ theTop at: 1 .! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:20:53' prior: 50734220!
pop
	^stack _ stack pop.! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:23:23' prior: 50734229!
pop
	stack _ stack pop.
	^stack top! !
!OOStack methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:23:57' prior: 50734233!
pop
	| theTop |
	theTop  _ stack top.
	stack _ stack pop.
	^theTop ! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:26:03' prior: 50734134!
push: anObject
	stack add: (Array with: self with: anObject).
	^stack ! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:26:55' prior: 50734244!
push: anObject
	stack add: (Array with: self with: anObject).
	^self ! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:31:59' prior: 50734224!
pop
	| theTop |
	theTop  _ stack last.
	stack _ theTop at: 1 .
	^stack! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:32:48' prior: 50734256!
pop
	| theTop |
	theTop  _ stack last.
	stack _ theTop at: 1 .
	^self! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:33:16' prior: 50734262!
pop
	| theTop |
	theTop  _ stack last.
	^stack _ theTop at: 1 .! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:35:27' prior: 50734250!
push: anObject
	stack add: (Array with: stack with: anObject).
	^self ! !
!NotEmpty methodsFor: 'as yet unclassified' stamp: 'gc 9/16/2019 21:36:48' prior: 50734273!
push: anObject
	stack add: (Array with: self with: anObject).
	^self ! !

----SNAPSHOT----(16 September 2019 21:49:41) clase1.image priorSource: 12860249!

----SNAPSHOT----(16 September 2019 21:51:44) clase1.image priorSource: 12884264!

----QUIT----(16 September 2019 21:51:51) clase1.image priorSource: 12884346!
=======
----STARTUP---- (14 September 2019 15:23:50) as /home/gzeitoune/Documents/UBA/ingSoft1/ing-soft-1/linux64/clase1.image!

!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:24:59' prior: 50733026!
- aSubtrahend 
	|numerador denominador|
	(aSubtrahend isKindOf: self class) ifTrue: [
	^self class with: value - aSubtrahend integerValue
	].

	^ self class with: value - aSubtrahend integerValue.! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:25:29' prior: 50733540!
- aSubtrahend 
	|numerador denominador|
	(aSubtrahend isKindOf: self class) ifTrue: [
	^self class with: value - aSubtrahend integerValue
	].
	
	numerador _  self value * aSubtrahend denominator -  aSubtrahend  numerator .
	denominador _ aSubtrahend denominator.
	
	^ numerador / denominador.! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:27:00' prior: 50733550!
- aSubtrahend 
	|numerador denominador|
	(aSubtrahend isKindOf: self class) ifTrue: [
		^self class with: value - aSubtrahend integerValue
	].
	
	numerador _  self value * aSubtrahend denominator -  aSubtrahend  numerator .
	denominador _ aSubtrahend denominator.
	
	^ numerador / denominador.! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:27:21' prior: 50733563!
- aSubtrahend 
	|numerador denominador|
	(aSubtrahend isKindOf: self class) ifTrue: [
		^self class with: value - aSubtrahend integerValue
	].
	
	"numerador _  self value * aSubtrahend denominator -  aSubtrahend  numerator .
	denominador _ aSubtrahend denominator.
	
	^ numerador / denominador."! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:27:53' prior: 50733576!
- aSubtrahend 
	|numerador denominador|
	(aSubtrahend isKindOf: self class) ifTrue: [
		^self class with: value - aSubtrahend integerValue
	].
	
	numerador _  self value * aSubtrahend denominator -  aSubtrahend  numerator .
	denominador _ aSubtrahend denominator.
	
	^ numerador / denominador.! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:28:33' prior: 50733390!
+ anAdder 
	|numerador denominador|
	(anAdder isKindOf: self class) ifTrue: [
		^self class with: value + anAdder integerValue
	].

	numerador _  self value * anAdder denominator +  anAdder  numerator .
	denominador _ anAdder denominator.
	
	^ numerador / denominador.
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:31:22' prior: 50733144!
- aSubtrahend 
	
	| newNumerator newDenominator |
	(aSubtrahend isKindOf: self class) ifTrue: [
		newNumerator := (numerator * aSubtrahend denominator) - (denominator * aSubtrahend numerator).
		newDenominator := denominator * aSubtrahend denominator.
	] ifFalse: [
		newNumerator _  aSubtrahend value * self denominator -  self  numerator .
		newDenominator _ self denominator.
	].
	
	^newNumerator / newDenominator 
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:32:22' prior: 50733614!
- aSubtrahend 
	
	| newNumerator newDenominator |
	(aSubtrahend isKindOf: self class) ifTrue: [
		newNumerator := (numerator * aSubtrahend denominator) - (denominator * aSubtrahend numerator).
		newDenominator := denominator * aSubtrahend denominator.
	] ifFalse: [
		newNumerator _ self  numerator -  aSubtrahend value * self denominator .
		newDenominator _ self denominator.
	].
	
	^newNumerator / newDenominator 
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:32:27' prior: 50733631!
- aSubtrahend 
	
	| newNumerator newDenominator |
	(aSubtrahend isKindOf: self class) ifTrue: [
		newNumerator := (numerator * aSubtrahend denominator) - (denominator * aSubtrahend numerator).
		newDenominator := denominator * aSubtrahend denominator.
	] ifFalse: [
		newNumerator _ self  numerator -  (aSubtrahend value * self denominator ).
		newDenominator _ self denominator.
	].
	
	^newNumerator / newDenominator 
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:42:44'!
multiplicacionEntero: aMultiplier 
	|newNumerator newDenominator|
	(aMultiplier isKindOf: self class) ifTrue: [
		^self class with: value * aMultiplier integerValue
	].
	
	newNumerator _  self value * aMultiplier numerator .
	newDenominator _ aMultiplier denominator.
	
	^ newNumerator / newDenominator .
	
	
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:43:07'!
multiplicacionFraccion: aMultiplier 
	|newNumerator newDenominator|
	(aMultiplier isKindOf: self class) ifTrue: [
		^self class with: value * aMultiplier integerValue
	].
	
	newNumerator _  self value * aMultiplier numerator .
	newDenominator _ aMultiplier denominator.
	
	^ newNumerator / newDenominator .
	
	
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:43:27' prior: 50733664!
multiplicacionEntero: aMultiplier 
	^self class with: value * aMultiplier integerValue
	
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:43:35' prior: 50733677!
multiplicacionFraccion: aMultiplier 
	|newNumerator newDenominator|

	newNumerator _  self value * aMultiplier numerator .
	newDenominator _ aMultiplier denominator.
	
	^ newNumerator / newDenominator .
	
	
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:44:03'!
sumaEntero: anAdder 
	|numerador denominador|
	(anAdder isKindOf: self class) ifTrue: [
		^self class with: value + anAdder integerValue
	].

	numerador _  self value * anAdder denominator +  anAdder  numerator .
	denominador _ anAdder denominator.
	
	^ numerador / denominador.
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:44:14'!
sumaFraccion: anAdder 
	|numerador denominador|
	(anAdder isKindOf: self class) ifTrue: [
		^self class with: value + anAdder integerValue
	].

	numerador _  self value * anAdder denominator +  anAdder  numerator .
	denominador _ anAdder denominator.
	
	^ numerador / denominador.
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:44:30' prior: 50733705!
sumaEntero: anAdder 
		^self class with: value + anAdder integerValue
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:44:35' prior: 50733729!
sumaEntero: anAdder 
	^self class with: value + anAdder integerValue
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:44:44' prior: 50733717!
sumaFraccion: anAdder 
	|numerador denominador|
	
	numerador _  self value * anAdder denominator +  anAdder  numerator .
	denominador _ anAdder denominator.
	
	^ numerador / denominador.
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:44:59'!
restaEntero: aSubtrahend 
	|numerador denominador|
	(aSubtrahend isKindOf: self class) ifTrue: [
		^self class with: value - aSubtrahend integerValue
	].
	
	numerador _  self value * aSubtrahend denominator -  aSubtrahend  numerator .
	denominador _ aSubtrahend denominator.
	
	^ numerador / denominador.! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:45:11'!
restaFraccion: aSubtrahend 
	|numerador denominador|
	(aSubtrahend isKindOf: self class) ifTrue: [
		^self class with: value - aSubtrahend integerValue
	].
	
	numerador _  self value * aSubtrahend denominator -  aSubtrahend  numerator .
	denominador _ aSubtrahend denominator.
	
	^ numerador / denominador.! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:45:38' prior: 50733750!
restaEntero: aSubtrahend 
	^self class with: value - aSubtrahend integerValue
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:45:46' prior: 50733762!
restaFraccion: aSubtrahend 
	|numerador denominador|
	
	numerador _  self value * aSubtrahend denominator -  aSubtrahend  numerator .
	denominador _ aSubtrahend denominator.
	
	^ numerador / denominador.! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:46:01'!
divisionFraccion: aDivisor 
		
	|newNumerator newDenominator|
	
	(aDivisor isKindOf: self class) ifTrue: [
		^Fraccion with: self over: aDivisor
	].
	
	newNumerator _  self value * aDivisor denominator .
	newDenominator _ aDivisor numerator .
	
	^ newNumerator / newDenominator .
	
	
	
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:46:10'!
divisionEntero: aDivisor 
		
	|newNumerator newDenominator|
	
	(aDivisor isKindOf: self class) ifTrue: [
		^Fraccion with: self over: aDivisor
	].
	
	newNumerator _  self value * aDivisor denominator .
	newDenominator _ aDivisor numerator .
	
	^ newNumerator / newDenominator .
	
	
	
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:46:25' prior: 50733802!
divisionEntero: aDivisor 
	^Fraccion with: self over: aDivisor
	
	
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:46:35' prior: 50733790!
divisionFraccion: aDivisor 
		
	|newNumerator newDenominator|
	
	newNumerator _  self value * aDivisor denominator .
	newDenominator _ aDivisor numerator .
	
	^ newNumerator / newDenominator .
	
	
	
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:47:32'!
multiplicacionEntero: aMultiplier 
	|newNumerator newDenominator|
	
	(aMultiplier isKindOf: self class) ifTrue: [
		^(numerator * aMultiplier numerator) / (denominator * aMultiplier denominator)		
	].
	
	newNumerator _  self numerator * aMultiplier value .
	newDenominator _ self denominator.
	
	^ newNumerator / newDenominator .
	
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:47:46'!
multiplicacionFraccion: aMultiplier 
	|newNumerator newDenominator|
	
	(aMultiplier isKindOf: self class) ifTrue: [
		^(numerator * aMultiplier numerator) / (denominator * aMultiplier denominator)		
	].
	
	newNumerator _  self numerator * aMultiplier value .
	newDenominator _ self denominator.
	
	^ newNumerator / newDenominator .
	
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:47:57'!
sumaEntero: anAdder 
	
	| newNumerator newDenominator |
	
	(anAdder isKindOf: self class) ifTrue: [
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	] ifFalse: [
		newNumerator _  anAdder value * self denominator +  self  numerator .
		newDenominator _ self denominator.
	].
	
	^newNumerator / newDenominator 
	
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:48:05'!
sumaFraccion: anAdder 
	
	| newNumerator newDenominator |
	
	(anAdder isKindOf: self class) ifTrue: [
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	] ifFalse: [
		newNumerator _  anAdder value * self denominator +  self  numerator .
		newDenominator _ self denominator.
	].
	
	^newNumerator / newDenominator 
	
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:48:13'!
restaEntero: aSubtrahend 
	
	| newNumerator newDenominator |
	(aSubtrahend isKindOf: self class) ifTrue: [
		newNumerator := (numerator * aSubtrahend denominator) - (denominator * aSubtrahend numerator).
		newDenominator := denominator * aSubtrahend denominator.
	] ifFalse: [
		newNumerator _ self  numerator -  (aSubtrahend value * self denominator ).
		newDenominator _ self denominator.
	].
	
	^newNumerator / newDenominator 
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:48:25'!
restaFraccion: aSubtrahend 
	
	| newNumerator newDenominator |
	(aSubtrahend isKindOf: self class) ifTrue: [
		newNumerator := (numerator * aSubtrahend denominator) - (denominator * aSubtrahend numerator).
		newDenominator := denominator * aSubtrahend denominator.
	] ifFalse: [
		newNumerator _ self  numerator -  (aSubtrahend value * self denominator ).
		newDenominator _ self denominator.
	].
	
	^newNumerator / newDenominator 
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:49:36'!
divisionEntero: aDivisor 
	|newNumerator newDenominator|
	
	(aDivisor isKindOf: self class) ifTrue: [
		^(numerator * aDivisor denominator) / (denominator * aDivisor numerator)
	].
	
	newNumerator _  self numerator .
	newDenominator _ self denominator * aDivisor value .
	
	^ newNumerator / newDenominator .
	
	
	
	
		
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:49:49'!
divisionFraccion: aDivisor 
	|newNumerator newDenominator|
	
	(aDivisor isKindOf: self class) ifTrue: [
		^(numerator * aDivisor denominator) / (denominator * aDivisor numerator)
	].
	
	newNumerator _  self numerator .
	newDenominator _ self denominator * aDivisor value .
	
	^ newNumerator / newDenominator .
	
	
	
	
		
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:50:54' prior: 50733922!
divisionEntero: aDivisor 
	^(numerator * aDivisor denominator) / (denominator * aDivisor numerator)
	
	
	
		
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:51:04' prior: 50733935!
divisionFraccion: aDivisor 
	|newNumerator newDenominator|
	
	newNumerator _  self numerator .
	newDenominator _ self denominator * aDivisor value .
	
	^ newNumerator / newDenominator .
	
	
	
	
		
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:51:32' prior: 50733829!
multiplicacionEntero: aMultiplier 
	^(numerator * aMultiplier numerator) / (denominator * aMultiplier denominator)
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:51:46' prior: 50733842!
multiplicacionFraccion: aMultiplier 
	^(numerator * aMultiplier numerator) / (denominator * aMultiplier denominator)		

	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:52:17' prior: 50733888!
restaEntero: aSubtrahend 
	| newNumerator newDenominator |
	(aSubtrahend isKindOf: self class) ifTrue: [
		newNumerator := (numerator * aSubtrahend denominator) - (denominator * aSubtrahend numerator).
		newDenominator := denominator * aSubtrahend denominator.
	] ifFalse: [
		newNumerator _ self  numerator -  (aSubtrahend value * self denominator ).
		newDenominator _ self denominator.
	].
	
	^newNumerator / newDenominator 
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:52:37'!
divisionFrac: aDivisor 
	^(numerator * aDivisor denominator) / (denominator * aDivisor numerator)
	
	
	
		
	! !

Fraccion removeSelector: #divisionEntero:!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:53:06'!
divisionEntero: aDivisor 
	|newNumerator newDenominator|
	
	newNumerator _  self numerator .
	newDenominator _ self denominator * aDivisor value .
	
	^ newNumerator / newDenominator .
	
	
	
	
		
	! !

Fraccion removeSelector: #divisionFraccion:!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:53:24'!
divisionFraccion: aDivisor 
	^(numerator * aDivisor denominator) / (denominator * aDivisor numerator)
	
	
	
		
	! !

Fraccion removeSelector: #divisionFrac:!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:53:35'!
multiplicacionFrac: aMultiplier 
	^(numerator * aMultiplier numerator) / (denominator * aMultiplier denominator)
	! !

Fraccion removeSelector: #multiplicacionEntero:!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:53:46'!
multiplicacionEntero: aMultiplier 
	^(numerator * aMultiplier numerator) / (denominator * aMultiplier denominator)		

	! !

Fraccion removeSelector: #multiplicacionFraccion:!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:54:00' prior: 50734031!
multiplicacionEntero: aMultiplier 
	^(numerator * aMultiplier numerator) / (denominator * aMultiplier denominator)
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:54:32'!
multiplicacionFraccion: aMultiplier 
	^(numerator * aMultiplier numerator) / (denominator * aMultiplier denominator)
	! !

Fraccion removeSelector: #multiplicacionFrac:!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:55:29' prior: 50734040!
multiplicacionEntero: aMultiplier 
	|newNumerator newDenominator|

	newNumerator _  self numerator * aMultiplier value .
	newDenominator _ self denominator.
	
	^ newNumerator / newDenominator .
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:55:53' prior: 50733980!
restaEntero: aSubtrahend 
	| newNumerator newDenominator |

	newNumerator _ self  numerator -  (aSubtrahend value * self denominator ).
	newDenominator _ self denominator.

	^newNumerator / newDenominator 
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:57:15' prior: 50733905!
restaFraccion: aSubtrahend 
	
	| newNumerator newDenominator |
	newNumerator := (numerator * aSubtrahend denominator) - (denominator * aSubtrahend numerator).
	newDenominator := denominator * aSubtrahend denominator.
	
	^newNumerator / newDenominator 
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:58:58' prior: 50733856!
sumaEntero: anAdder 
	
	| newNumerator newDenominator |
	newNumerator _  anAdder value * self denominator +  self  numerator .
	newDenominator _ self denominator.

	
	^newNumerator / newDenominator 
	
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 15:59:14' prior: 50733872!
sumaFraccion: anAdder 
	
	| newNumerator newDenominator |
	
	newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
	newDenominator := denominator * anAdder denominator.
	
	^newNumerator / newDenominator 
	
! !

----SNAPSHOT----(14 September 2019 15:59:22) clase1.image priorSource: 12860249!
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:03:37' prior: 50733438!
* aMultiplier 
	^aMultiplier multiplicacionEntero: self
	
	
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:03:58' prior: 50733602!
+ anAdder 
	anAdder sumaEntero: self
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:04:02' prior: 50734116!
+ anAdder 
	^anAdder sumaEntero: self
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:04:27' prior: 50733589!
- aSubtrahend 
	^aSubtrahend restaEntero: self! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:04:50' prior: 50733478!
/ aDivisor 
	^aDivisor divisionEntero: self
	
	
	
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:06:15' prior: 50733465!
* aMultiplier 
	^aMultiplier multiplicacionFraccion: self
	
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:06:48' prior: 50733402!
+ anAdder 
	
	anAdder sumaFraccion: self
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:06:54' prior: 50734141!
+ anAdder 
	^anAdder sumaFraccion: self
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:07:14' prior: 50733648!
- aSubtrahend 
	^ aSubtrahend restaFraccion: self.
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:08:18' prior: 50733516!
/ aDivisor 
	^aDivisor divisionFraccion: self
	
	
	
	
		
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:14:45' prior: 50733814!
divisionEntero: aNumerator 
	^Fraccion with: aNumerator over: self
	
	
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:18:03' prior: 50733820!
divisionFraccion: aDividend 
		
	|newNumerator newDenominator|
	
	newNumerator _  self value * aDividend denominator .
	newDenominator _ aDividend numerator .
	
	^ newNumerator / newDenominator .
	
	
	
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:18:18' prior: 50734161!
divisionEntero: aDividend 
	^Fraccion with: aDividend over: self
	
	
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:19:32' prior: 50733775!
restaEntero: aSubtrahend 
	^ aSubtrahend integerValue - (self class with: value )
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:20:11' prior: 50734183!
restaEntero: aMinuend 
	^ aMinuend integerValue - (self class with: value )
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:20:55' prior: 50733781!
restaFraccion: aMinuend
	|numerador denominador|
	
	numerador _  aMinuend  numerator -  self value * aMinuend denominator .
	denominador _ aMinuend denominator.
	
	^ numerador / denominador.! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:22:41' prior: 50734004!
divisionEntero: aDividend 
	|newNumerator newDenominator|
	
	newNumerator _  self denominator * aDividend value.
	newDenominator _ self numerator .
	
	^ newNumerator / newDenominator .
	
	
	
	
		
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:23:18' prior: 50734015!
divisionFraccion: aDividend 
	^(denominator * aDividend numerator) / (numerator * aDividend denominator) 
	
	
	
		
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:23:46' prior: 50734066!
restaEntero: aMinuend 
	| newNumerator newDenominator |

	newNumerator _ aMinuend value * self denominator - self  numerator.
	newDenominator _ self denominator.

	^newNumerator / newDenominator 
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:24:05' prior: 50734076!
restaFraccion: aMinuend 
	
	| newNumerator newDenominator |
	newNumerator := (numerator * aMinuend denominator) - (denominator * aMinuend numerator).
	newDenominator := denominator * aMinuend denominator.
	
	^newNumerator / newDenominator 
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:24:27' prior: 50734231!
restaFraccion: aMinuend 
	
	| newNumerator newDenominator |
	newNumerator := (denominator * aMinuend numerator) - (numerator * aMinuend denominator).
	newDenominator := denominator * aMinuend denominator.
	
	^newNumerator / newDenominator 
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:27:02' prior: 50734189!
restaEntero: aMinuend 
	^ self class with: (aMinuend integerValue -  value )
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:28:37' prior: 50734204!
divisionEntero: aDividend 
	|newNumerator newDenominator|
	
	newNumerator _  self numerator.
	newDenominator _  self denominator * aDividend value.
	
	^ newNumerator / newDenominator .
	
	
	
	
		
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:30:08' prior: 50734259!
divisionEntero: aDividend 
	|newNumerator newDenominator|
	
	newNumerator _   self denominator * aDividend value.
	newDenominator _ self numerator.
	
	^ newNumerator / newDenominator .
	
	
	
	
		
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:30:22' prior: 50734167!
divisionFraccion: aDividend 
		
	|newNumerator newDenominator|
	
	newNumerator _   aDividend numerator .
	newDenominator _ self value * aDividend denominator.
	
	^ newNumerator / newDenominator .
	
	
	
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:32:14' prior: 50734195!
restaFraccion: aMinuend
	|numerador denominador|
	
	numerador _  aMinuend  numerator - ( self value * aMinuend denominator) .
	denominador _ aMinuend denominator.
	
	^ numerador / denominador.! !

----SNAPSHOT----(14 September 2019 16:32:23) clase1.image priorSource: 12878610!
!Numero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:34:02'!
sumaEntero: anAdder

	self subclassResponsibility ! !
!Numero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:34:11'!
sumaFraccion: anAdder

	self subclassResponsibility ! !
!Numero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:34:17'!
restaFraccion: anAdder

	self subclassResponsibility ! !
!Numero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:34:23'!
multiplicacionFraccion: anAdder

	self subclassResponsibility ! !
!Numero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:34:29'!
divisionFraccion: anAdder

	self subclassResponsibility ! !
!Numero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:34:35'!
divisionEntero: anAdder

	self subclassResponsibility ! !
!Numero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:34:40'!
restaEntero: anAdder

	self subclassResponsibility ! !
!Numero methodsFor: 'arithmetic operations' stamp: 'gc 9/14/2019 16:34:46'!
multiplicacionEntero: anAdder

	self subclassResponsibility ! !

Entero subclass: #Zero
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

Entero subclass: #cero
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

Entero subclass: #Cero
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

Entero subclass: #NumberZero
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

----SNAPSHOT----(14 September 2019 16:38:41) clase1.image priorSource: 12884707!

Entero subclass: #Zeas
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

Entero subclass: #Zero
	instanceVariableNames: 'zeroValue'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!

!classDefinition: #Zero category: #'Numero-Exercise'!
Entero subclass: #Zero
	instanceVariableNames: 'zeroValue'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Exercise'!
!Zero methodsFor: 'no messages' stamp: 'gc 9/14/2019 16:40:11'!
+ anAdder
	^anAdder! !
!Zero methodsFor: 'as yet unclassified' stamp: 'gc 9/14/2019 16:40:22' prior: 50734374!
+ anAdder
	^anAdder! !
!Zero methodsFor: 'as yet unclassified' stamp: 'gc 9/14/2019 16:40:32'!
- anAdder
	^anAdder negated ! !
!Zero methodsFor: 'as yet unclassified' stamp: 'gc 9/14/2019 16:40:42'!
* anAdder
	^self! !
!Zero methodsFor: 'as yet unclassified' stamp: 'gc 9/14/2019 16:41:17'!
/ anAdder
	^self! !
!Zero methodsFor: 'as yet unclassified' stamp: 'gc 9/14/2019 16:42:15'!
fibonacci
	^Entero one! !
!Zero methodsFor: 'as yet unclassified' stamp: 'gc 9/14/2019 16:42:44' prior: 50734391!
fibonacci
	^ Entero with: 1! !
>>>>>>> 0966ce8fc113ca70db137ca890ca2fd3ef6e982f
